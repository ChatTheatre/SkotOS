<HTML>
  <HEAD><TITLE>$(Theatre.GameBrief) (Skotos Java Client)</TITLE></HEAD>
  <BODY alink="#660099" leftmargin="0" marginheight="0" marginwidth="0" topmargin="0" text="black" vlink="black" link="black" background="$(Theatre.RealmURL)background.jpg" onLoad="initialize_this();">

    $[ $memoryleak = Flt($zealous) < 0.5; ]

    <INSERT page="/Theatre/Java/jsstd-include.sam"/>

    <script language="javascript"><?hide

    /*
     * Array of right hand menus to incorporate with the Skotos command
     * execution.
     */
    document.right_hand = new Array(
              "elementDo",
	      "elementHelp",
              "lookat",
              "lookat_obj",
              "lookat_inv",
              "lookat_exits",
              "elementTheme",
	      "elementStaff" );

    document.right_click = new Array(
              "elementGoNW",
              "elementGoN",
              "elementGoNE",
              "elementGoE",
              "elementGoSE",
              "elementGoS",
              "elementGoSW",
              "elementGoW" );

    document.right_opener = new Array(
              "elementSkotos",
              "elementStarting",
              "elementMastering" );

    function query_right_hand() {
        return document.right_hand;
    }

    function query_right_click() {
        return document.right_click;
    }
    
    function arrayedEvents(rlist, fun, eventSignal)
    {
	var len = rlist.length;

	while (len) {
	    len --;
	    if (document.getElementById(rlist[len])) {
		eval( "function wp_"+rlist[len]+"() { document."+fun+"( '"+rlist[len]+"' ); } document.getElementById('"+rlist[len]+"')."+eventSignal+" = wp_"+rlist[len]+";" );
	    }
	}
    } 

    function wrap_skotos_events()
    {
        arrayedEvents(document.right_hand,   "rs", "onchange");
        arrayedEvents(document.right_click,  "rc", "onclick");
        arrayedEvents(document.right_opener, "ro", "onclick");
    }

    function initialize_this() {
        document.pageLoaded = true;
        this["MapHREF"] = "map.jpg";
	if (!$memoryleak) {
	    // Only for versions newer than 0.5:
	    wrap_skotos_events();
	}
    }

    function sendCommand(msg) {
	if (this["chatMode"]) {
	    msg = "/" + msg;
	}
	if (document.pendingCommands) {
	    if (document.pendingCommands.length == 100) {
		// arbitrary point to suspect something is wrong                  
		document.pendingCommands.shift();
	    }
	    document.pendingCommands.push(msg);
	} else {
	    document.pendingCommands = new Array(msg);
	}
    }

    function popupMapWindow() {
        popupArtWin(this["MapHREF"], 'Map', '$(Theatre.GameBrief) Overview Map');
    }

    function updateAll() {
       if (!this["updateDirty"]) {
	  this["updateDirty"] = true;
	  setTimeout("doUpdateAll()", 20);
       }
    }

    function doUpdateAll() {
	this["updateDirty"] = false;

	if (document.all || true /* mozilla */) {
	var lookat = document.getElementById("lookat");
	    for (count = lookat.length; count > 0; count--) {
		lookat.remove(0);
	    }
	var lookat_obj = document.getElementById("lookat_obj");
	    for (count = lookat_obj.length; count > 0; count--) {
		lookat_obj.remove(0);
	    }
	var lookat_inv = document.getElementById("lookat_inv");
	    for (count = lookat_inv.length; count > 0; count--) {
		lookat_inv.remove(0);
	    }
	var lookat_exits = document.getElementById("lookat_exits");
	    for (count = lookat_exits.length; count > 0; count--) {
		lookat_exits.remove(0);
	    }
	    var oOption = document.createElement("OPTION");
	    oOption.text="(look at person...)";
	    oOption.value=""
	    lookat.appendChild(oOption);
	    var oOption = document.createElement("OPTION");
	    oOption.text="(examine object...)";
	    oOption.value=""
	    lookat_obj.appendChild(oOption);
	    var oOption = document.createElement("OPTION");
	    oOption.text="room";
	    oOption.value="examine";
	    lookat_obj.appendChild(oOption);
	    var oOption = document.createElement("OPTION");
	    oOption.text="(examine inventory...)";
	    oOption.value=""
	    lookat_inv.appendChild(oOption);
	    var oOption = document.createElement("OPTION");
	    oOption.text="(go ...)";
	    oOption.value=""
	    lookat_exits.appendChild(oOption);

	    for (var ix in this["playerSet"]) {
		var oOption = document.createElement("OPTION");
		oOption.text=this["playerSet"][ix];
		oOption.value="look at "+this["playerSet"][ix];
		lookat.appendChild(oOption);
	    }
	    for (var ix in this["objectSet"]) {
		var oOption = document.createElement("OPTION");
		oOption.text=this["objectSet"][ix];
		oOption.value="examine "+this["objectSet"][ix];
		lookat_obj.appendChild(oOption);
	    }
	    for (var ix in this["invSet"]) {
		var oOption = document.createElement("OPTION");
		oOption.text=this["invSet"][ix];
		oOption.value="examine "+this["invSet"][ix];
		lookat_inv.appendChild(oOption);
	    }
	    for (var ix in this["exitSet"]) {
		var oOption = document.createElement("OPTION");
		oOption.text=this["exitSet"][ix];
		oOption.value="go "+[ix];
		lookat_exits.appendChild(oOption);
	    }
	} else {
	    var option0, counter, ix;

	    // The Netscape Way.
	    document.SkotosCommands.lookat.length = 0;
	    document.SkotosCommands.lookat_obj.length = 0;
	    document.SkotosCommands.lookat_inv.length = 0;
	    document.SkotosCommands.lookat_exits.length = 0;

	    option0 = new Option("(look at person...)", "");
	    document.SkotosCommands.lookat.options[0] = option0;

	    counter = 1;
	    for (ix in this["playerSet"]) {
		option0 = new Option(this["playerSet"][ix], "look at " + this["playerSet"][ix]);
		document.SkotosCommands.lookat.options[counter] = option0;
		counter++;
	    }

	    option0 = new Option("(examine object...)", "");
	    document.SkotosCommands.lookat_obj.options[0] = option0;
	    option0 = new Option("room", "examine");
	    document.SkotosCommands.lookat_obj.options[1] = option0;

	    counter = 2;
	    for (ix in this["objectSet"]) {
		option0 = new Option(this["objectSet"][ix], "examine " + this["objectSet"][ix]);
		document.SkotosCommands.lookat_obj.options[counter] = option0;
		counter++;
	    }

	    option0 = new Option("(examine inventory...)", "");
	    document.SkotosCommands.lookat_inv.options[0] = option0;

	    counter = 1;
	    for (ix in this["invSet"]) {
		option0 = new Option(this["invSet"][ix], "examine " + this["invSet"][ix]);
		document.SkotosCommands.lookat_inv.options[counter] = option0;
		counter++;
	    }

	    option0 = new Option("(go...)", "");
	    document.SkotosCommands.lookat_exits.options[0] = option0;

	    counter = 1;
	    for (ix in this["exitSet"]) {
		option0 = new Option(this["exitSet"][ix], "go " + ix);
		document.SkotosCommands.lookat_exits.options[counter] = option0;
		counter++;
	    }
	}
    }

    function clearPlayers() {
	this["playerSet"] = new Object();
	updateAll();
    }

    function addPlayer(str) {
	var ix, pos, name;

	pos = str.indexOf(' ');
	if (pos >= 0) {
	    ix = str.substring(0, pos);
	    name = str.substring(pos+1);
	    if (this["playerSet"] == null) {
		this["playerSet"] = new Object();
	    }
	    this["playerSet"][ix] = name;
	    updateAll();
	}
    }

    function removePlayer(ix) {
	if (this["playerSet"] && this["playerSet"][ix]) {
	    delete this["playerSet"][ix];
	    updateAll();
	}
    }

    function clearObjects() {
	this["objectSet"] = new Object();
	updateAll();
    }

    function addObject(str) {
	var ix, pos, name;

	pos = str.indexOf(' ');
	if (pos >= 0) {
	    ix = str.substring(0, pos);
	    name = str.substring(pos+1);
	    if (this["objectSet"] == null) {
		this["objectSet"] = new Object();
	    }
	    this["objectSet"][ix] = name;
	    updateAll();
	}
    }

    function removeObject(ix) {
	if (this["objectSet"] && this["objectSet"][ix]) {
	    delete this["objectSet"][ix];
	    updateAll();
	}
    }

    function clearInventory() {
	this["invSet"] = new Object();
	updateAll();
    }

    function addInventory(str) {
	var ix, pos, name;

	pos = str.indexOf(' ');
	if (pos >= 0) {
	    ix = str.substring(0, pos);
	    name = str.substring(pos+1);
	    if (this["invSet"] == null) {
		this["invSet"] = new Object();
	    }
	    this["invSet"][ix] = name;
	    updateAll();
	}
    }

    function removeInventory(ix) {
	if (this["invSet"] && this["invSet"][ix]) {
	    delete this["invSet"][ix];
	    updateAll();
	}
    }

    function clearExits() {
      this["exitSet"] = new Object();
      updateAll();
    }

    function addExit(str) {
      var ix, pos, name;

      pos = str.indexOf(' ');
      if (pos >= 0) {
	ix = str.substring(0, pos);
	name = str.substring(pos+1);
	if (ix == "NONE") {
	  ix = name;
	}
	if (this["exitSet"] == null) {
	    this["exitSet"] = new Object();
	}
	this["exitSet"][ix] = name;
	updateAll();
    //    alert('exit ' + name + ' added');
      }
    }

    function setChatmodeOn() {
        if (!this["chatMode"]) {
	    this["chatMode"] = true;
	}
        document.chatMode = true;
    }

    function setChatmodeOff() {
        if (this["chatMode"]) {
	    this["chatMode"] = false;
	}
        document.chatMode = false;
    }

    function setMapHREF(msg) {
        this["MapHREF"] = msg;
    }
?></script>


<img id="Right_Strip" alt="Right Graphic"
		src="$(Theatre.RealmURL)edgeright.jpg" border=0
		style="position:absolute; z-index=0; top:0px; left:0px"/>

<a href="#" id="elementSkotos" title="http://www.skotos.net">
<img id="Skotos_Logo" alt="Skotos Logo"
		src="$(Theatre.RealmURL)skotoslogo.jpg" border=0
		style="position:absolute; z-index=1; top:0px; left:0px"/>
</a>

<a href="#" id="elementStarting" title="/Theatre/starting.sam">
<img id="Getting_Started" alt="Getting Started"
		src="$(Theatre.RealmURL)started.gif" border=0
		style="position:absolute; z-index=1; top:71px; left:2px"/>
</a>

<a href="#" id="elementMastering" title="/Theatre/mastering.sam">
<img id="Mastering_Chat" alt="Mastering Chat"
		src="$(Theatre.RealmURL)mastering.gif" border=0
		style="position:absolute; z-index=1; top:92px; left:2px"/>
</a>

{? | $memoryleak |
 <div style="position:absolute; bottom:15px; right:5px">
 <a name="bigMapLink" href="javascript:popupMapWindow();"><img name="mapImage" id="Map" alt="Map"	src="$(Theatre.RealmURL)map-loading.gif" border=1 style="z-index=1"/></a>

 <a href="javascript:sendCommand('go northwest');"><img name="compassNW" id="compassNW" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; top:1px; left:1px"/></a>

<a href="javascript:sendCommand('go north');">
<img name="compassN" id="compassN"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; top:1px; left:53px"/>
</a>

<a href="javascript:sendCommand('go northeast');">
<img name="compassNE" id="compassNE"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; top:1px; right:1px"/>
</a>

<a href="javascript:sendCommand('go west');">
<img name="compassW" id="compassW"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; top:52px; left:1px"/>
</a>

<a href="javascript:sendCommand('go east');">
<img name="compassE" id="compassE"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; top:52px; right:1px"/>
</a>

<a href="javascript:sendCommand('go southwest');">
<img name="compassSW" id="compassSW"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; bottom:1px; left:1px"/>
</a>

<a href="javascript:sendCommand('go south');">
<img name="compassS" id="compassS"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; bottom:1px; left:53px"/>
</a>

<a href="javascript:sendCommand('go southeast');">
<img name="compassSE" id="compassSE"
	src="$(Theatre.RealmURL)blank.gif" border=0
	style="position:absolute; z-index=2; bottom:1px; right:1px"/>
</a>
</div>
<div id=commandPopup style="position:absolute; font-size: smaller; z-index=3; top:129px; left:4px; overflow: hidden; width: 120px; overflow: hidden; margin=5" >
<select size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0;"
style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(do a...)</option>
<option value="bow">bow</option>
<option value="curtsy">curtsy</option>
<option value="examine">examine</option>
<option value="exits">exits</option>
<option value="inventory">inventory</option>
<option value="look">look</option>
<option value="nod">nod</option>
<option value="smile">smile</option>
</select>
<select  size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0"
style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(help on...)</option>
<option value="@tip">Next Tip</option>
<option value="@help basics">Using Help</option>
<option value="@help concepts">Topic Overview</option>
<option value="@help communicate">Communication</option>
<option value="@help movement">Movement</option>
<option value="@help manipulation">Object Usage</option>
<option value="@help perception">Perception</option>
</select>
<select id=lookat size=1
onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0"
style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(look at person...)</option>
</select>
<select id=lookat_obj size=1
onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0"
style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(examine object...)</option>
<option value="examine">room</option>
</select>
<select id=lookat_inv size=1
onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0"
style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(examine inventory)</option>
</select>
<select id=lookat_exits size=1
onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(go...)</option>
</select>
<select size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(Select a theme ...)</option>
$[ int i, sz; 
   string *colours, *themes, output; 
   mapping map, themes_map; 
        
   map = ${TextIF:Themes}."*"; 
   sz = map_sizeof(map); 
   colours = map_indices(map); 
   themes_map = ([ ]); 
   for (i = 0; i < sz; i++) { 
       string theme; 
 
       if (sscanf(colours[i], "colours:%s:", theme)) { 
           themes_map[theme] = TRUE; 
       } 
   } 
   themes = map_indices(themes_map);
   output = "";
   sz = sizeof(themes);
   for (i = 0; i < sz; i++) {
       output += "<OPTION value='@profile theme " + themes[i] + "'>" + capitalize(themes[i]) + "</OPTION>";
   }
   return ParseXML(output);
 ]
</select>
</div>
|
<div style="position:absolute; bottom:15px; right:5px">
  <a name="bigMapLink" href="javascript:popupMapWindow();"><img name="mapImage" id="Map" alt="Map"	src="$(Theatre.RealmURL)map-loading.gif" border=1 style="z-index=1"/></a>
  <a href="#" id="elementGoNW" title="go northwest"><img name="compassNW" id="compassNW" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; top:1px; left:1px"/></a>
  <a href="#" id="elementGoN"  title="go north"><img name="compassN" id="compassN" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; top:1px; left:53px"/></a>
  <a href="#" id="elementGoNE" title="go northeast"><img name="compassNE" id="compassNE" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; top:1px; right:1px"/></a>
  <a href="#" id="elementGoW"  title="go west"><img name="compassW" id="compassW" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; top:52px; left:1px"/></a>
  <a href="#" id="elementGoE"  title="go east"><img name="compassE" id="compassE" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; top:52px; right:1px"/></a>
  <a href="#" id="elementGoSW" title="go southwest"><img name="compassSW" id="compassSW" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; bottom:1px; left:1px"/></a>
  <a href="#" id="elementGoS"  title="go south"><img name="compassS" id="compassS" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; bottom:1px; left:53px"/></a>
  <a href="#" id="elementGoSE" title="go southeast"><img name="compassSE" id="compassSE" src="$(Theatre.RealmURL)blank.gif" border=0 style="position:absolute; z-index=2; bottom:1px; right:1px"/></a>
</div>
<div id=commandPopup style="position:absolute; font-size: smaller; z-index=3; top:129px; left:4px; overflow: hidden; width: 120px; overflow: hidden; margin=5" >
  <select id="elementDo" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(do a...)</option>
    <option value="bow">bow</option>
    <option value="curtsy">curtsy</option>
    <option value="examine">examine</option>
    <option value="exits">exits</option>
    <option value="inventory">inventory</option>
    <option value="look">look</option>
    <option value="nod">nod</option>
    <option value="smile">smile</option>
  </select>
  <select id="elementHelp" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(help on...)</option>
    <option value="@tip">Next Tip</option>
    <option value="@help basics">Using Help</option>
    <option value="@help concepts">Topic Overview</option>
    <option value="@help communicate">Communication</option>
    <option value="@help movement">Movement</option>
    <option value="@help manipulation">Object Usage</option>
    <option value="@help perception">Perception</option>
  </select>
  <select id="lookat" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(look at person...)</option>
  </select>
  <select id="lookat_obj" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(examine object...)</option>
    <option value="examine">room</option>
  </select>
  <select id="lookat_inv" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(examine inventory)</option>
  </select>
  <select id="lookat_exits" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(go...)</option>
  </select>
  <select id="elementTheme" size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
    <option value="">(Select a theme ...)</option>
$[ int i, sz; 
   string *colours, *themes, output; 
   mapping map, themes_map; 
        
   map = ${TextIF:Themes}."*"; 
   sz = map_sizeof(map); 
   colours = map_indices(map); 
   themes_map = ([ ]); 
   for (i = 0; i < sz; i++) { 
       string theme; 
 
       if (sscanf(colours[i], "colours:%s:", theme)) { 
           themes_map[theme] = TRUE; 
       } 
   } 
   themes = map_indices(themes_map);
   output = "";
   sz = sizeof(themes);
   for (i = 0; i < sz; i++) {
       output += "<OPTION value='@profile theme " + themes[i] + "'>" + capitalize(themes[i]) + "</OPTION>";
   }
   return ParseXML(output);
 ]
  </select>
{? | $(UDat.Host) |
  <select id=elementStaff size=1 style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; overflow: hidden; width: 120px">
<option value="">(staff-action...)</option>
<option value="+to wo vi %(here)">View room</option>
<option value="+chatlines">Chatlines</option>
<option value="+obname here">Room info</option>
<option value="+obname me">Character info</option>
<option value="+who">Who, what, where</option>
<option value="+hotspots">Hotspots</option>
<option value="+customers">Customers</option>
<option value="+staff">Staff</option>
<option value="+tas">TAS</option>
</select>
|}
</div>
}
</BODY>
</HTML>
