<HTML lang="en">
  <HEAD>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <TITLE>$(Theatre.GameBrief) (Skotos Flash Client)</TITLE>
    <SCRIPT src="http://www.skotos.net/clients/generic/AC_OETags.js" language="javascript"></SCRIPT>
    <SCRIPT src="http://www.skotos.net/clients/generic/basic.js" language="javascript"></SCRIPT>
    <STYLE><?hide
BODY {
    padding: 0px;
    margin:  0px;

    background: url($(Theatre.RealmURL)background.jpg);
}
    ?></STYLE>
    <SCRIPT language="JavaScript"><?hide
      var jsReady = false;

      if (window.opener) {
          window.openerLoc = window.opener.location.href;
          window.openerName = window.opener.window.name;
      }

      function openerWin(filename) {
          if (filename != "") {
	      if (!window.opener || window.opener.closed) {
                  window.open(filename,window.openerName);
		  return;
	      } else {
	          window.opener.focus();
		  window.opener.location.href = filename;
		  return;
	      }
	  } else {
	      if (window.opener.closed) {
	          window.open(window.openerLoc,window.openerName);
		  return;
	      } else {
		  window.opener.focus();
		  return;
	      }
	 }
      }

      function isReady() {
          return jsReady;
      }

      function locate() {
	  var elements = new Array();
	  for (var i = 0; i < arguments.length; i++) {
		  var element = arguments[i];
		  if (typeof element == 'string') {
			  if (document.getElementById) {
				  element = document.getElementById(element);
			  } else if (document.all) {
				  element = document.all[element];
			  }
		  }
		  if (arguments.length == 1) {
			  return element;
		  }
		  elements.push(element);
	  }
	  return elements;
      }

      function DoResize() {
          var width  = document.body.clientWidth;
          var height = document.body.clientHeight;
          locate('Right_Strip').style.left     = width - 136;
          locate('Skotos_Logo').style.left     = width - 136;
          locate('Getting_Started').style.left = width - 128;
          locate('Mastering_Chat').style.left  = width - 128;
          locate('commandPopup').style.left    = width - 135;
          locate('mapImage').style.left        = width - 128;
          locate('mapImage').style.top         = height - 128 - 10;

	  locate('compassNW').style.left       = width - 132;
	  locate('compassW').style.left        = width - 132;
	  locate('compassSW').style.left       = width - 132;

	  locate('compassN').style.left        = width - 76;
	  locate('compassS').style.left        = width - 76;

	  locate('compassNE').style.left       = width - 14;
	  locate('compassE').style.left        = width - 14;
	  locate('compassSE').style.left       = width - 14;

	  locate('compassNW').style.top        = height - 142;
	  locate('compassN').style.top         = height - 142;
	  locate('compassNE').style.top        = height - 142;

	  locate('compassW').style.top         = height - 80;
	  locate('compassE').style.top         = height - 80 

	  locate('compassSW').style.top        = height - 24;
	  locate('compassS').style.top         = height - 24;
	  locate('compassSE').style.top        = height - 24;

          locate('Client_Div').style.width     = width - 272;
          locate('Client_Div').style.height    = height;
      }

      function pageInit() {
          window.onresize = DoResize;
          jsReady = true;
          focusMovie();
          DoResize();
      }

      function focusMovie() {
          var movie;

          movie = thisMovie("Client");
          if (movie) movie.focus();
      }

      function thisMovie(movieName) {
          if (navigator.appName.indexOf("Microsoft") != -1) {
              return window[movieName];
          } else {
              return document[movieName];
          }
      }

      function sendCommand(value) {
          var movie;

          movie = thisMovie("Client");
          if (movie) {
              try {
                  movie.sendCommand(value);
              } catch (err) {
                  alert("Error: " + err);
              }
          }
      }

      function updateCompass(bitfield, image, dir, bit) {
	  if (bitfield & bit) {
	      locate(image).src = "$(Theatre.RealmURL)arrows/" + dir + "-ex.gif";
	  } else {
	      locate(image).src = "$(Theatre.RealmURL)arrows/" + dir + "-noex.gif";
	  }
      }

      function updateAll() {
          if (!this["updateDirty"]) {
              this["updateDirty"] = true;
              setTimeout("doUpdateAll()", 20);
          }
      }

      function clearSelect(obj) {
          var count;

          if (obj.children) {
	      for (count = obj.children.length; count > 0; count--) {
		  obj.remove(0);
	      }
          } else {
	      for (count = obj.length; count > 0; count--) {
		  obj.remove(0);
	      }
          }
      }

      function addOption(obj, text, value) {
          var opt = document.createElement("OPTION");
          opt.text = text;
          opt.value = value;
          if (document.all) {
              obj.add(opt);
          } else {
              obj.appendChild(opt);
          }
      }

      function doUpdateAll() {
          var prefix;

          this["updateDirty"] = false;

          if (this["chatMode"]) {
              prefix = "/";
          } else {
              prefix = "";
          }

          // Recreate the lookat select:

          var lookat = locate('lookat');
          clearSelect(lookat);
          addOption(lookat, "(look at person...)", "");
	  for (var ix in this["playerSet"]) {
              addOption(lookat, this["playerSet"][ix], prefix+"look at "+this["playerSet"][ix]);
	  }

          // Recreate the lookat_obj select:

          var lookat_obj = locate('lookat_obj');
          clearSelect(lookat_obj);
          addOption(lookat_obj, "(examine object...)", "");
          addOption(lookat_obj, "room", prefix + "examine");
	  for (var ix in this["objectSet"]) {
	      addOption(lookat_obj, this["objectSet"][ix], prefix+"examine "+this["objectSet"][ix]);
	  }

          // Recreate the lookat_inv select:

          var lookat_inv = locate('lookat_inv');
          clearSelect(lookat_inv);
          addOption(lookat_inv, "(examine inventory...)", "");
	  for (var ix in this["invSet"]) {
              addOption(lookat_inv, this["invSet"][ix], prefix+"examine "+this["invSet"][ix]);
	  }

          // Recreate the lookat_exits select:
          var lookat_exits = locate('lookat_exits');
          clearSelect(lookat_exits);
          addOption(lookat_exits, "(go ...)", "");
	  for (var ix in this["exitSet"]) {
              addOption(lookat_exits, this["exitSet"][ix], prefix+"go "+[ix]);
	  }
      }

      function clearPlayers() {
	  this["playerSet"] = new Object();
	  updateAll();
      }

      function addPlayer(str) {
	  var ix, pos, name;

	  pos = str.indexOf(' ');
	  if (pos >= 0) {
	      ix = str.substring(0, pos);
	      name = str.substring(pos+1);
	      if (this["playerSet"] == null) {
		  this["playerSet"] = new Object();
	      }
	      this["playerSet"][ix] = name;
	      updateAll();
	  }
      }

      function removePlayer(ix) {
	  if (this["playerSet"] && this["playerSet"][ix]) {
	      delete this["playerSet"][ix];
	      updateAll();
	  }
      }

      function clearObjects() {
	  this["objectSet"] = new Object();
	  updateAll();
      }

      function addObject(str) {
	  var ix, pos, name;

	  pos = str.indexOf(' ');
	  if (pos >= 0) {
	      ix = str.substring(0, pos);
	      name = str.substring(pos+1);
	      if (this["objectSet"] == null) {
		  this["objectSet"] = new Object();
	      }
	      this["objectSet"][ix] = name;
	      updateAll();
	  }
      }

      function removeObject(ix) {
	  if (this["objectSet"] && this["objectSet"][ix]) {
	      delete this["objectSet"][ix];
	      updateAll();
	  }
      }

      function clearInventory() {
	  this["invSet"] = new Object();
	  updateAll();
      }

      function addInventory(str) {
	  var ix, pos, name;

	  pos = str.indexOf(' ');
	  if (pos >= 0) {
	      ix = str.substring(0, pos);
	      name = str.substring(pos+1);
	      if (this["invSet"] == null) {
		  this["invSet"] = new Object();
	      }
	      this["invSet"][ix] = name;
	      updateAll();
	  }
      }

      function removeInventory(ix) {
	  if (this["invSet"] && this["invSet"][ix]) {
	      delete this["invSet"][ix];
	      updateAll();
	  }
      }

      function clearExits() {
	  this["exitSet"] = new Object();
	  updateAll();
      }

      function addExit(str) {
	  var ix, pos, name;

	  pos = str.indexOf(' ');
	  if (pos >= 0) {
	      ix = str.substring(0, pos);
	      name = str.substring(pos+1);
	      if (ix == "NONE") {
		ix = name;
	      }
	      if (this["exitSet"] == null) {
		  this["exitSet"] = new Object();
	      }
	      this["exitSet"][ix] = name;
	      updateAll();
	  }
      }

      function newSkootMessage(num, msg) {
          var div = document.getElementById("console");

          if        (num == 1) {
              locate('mapImage').src = msg;
          } else if (num == 2) {
              popupArtWin(msg, 'Art', 'Skotos Art');
              focusMovie();
          } else if (num == 5) {
              msg = parseInt(msg);
              updateCompass(msg, 'compassN',  "n",    1);
              updateCompass(msg, 'compassNE', "ne",   2);
              updateCompass(msg, 'compassE',  "e",    4);
              updateCompass(msg, 'compassSE', "se",   8);
              updateCompass(msg, 'compassS',  "s",   16);
              updateCompass(msg, 'compassSW', "sw",  32);
              updateCompass(msg, 'compassW',  "w",   64);
              updateCompass(msg, 'compassNW', "nw", 128);
          } else if (num == 6) {
              popupWin(msg, 'SkotosAnyURL', 800, 600);
              focusMovie();
          } else if (num == 20) {
              clearPlayers(msg);
          } else if (num == 21) {
              addPlayer(msg);
          } else if (num == 22) {
              removePlayer(msg);
          } else if (num == 30) {
              clearObjects(msg);
          } else if (num == 31) {
              addObject(msg);
          } else if (num == 32) {
              removeObject(msg);
          } else if (num == 40) {
              clearInventory(msg);
          } else if (num == 41) {
              addInventory(msg);
          } else if (num == 42) {
              removeInventory(msg);
          } else if (num == 50) {
              clearExits(msg);
          } else if (num == 51) {
	      addExit(msg);
          } else if (num == 60) {
              if (!this["chatMode"]) {
	          this["chatMode"] = true;
                  updateAll();
              }
          } else if (num == 61) {
              if (this["chatMode"]) {
                  this["chatMode"] = false;
                  updateAll();
              }
          } else if (num == 70) {
              popupWin(msg, 'SkotosToolSourceView', 800, 600);
              focusMovie();
          }
      }

      function getHost() {
          return '$(System.HostName)';
      }

      function getPort() {
          return '$(System.TextPort)';
      }

      function getChar() {
          return "";
      }

      function getEmailURL() {
          return "http://www.skotos.net/clients/ninox/email.php";
      }

      function dacookie() {
          return document.cookie;
      }
?></SCRIPT>
  </HEAD>
  <BODY onload="pageInit();" text="black" vlink="black" link="black">
    <IMG id="Left_Graphic" alt="Left Graphic"
		src="$(Theatre.RealmURL)edgeleft.jpg" border=0
		style="position:absolute; z-index:0; top:0px; left:0px" />
    <A href="javascript:openerWin('/');">
    <IMG id="Chat_Theatre" alt="Grand Theatre"
		src="$(Theatre.RealmURL)gamelogo.gif" border=0
		style="position:absolute; z-index:1; top:0px; left:0px" />
    </A>
    <IMG id="Right_Strip" alt="Right Graphic"
		src="$(Theatre.RealmURL)edgeright.jpg" border=0
		style="position:absolute; z-index:0; top:0px; left:628px" />
    <A href="javascript:openerWin('http://www.skotos.net/');">		
    <IMG id="Skotos_Logo" alt="Skotos Logo"
		src="$(Theatre.RealmURL)skotoslogo.jpg" border=0
		style="position:absolute; z-index:1; top:0px; left:628px" />
    </A>
    <A href="javascript:openerWin('/Theatre/starting.sam');">
    <IMG id="Getting_Started" alt="Getting Started"
		src="$(Theatre.RealmURL)started.gif" border=0
		style="position:absolute; z-index:1; top:71px; left:630px" />
    </A>
    <A href="javascript:openerWin('/Theatre/mastering.sam');">
    <IMG id="Mastering_Chat" alt="Mastering Chat"
		src="$(Theatre.RealmURL)mastering.gif" border=0
		style="position:absolute; z-index:1; top:92px; left:630px" />
    </A>
    <div id="commandPopup" style="position:absolute; font-size: smaller; z-index:3; top:129px; left:628px; width:120px; margin:5">
<select size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0;" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px">
  <option value="">(do a...)</option>
  <option value="bow">bow</option>
  <option value="curtsy">curtsy</option>
  <option value="examine">examine</option>
  <option value="exits">exits</option>
  <option value="inventory">inventory</option>
  <option value="look">look</option>
  <option value="nod">nod</option>
  <option value="smile">smile</option>
</select><sbr />
<select  size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px">
  <option value="">(help on...)</option>
  <option value="@tip">Next Tip</option>
  <option value="@help basics">Using Help</option>
  <option value="@help concepts">Topic Overview</option>
  <option value="@help communicate">Communication</option>
  <option value="@help movement">Movement</option>
  <option value="@help manipulation">Object Usage</option>
  <option value="@help perception">Perception</option>
</select><sbr />
<select id='lookat' size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px"><option value="">(look at person...)</option></select><sbr />
<select id='lookat_obj' size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px"><option value="">(examine object...)</option><option value="examine">room</option></select><sbr />
<select id='lookat_inv' size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px"><option value="">(examine inventory)</option></select><sbr />
<select id='lookat_exits' size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px"><option value="">(go...)</option></select><sbr />
<select size=1 onchange="sendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width:120px"><option value="">(Select a theme ...)</option>
$[ int i, sz; 
   string *colours, *themes, *p_themes, output; 
   mapping map, themes_map; 
        
   map = ${TextIF:Themes}."*"; 
   sz = map_sizeof(map); 
   colours = map_indices(map); 
   themes_map = ([ ]); 
   for (i = 0; i < sz; i++) { 
       string theme;

       if (sscanf(colours[i], "colours:%s:", theme)) {
           themes_map[theme] = TRUE;
       }
   } 
   themes = map_indices(themes_map);
   output = "";
   sz = sizeof(themes);
   p_themes = allocate(sz);
   for (i = 0; i < sz; i++) {
       if (sscanf(themes[i], "p_%*s")) {
           p_themes[i] = themes[i][2..];
       } else {
           output += "<OPTION value='@profile theme " + themes[i] + "'>" + capitalize(themes[i]) + "</OPTION>";
       }
   }
   p_themes -= ({ nil });
   sz = sizeof(p_themes);
   if (sz > 0) {
       output += "<OPTION value=''>-- Personal Themes --</OPTION>";
       for (i = 0; i < sz; i++) {
           output += "<OPTION value='@profile theme p_" + p_themes[i] + "'>" + capitalize(p_themes[i]) + "</OPTION>";
       }
   }
   return ParseXML(output);
 ]
</select>
    </DIV>
    <A name="bigMapLink" href="javascript:popupArtWin('$(Theatre.BigMapURL)', 'Map', '$(Theatre.GameBrief) Overview Map')"><img id="mapImage" alt="Map" src="$(Theatre.RealmURL)map-loading.gif" border=1 style="position:absolute; z-index:1; top:340px; left:630px"/></A>

    <a href="javascript:sendCommand('go northwest');"><img name="compassNW" id="compassNW"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:340px; left:630px"/></a>

    <a href="javascript:sendCommand('go north');"><img name="compassN" id="compassN"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:340px; left:682px"/></a>

    <a href="javascript:sendCommand('go northeast');"><img name="compassNE" id="compassNE"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:340px; left:734px"/></a>

    <a href="javascript:sendCommand('go west');"><img name="compassW" id="compassW"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:391px; left:630px"/></a>

    <a href="javascript:sendCommand('go east');"><img name="compassE" id="compassE"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:391px; left:734px"/></a>

    <a href="javascript:sendCommand('go southwest');"><img name="compassSW" id="compassSW"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:442px; left:630px"/></a>

    <a href="javascript:sendCommand('go south');"><img name="compassS" id="compassS"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:442px; left:682px"/></a>

    <a href="javascript:sendCommand('go southeast');"><img name="compassSE" id="compassSE"
	    src="$(Theatre.RealmURL)blank.gif" border=0
	    style="position:absolute; z-index:2; top:442px; left:734px"/></a>

    <DIV style="position: absolute; top: 0px; left: 136px; width: 492px; height: 100%; padding: 0px; margin: 0px" id="Client_Div">
<SCRIPT languge="JavaScript"><?hide
    if (DetectFlashVer(9, 0, 45)) {
      AC_FL_RunContent(
        "src",               "http://www.skotos.net/clients/ninox/Client-0_7_7",
        "width",             "100%",
        "height",            "100%",
        "id",                "Client",
        "quality",           "high",
        "bgcolor",           "#ffffff",
        "name",              "Client",
        "allowScriptAccess", "always",
        "type",              "application/x-shockwave-flash",
        "pluginspage",       "http://www.adobe.com/go/getflashplayer");
    } else {
      document.write("<DIV style='background:white; text:black;border:thin solid red'>You need a newer version of the Flash Player plugin!  Visit <A href='http://www.adobe.com/go/getflashplayer'>the Adobe website</A> to download/install it.");
    }
?></SCRIPT>
    </DIV>
  </BODY>
</HTML>
