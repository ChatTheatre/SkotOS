<SCRIPT ID=clientEventHandlersJS LANGUAGE=javascript>
<?hide
function button1_onclick() {
    document.Alice.SendCommand('smile', true);
}

function SendCommand(msg) {
    if (this["chatMode"]) {
        document.Alice.SendCommand("/" + msg);
    } else {
        document.Alice.SendCommand(msg);
    }
}

function updateCompass(bitfield, image, dir, bit) {
      if (bitfield & bit) {
        image.src = "$(Theatre.RealmURL)arrows/" + dir + "-ex.gif";
      } else {
        image.src = "$(Theatre.RealmURL)arrows/" + dir + "-noex.gif";
      }
}

function updateAll() {
   if (!this["updateDirty"]) {
      this["updateDirty"] = true;
      setTimeout("doUpdateAll()", 20);
   }
}

function doUpdateAll() {
    this["updateDirty"] = false;

    for (count = lookat.children.length; count > 0; count--) {
	lookat.remove(0);
    }
    for (count = lookat_obj.children.length; count > 0; count--) {
	lookat_obj.remove(0);
    }
    for (count = lookat_inv.children.length; count > 0; count--) {
	lookat_inv.remove(0);
    }
    for (count = lookat_exits.children.length; count > 0; count--) {
	lookat_exits.remove(0);
    }
	var oOption = document.createElement("OPTION");
	oOption.text="(look at person...)";
	oOption.value=""
	lookat.add(oOption);
	var oOption = document.createElement("OPTION");
	oOption.text="(examine object...)";
	oOption.value=""
	lookat_obj.add(oOption);
	var oOption = document.createElement("OPTION");
	oOption.text="room";
	oOption.value="examine";
	lookat_obj.add(oOption);
	var oOption = document.createElement("OPTION");
	oOption.text="(examine inventory...)";
	oOption.value=""
	lookat_inv.add(oOption);
	var oOption = document.createElement("OPTION");
	oOption.text="(go ...)";
	oOption.value=""
	lookat_exits.add(oOption);

    for (var ix in this["playerSet"]) {
	var oOption = document.createElement("OPTION");
	oOption.text=this["playerSet"][ix];
	oOption.value="look at "+this["playerSet"][ix];
	lookat.add(oOption);
    }
    for (var ix in this["objectSet"]) {
	var oOption = document.createElement("OPTION");
	oOption.text=this["objectSet"][ix];
	oOption.value="examine "+this["objectSet"][ix];
	lookat_obj.add(oOption);
    }
    for (var ix in this["invSet"]) {
	var oOption = document.createElement("OPTION");
	oOption.text=this["invSet"][ix];
	oOption.value="examine "+this["invSet"][ix];
	lookat_inv.add(oOption);
    }
    for (var ix in this["exitSet"]) {
	var oOption = document.createElement("OPTION");
	oOption.text=this["exitSet"][ix];
	oOption.value="go "+[ix];
	lookat_exits.add(oOption);
    }
}

function clearPlayers() {
  this["playerSet"] = new Object();
  updateAll();
  //  alert('player cleared');
}

function addPlayer(str) {
  var ix, pos, name;

  pos = str.indexOf(' ');
  if (pos >= 0) {
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (this["playerSet"] == null) {
        this["playerSet"] = new Object();
    }
    this["playerSet"][ix] = name;
    updateAll();
//    alert('player ' + name + ' added');
  }
}

function removePlayer(ix) {
  if (this["playerSet"] && this["playerSet"][ix]) {
    delete this["playerSet"][ix];
    updateAll();
//    alert('player ' + ix + ' subbed');
  }
}

function clearObjects() {
  this["objectSet"] = new Object();
  updateAll();
//  alert('objects cleared');
}

function addObject(str) {
  var ix, pos, name;

  pos = str.indexOf(' ');
  if (pos >= 0) {
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (this["objectSet"] == null) {
        this["objectSet"] = new Object();
    }
    this["objectSet"][ix] = name;
    updateAll();
//    alert('object ' + name + ' added');
  }
}

function removeObject(ix) {
  if (this["objectSet"] && this["objectSet"][ix]) {
    delete this["objectSet"][ix];
    updateAll();
//    alert('object ' + ix + ' subbed');
  }
}

function clearInventory() {
  this["invSet"] = new Object();
  updateAll();
//  alert('inventory cleared');
}

function addInventory(str) {
  var ix, pos, name;

  pos = str.indexOf(' ');
  if (pos >= 0) {
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (this["invSet"] == null) {
        this["invSet"] = new Object();
    }
    this["invSet"][ix] = name;
    updateAll();
//    alert('inventory ' + name + ' added');
  }
}

function removeInventory(ix) {
  if (this["invSet"] && this["invSet"][ix]) {
    delete this["invSet"][ix];
    updateAll();
//    alert('inventory ' + ix + ' subbed');
  }
}

function clearExits() {
  this["exitSet"] = new Object();
  updateAll();
//  alert('exit cleared');
}

function addExit(str) {
  var ix, pos, name;

  pos = str.indexOf(' ');
  if (pos >= 0) {
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (ix == "NONE") {
      ix = name;
    }
    if (this["exitSet"] == null) {
        this["exitSet"] = new Object();
    }
    this["exitSet"][ix] = name;
    updateAll();
//    alert('exit ' + name + ' added');
  }
}


function Alice_TextAvailable() {
   var id = -1; // get first available msg
   var msg = "";

   // loop and retrieve all msgs for window 'id' until return is ""

   // first the map images
   while ((msg = document.Alice.GetAvailableText(1)) != "") {
      mapImage.src = msg;
   }

   // then check for artwork
   while ((msg = document.Alice.GetAvailableText(2)) != "") {
      var artwin;

      popupArtWin(msg, 'Art', 'Skotos Art');

   }
   while ((msg = document.Alice.GetAvailableText(3)) != "") {
     realmURL = msg;
     Left_Graphic.src = msg + "edgeleft.jpg";
//     Grand_Theatre.src = msg + "gamelogo.gif";
     Right_Strip.src = msg + "edgeright.jpg";
     Getting_Started.src = msg + "started.gif";
     Mastering_Chat.src = msg + "mastering.gif";
     Skotos_Logo.src = msg + "skotoslogo.jpg";
   }
   while ((msg = document.Alice.GetAvailableText(4)) != "") {
      bigMapLink.href = "javascript:popupArtWin('" + msg + "', 'Map', '$(Theatre.GameBrief) Overview Map')";
   }
// We may do this later, with a different number -- Zell
//   while ((msg = document.Alice.GetAvailableText(4)) != "") {
//     document.location = msg;
//   }
   while ((msg = document.Alice.GetAvailableText(5)) != "") {
      msg = parseInt(msg);
      updateCompass(msg, compassN, "n", 1);
      updateCompass(msg, compassNE, "ne", 2);
      updateCompass(msg, compassE, "e", 4);
      updateCompass(msg, compassSE, "se", 8);
      updateCompass(msg, compassS, "s", 16);
      updateCompass(msg, compassSW, "sw", 32);
      updateCompass(msg, compassW, "w", 64);
      updateCompass(msg, compassNW, "nw", 128);
   }
   while ((msg = document.Alice.GetAvailableText(6)) != "") {
     popupWin(msg, "SkotosAnyURL", 800, 600);
   }
   while ((msg = document.Alice.GetAvailableText(20)) != "") {
     clearPlayers(msg);
   }
   while ((msg = document.Alice.GetAvailableText(21)) != "") {
     addPlayer(msg);
   }
   while ((msg = document.Alice.GetAvailableText(22)) != "") {
     removePlayer(msg);
   }
   while ((msg = document.Alice.GetAvailableText(30)) != "") {
     clearObjects(msg);
   }
   while ((msg = document.Alice.GetAvailableText(31)) != "") {
     addObject(msg);
   }
   while ((msg = document.Alice.GetAvailableText(32)) != "") {
     removeObject(msg);
   }
   while ((msg = document.Alice.GetAvailableText(40)) != "") {
     clearInventory(msg);
   }
   while ((msg = document.Alice.GetAvailableText(41)) != "") {
     addInventory(msg);
   }
   while ((msg = document.Alice.GetAvailableText(42)) != "") {
     removeInventory(msg);
   }
   while ((msg = document.Alice.GetAvailableText(50)) != "") {
     clearExits(msg);
   }
   while ((msg = document.Alice.GetAvailableText(51)) != "") {
     addExit(msg);
   }
   while ((msg = document.Alice.GetAvailableText(60)) != "") {
     if (!this["chatMode"]) {
       this["chatMode"] = true;
     }
   }
   while ((msg = document.Alice.GetAvailableText(61)) != "") {
     if (this["chatMode"]) {
       this["chatMode"] = false;
     }
   }
   while ((msg = document.Alice.GetAvailableText(70)) != "") {
     popupWin(msg, 'SkotosToolSourceView', 800, 600);
   }
}

function DoResize()
{
	document.all.Right_Strip.style.posLeft = document.body.offsetWidth - 140;
	document.all.Skotos_Logo.style.posLeft = document.body.offsetWidth - 140;
	document.all.Getting_Started.style.posLeft = document.body.offsetWidth - 132;
	document.all.Mastering_Chat.style.posLeft = document.body.offsetWidth - 132;
	document.all.mapImage.style.posLeft = document.body.offsetWidth - 132;
	
	this.commandPopup.style.posLeft = document.body.offsetWidth - 137;

	document.all.compassNW.style.posLeft = document.body.offsetWidth - 136;
	document.all.compassW.style.posLeft = document.body.offsetWidth - 136;
	document.all.compassSW.style.posLeft = document.body.offsetWidth - 136;
	document.all.compassN.style.posLeft = document.body.offsetWidth - 80;
	document.all.compassS.style.posLeft = document.body.offsetWidth - 80;
	document.all.compassNE.style.posLeft = document.body.offsetWidth - 18;
	document.all.compassE.style.posLeft = document.body.offsetWidth - 18;
	document.all.compassSE.style.posLeft = document.body.offsetWidth - 18;

	document.all.compassNW.style.posTop = document.body.offsetHeight - 142;
	document.all.compassN.style.posTop = document.body.offsetHeight - 142;
	document.all.compassNE.style.posTop = document.body.offsetHeight - 142;

	document.all.compassW.style.posTop = document.body.offsetHeight - 80;
	document.all.compassE.style.posTop = document.body.offsetHeight - 80 

	document.all.compassSW.style.posTop = document.body.offsetHeight - 24;
	document.all.compassS.style.posTop = document.body.offsetHeight - 24;
	document.all.compassSE.style.posTop = document.body.offsetHeight - 24;

        document.all.mapImage.style.posTop = document.body.offsetHeight - 128 - 10;

	//this.nearbyUsers.style.posTop = document.body.offsetHeight - 128;

	this.commandPopup.style.posTop = document.body.offsetHeight - 328;
	
	document.Alice.Move(145, 10,
		document.body.clientWidth - 286,
		document.body.clientHeight - 14);
}

window.onresize = DoResize;

//?>
</SCRIPT>

<SCRIPT LANGUAGE=javascript FOR=Alice EVENT=TextAvailable>
<!--
 Alice_TextAvailable()
//-->
</SCRIPT>
