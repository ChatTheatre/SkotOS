<object clone="/obj/properties" owner="zell">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="html:alice">
         X[S] \<html\>
\<head\>
 \<title\> \$(Theatre.GameBrief) Chat Theatre (Skotos Alice Client) \</title\>
\</head\>
\<body background="\$(Theatre.RealmURL)background.jpg" vlink="black" alink="black" text="black" link="black" topmargin="0" leftmargin="0" marginwidth="0" marginheight="0"\>
\$(this.xtra:js-misc)
\$(this.xtra:js-cookie)
\<insert page="/Theatre/jsstd-include.sam"/\>
\\\<!--
\\\<div id=nearbyUsers style="position:absolute; font-size: smaller; z-index=3; background-color=yellow; top:400px; left:10px; width:110px"\\\>
Players present: None.
\\\</div\\\>
--\\\>
\<div id="commandPopup" style="position:absolute; font-size: smaller; z-index=3; top:129px; left:627px; width=120; margin=5"\>
\<select size="1" onchange="SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0;" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(do a...)\</option\>
\<option value="bow"\>bow\</option\>
\<option value="curtsy"\>curtsy\</option\>
\<option value="examine"\>examine\</option\>
\<option value="exits"\>exits\</option\>
\<option value="inventory"\>inventory\</option\>
\<option value="look"\>look\</option\>
\<option value="nod"\>nod\</option\>
\<option value="smile"\>smile\</option\>
\</select\>
\<select size="1" onchange="SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(help on...)\</option\>
\<option value="tip"\>tip\</option\>
\<option value="help"\>help\</option\>
\<option value="help basics"\>basics\</option\>
\<option value="help concepts"\>concepts \</option\>
\<option value="help topics"\>topics\</option\>
\</select\>
\<select id="lookat" size="1" onchange="SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(look at person...)\</option\>
\</select\>
\<select id="lookat_obj" size="1" onchange="SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(examine object...)\</option\>
\<option value="examine"\>room\</option\>
\</select\>
\<select id="lookat_inv" size="1" onchange="SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(examine inventory)\</option\>
\</select\>
\<select id="lookat_exits" size="1" onchange="SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(go...)\</option\>
\</select\>
\<select size="1" onchange="Alice.SendCommand(this.options[this.selectedIndex].value); this.selectedIndex=0" style="font-family: 'Trebuchet MS', Verdana, Arial, sans-serif; font-size: 10px; width=120px"\>
\<option value=""\>(Select a theme ...)\</option\>
\$[int i, sz;
   string *colours, *themes, output;
   mapping map, themes_map;

   map = \$\{TextIF:Themes\}."*";
   sz = map_sizeof(map);
   colours = map_indices(map);
   themes_map = ([ ]);
   for (i = 0; i \< sz; i++) \{
       string theme;

       if (sscanf(colours[i], "colours:%s:", theme)) \{
           themes_map[theme] = TRUE;
       \}
   \}
   themes = map_indices(themes_map);
   output = "";
   sz = sizeof(themes);
   for (i = 0; i \< sz; i++) \{
       output += "\<OPTION value='profile theme " + themes[i] + "'\>" + capitalize(themes[i]) + "\</OPTION\>";
   \}
   return ParseXML(output);]
\</select\>
\</div\>
\<img id="Left_Graphic" alt="Left Graphic" src="\$(Theatre.RealmURL)edgeleft.jpg" border="0" style="position:absolute; z-index=0; top:0px; left:0px"/\>
\<a href="javascript:openerWin('/');"\>
\<img id="Chat_Theatre" alt="Chat Theatre" src="\$(Theatre.RealmURL)gamelogo.gif" border="0" style="position:absolute; z-index=1; top:0px; left:0px"/\>
\</a\>
\<img id="Right_Strip" alt="Right Graphic" src="\$(Theatre.RealmURL)edgeright.jpg" border="0" style="position:absolute; z-index=0; top:0px; left:628px"/\>
\<a href="javascript:openerWin('http://www.skotos.net/');"\>
\<img id="Skotos_Logo" alt="Skotos Logo" src="\$(Theatre.RealmURL)skotoslogo.jpg" border="0" style="position:absolute; z-index=1; top:0px; left:628px"/\>
\</a\>
\<a href="javascript:openerWin('starting.sam');"\>
\<img id="Getting_Started" alt="Getting Started" src="\$(Theatre.RealmURL)started.gif" border="0" style="position:absolute; z-index=1; top:71px; left:630px"/\>
\</a\>
\<a href="javascript:openerWin('mastering.sam');"\>
\<img id="Mastering_Chat" alt="Mastering Chat" src="\$(Theatre.RealmURL)mastering.gif" border="0" style="position:absolute; z-index=1; top:92px; left:630px"/\>
\</a\>
\<a name="bigMapLink" href="javascript:popupArtWin('\$(Theatre.RealmURL)map.jpg', 'Map', '\$(Theatre.GameBrief) Overview Map')"\>
\<img name="mapImage" id="Map" alt="Map" src="\$(Theatre.RealmURL)map-loading.gif" border="1" style="position:absolute; z-index=1; top:340px; left:630px"/\>
\</a\>
\<a href="javascript:SendCommand('go northwest');"\>
\<img name="compassNW" id="compassNW" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:340px; left:630px"/\>
\</a\>
\<a href="javascript:SendCommand('go north');"\>
\<img name="compassN" id="compassN" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:340px; left:682px"/\>
\</a\>
\<a href="javascript:SendCommand('go northeast');"\>
\<img name="compassNE" id="compassNE" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:340px; left:734px"/\>
\</a\>
\<a href="javascript:SendCommand('go west');"\>
\<img name="compassW" id="compassW" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:391px; left:630px"/\>
\</a\>
\<a href="javascript:SendCommand('go east');"\>
\<img name="compassE" id="compassE" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:391px; left:734px"/\>
\</a\>
\<a href="javascript:SendCommand('go southwest');"\>
\<img name="compassSW" id="compassSW" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:442px; left:630px"/\>
\</a\>
\<a href="javascript:SendCommand('go south');"\>
\<img name="compassS" id="compassS" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:442px; left:682px"/\>
\</a\>
\<a href="javascript:SendCommand('go southeast');"\>
\<img name="compassSE" id="compassSE" src="\$(Theatre.RealmURL)blank.gif" border="0" style="position:absolute; z-index=2; top:442px; left:734px"/\>
\</a\>
\$(this.xtra:js-events)
\<object onFocus="DoResize();" id="Alice" tabIndex="1" codeBase="http://www.skotos.net/MarrachGame/Alice41.cab#Version=1,0,0,41" classid="CLSID:4C2D6C46-6602-11D4-A5E3-444553540000" VIEWASTEXT="1" HEIGHT="96%" WIDTH="470" offsetleft="145" offsettop="10" border="0" style="position:absolute; z-index=2; top:10px; left:145px"\>
    \<param NAME="_Version" VALUE="65536"/\>
    \<param NAME="_ExtentX" VALUE="21166"/\>
    \<param NAME="_ExtentY" VALUE="15875"/\>
    \<param NAME="_StockProps" VALUE="4"/\>
    \<param NAME="Echo" VALUE="-1"/\>
    \<param NAME="WorldName" VALUE=""/\>
    \<param NAME="UserName" VALUE=""/\>
    \<param NAME="HostName" VALUE=""/\>
    \<param NAME="Password" VALUE=""/\>
    \<param NAME="Port" VALUE="-842150451"/\>
\</object\>
\<script LANGUAGE="JavaScript1.1"\>
  var data = new Cookie (document, "world_host_port_user_pass", 240);
  data.remove();
  mapImage.src = "\$(Theatre.RealmURL)map-loading.gif";
  Alice.WorldName = "ChatTheatre";
  Alice.HostName  = "\$(System.HostName)";
  Alice.Port      = \$(System.textport);
  Alice.UserName  = GetUser();
  Alice.Password  = GetPass();
  Alice.Character = "\$(Theatre.ChatName)";
  Alice.Connect();
\</script\>
\</body\>
\</html\>
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1069373775, "nino", "E" \})
      </Core:Property>
      <Core:Property property="xtra:js-cookie">
         X[S] \<script LANGUAGE="JavaScript1.1"\> \\\<!--
function Cookie(document, name, hours, path, domain, secure)
\\\{
    // All the predefined properties of this object begin with '\\\$'
    // to distinguish them from other properties which are the values to
    // be stored in the cookie.
    this.\\\$document = document;
    this.\\\$name = name;
    if (hours)
        this.\\\$expiration = new Date((new Date()).getTime() + hours*3600000);
    else this.\\\$expiration = null;
    if (path) this.\\\$path = path; else this.\\\$path = null;
    if (domain) this.\\\$domain = domain; else this.\\\$domain = null;
    if (secure) this.\\\$secure = true; else this.\\\$secure = false;
\\\}
// This function is the store() method of the Cookie object.
function _Cookie_store()
\\\{
    // First, loop through the properties of the Cookie object and
    // put together the value of the cookie. Since cookies use the
    // equals sign and semicolons as separators, we'll use colons
    // and ampersands for the individual state variables we store
    // within a single cookie value. Note that we escape the value
    // of each state variable, in case it contains punctuation or other
    // illegal characters.
    var cookieval = "";
    for(var prop in this) \\\{
        // Ignore properties with names that begin with '\\\$' and also methods.
        if ((prop.charAt(0) == '\\\$') \\\|\\\| ((typeof this[prop]) == 'function'))
            continue;
        if (cookieval != "") cookieval += '\\\&';
        cookieval += prop + ':' + escape(this[prop]);
    \\\}
    // Now that we have the value of the cookie, put together the
    // complete cookie string, which includes the name and the various
    // attributes specified when the Cookie object was created.
    var cookie = this.\\\$name + '=' + cookieval;
    if (this.\\\$expiration)
        cookie += '; expires=' + this.\\\$expiration.toGMTString();
    if (this.\\\$path) cookie += '; path=' + this.\\\$path;
    if (this.\\\$domain) cookie += '; domain=' + this.\\\$domain;
    if (this.\\\$secure) cookie += '; secure';
    // Now store the cookie by setting the magic Document.cookie property.
    this.\\\$document.cookie = cookie;
\\\}
// This function is the load() method of the Cookie object.
function _Cookie_load()
\\\{
    // First, get a list of all cookies that pertain to this document.
    // We do this by reading the magic Document.cookie property.
    var allcookies = this.\\\$document.cookie;
    if (allcookies == "") return false;
    // Now extract just the named cookie from that list.
    var start = allcookies.indexOf(this.\\\$name + '=');
    if (start == -1) \\\{
    return false;   // Cookie not defined for this page.
    \\\}
    start += this.\\\$name.length + 1;  // Skip name and equals sign.
    var end = allcookies.indexOf(';', start);
    if (end == -1)
    end = allcookies.length;
    var cookieval = allcookies.substring(start, end);
    this['cookievalue'] = cookieval;
    // Now that we've extracted the value of the named cookie, we've
    // got to break that value down into individual state variable
    // names and values. The name/value pairs are separated from each
    // other by ampersands, and the individual names and values are
    // separated from each other by colons. We use the split method
    // to parse everything.
    var a = cookieval.split('\\\&');    // Break it into array of name/value pairs.
    for(var i=0; i \\\< a.length; i++)  // Break each pair into an array.
        a[i] = a[i].split(':');
    // Now that we've parsed the cookie value, set all the names and values
    // of the state variables in this Cookie object. Note that we unescape()
    // the property value, because we called escape() when we stored it.
    for(var i = 0; i \\\< a.length; i++) \\\{
        this[a[i][0]] = unescape(a[i][1]);
    \\\}
    // We're done, so return the success code.
    return true;
\\\}
// This function is the remove() method of the Cookie object.
function _Cookie_remove()
\\\{
    var cookie;
    cookie = this.\\\$name + '=';
    if (this.\\\$path) cookie += '; path=' + this.\\\$path;
    if (this.\\\$domain) cookie += '; domain=' + this.\\\$domain;
    cookie += '; expires=Fri, 02-Jan-1970 00:00:00 GMT';
    this.\\\$document.cookie = cookie;
\\\}
// Create a dummy Cookie object, so we can use the prototype object to make
// the functions above into methods.
new Cookie();
Cookie.prototype.store  = _Cookie_store;
Cookie.prototype.load   = _Cookie_load;
Cookie.prototype.remove = _Cookie_remove;
// end cookie class
function GetUser() \\\{
    var data = new Cookie (document, "user", 240);
    data.load();
    return data.cookievalue;
\\\}
function GetPass() \\\{
    var data = new Cookie (document, "pass", 240);
    data.load();
    return data.cookievalue;
\\\}
//--\\\> \</script\>
      </Core:Property>
      <Core:Property property="xtra:js-events">
         X[S] \<script ID="clientEventHandlersJS" LANGUAGE="javascript"\>
function button1_onclick() \\\{
    Alice.SendCommand('smile', true);
\\\}
function SendCommand(msg) \\\{
    if (this["chatMode"]) \\\{
        Alice.SendCommand("/" + msg);
    \\\} else \\\{
        Alice.SendCommand(msg);
    \\\}
\\\}
function updateCompass(bitfield, image, dir, bit) \\\{
      if (bitfield \\\& bit) \\\{
        image.src = "\$(Theatre.RealmURL)arrows/" + dir + "-ex.gif";
      \\\} else \\\{
        image.src = "\$(Theatre.RealmURL)arrows/" + dir + "-noex.gif";
      \\\}
\\\}
function updateAll() \\\{
   if (!this["updateDirty"]) \\\{
      this["updateDirty"] = true;
      setTimeout("doUpdateAll()", 20);
   \\\}
\\\}
function doUpdateAll() \\\{
    this["updateDirty"] = false;
    for (count = lookat.children.length; count \\\> 0; count--) \\\{
 lookat.remove(0);
    \\\}
    for (count = lookat_obj.children.length; count \\\> 0; count--) \\\{
 lookat_obj.remove(0);
    \\\}
    for (count = lookat_inv.children.length; count \\\> 0; count--) \\\{
 lookat_inv.remove(0);
    \\\}
    for (count = lookat_exits.children.length; count \\\> 0; count--) \\\{
 lookat_exits.remove(0);
    \\\}
 var oOption = document.createElement("OPTION");
 oOption.text="(look at person...)";
 oOption.value=""
 lookat.add(oOption);
 var oOption = document.createElement("OPTION");
 oOption.text="(examine object...)";
 oOption.value=""
 lookat_obj.add(oOption);
 var oOption = document.createElement("OPTION");
 oOption.text="room";
 oOption.value="examine";
 lookat_obj.add(oOption);
 var oOption = document.createElement("OPTION");
 oOption.text="(examine inventory...)";
 oOption.value=""
 lookat_inv.add(oOption);
 var oOption = document.createElement("OPTION");
 oOption.text="(go ...)";
 oOption.value=""
 lookat_exits.add(oOption);
    for (var ix in this["playerSet"]) \\\{
 var oOption = document.createElement("OPTION");
 oOption.text=this["playerSet"][ix];
 oOption.value="look at "+this["playerSet"][ix];
 lookat.add(oOption);
    \\\}
    for (var ix in this["objectSet"]) \\\{
 var oOption = document.createElement("OPTION");
 oOption.text=this["objectSet"][ix];
 oOption.value="examine "+this["objectSet"][ix];
 lookat_obj.add(oOption);
    \\\}
    for (var ix in this["invSet"]) \\\{
 var oOption = document.createElement("OPTION");
 oOption.text=this["invSet"][ix];
 oOption.value="examine "+this["invSet"][ix];
 lookat_inv.add(oOption);
    \\\}
    for (var ix in this["exitSet"]) \\\{
 var oOption = document.createElement("OPTION");
 oOption.text=this["exitSet"][ix];
 oOption.value="go "+[ix];
 lookat_exits.add(oOption);
    \\\}
\\\}
function clearPlayers() \\\{
  this["playerSet"] = new Object();
  updateAll();
  //  alert('player cleared');
\\\}
function addPlayer(str) \\\{
  var ix, pos, name;
  pos = str.indexOf(' ');
  if (pos \\\>= 0) \\\{
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (this["playerSet"] == null) \\\{
        this["playerSet"] = new Object();
    \\\}
    this["playerSet"][ix] = name;
    updateAll();
//    alert('player ' + name + ' added');
  \\\}
\\\}
function removePlayer(ix) \\\{
  if (this["playerSet"] \\\&\\\& this["playerSet"][ix]) \\\{
    delete this["playerSet"][ix];
    updateAll();
//    alert('player ' + ix + ' subbed');
  \\\}
\\\}
function clearObjects() \\\{
  this["objectSet"] = new Object();
  updateAll();
//  alert('objects cleared');
\\\}
function addObject(str) \\\{
  var ix, pos, name;
  pos = str.indexOf(' ');
  if (pos \\\>= 0) \\\{
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (this["objectSet"] == null) \\\{
        this["objectSet"] = new Object();
    \\\}
    this["objectSet"][ix] = name;
    updateAll();
//    alert('object ' + name + ' added');
  \\\}
\\\}
function removeObject(ix) \\\{
  if (this["objectSet"] \\\&\\\& this["objectSet"][ix]) \\\{
    delete this["objectSet"][ix];
    updateAll();
//    alert('object ' + ix + ' subbed');
  \\\}
\\\}
function clearInventory() \\\{
  this["invSet"] = new Object();
  updateAll();
//  alert('inventory cleared');
\\\}
function addInventory(str) \\\{
  var ix, pos, name;
  pos = str.indexOf(' ');
  if (pos \\\>= 0) \\\{
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (this["invSet"] == null) \\\{
        this["invSet"] = new Object();
    \\\}
    this["invSet"][ix] = name;
    updateAll();
//    alert('inventory ' + name + ' added');
  \\\}
\\\}
function removeInventory(ix) \\\{
  if (this["invSet"] \\\&\\\& this["invSet"][ix]) \\\{
    delete this["invSet"][ix];
    updateAll();
//    alert('inventory ' + ix + ' subbed');
  \\\}
\\\}
function clearExits() \\\{
  this["exitSet"] = new Object();
  updateAll();
//  alert('exit cleared');
\\\}
function addExit(str) \\\{
  var ix, pos, name;
  pos = str.indexOf(' ');
  if (pos \\\>= 0) \\\{
    ix = str.substring(0, pos);
    name = str.substring(pos+1);
    if (ix == "NONE") \\\{
      ix = name;
    \\\}
    if (this["exitSet"] == null) \\\{
        this["exitSet"] = new Object();
    \\\}
    this["exitSet"][ix] = name;
    updateAll();
//    alert('exit ' + name + ' added');
  \\\}
\\\}
function Alice_TextAvailable() \\\{
   var id = -1; // get first available msg
   var msg = "";
   // loop and retrieve all msgs for window 'id' until return is ""
   // first the map images
   while ((msg = Alice.GetAvailableText(1)) != "") \\\{
      mapImage.src = msg;
   \\\}
   // then check for artwork
   while ((msg = Alice.GetAvailableText(2)) != "") \\\{
      var artwin;
      popupArtWin(msg, 'Art', 'Skotos Art');
   \\\}
   while ((msg = Alice.GetAvailableText(3)) != "") \\\{
     realmURL = msg;
     Left_Graphic.src = msg + "edgeleft.jpg";
//     Grand_Theatre.src = msg + "gamelogo.gif";
     Right_Strip.src = msg + "edgeright.jpg";
     Getting_Started.src = msg + "started.gif";
     Mastering_Chat.src = msg + "mastering.gif";
     Skotos_Logo.src = msg + "skotoslogo.jpg";
   \\\}
   while ((msg = Alice.GetAvailableText(4)) != "") \\\{
      bigMapLink.href = "javascript:popupArtWin('" + msg + "', 'Map', '\$(Theatre.GameBrief) Overview Map')";
   \\\}
// We may do this later, with a different number -- Zell
//   while ((msg = Alice.GetAvailableText(4)) != "") \\\{
//     document.location = msg;
//   \\\}
   while ((msg = Alice.GetAvailableText(5)) != "") \\\{
      msg = parseInt(msg);
      updateCompass(msg, compassN, "n", 1);
      updateCompass(msg, compassNE, "ne", 2);
      updateCompass(msg, compassE, "e", 4);
      updateCompass(msg, compassSE, "se", 8);
      updateCompass(msg, compassS, "s", 16);
      updateCompass(msg, compassSW, "sw", 32);
      updateCompass(msg, compassW, "w", 64);
      updateCompass(msg, compassNW, "nw", 128);
   \\\}
   while ((msg = Alice.GetAvailableText(6)) != "") \\\{
     popupWin(msg, "SkotosAnyURL", 800, 600);
   \\\}
   while ((msg = Alice.GetAvailableText(20)) != "") \\\{
     clearPlayers(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(21)) != "") \\\{
     addPlayer(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(22)) != "") \\\{
     removePlayer(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(30)) != "") \\\{
     clearObjects(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(31)) != "") \\\{
     addObject(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(32)) != "") \\\{
     removeObject(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(40)) != "") \\\{
     clearInventory(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(41)) != "") \\\{
     addInventory(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(42)) != "") \\\{
     removeInventory(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(50)) != "") \\\{
     clearExits(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(51)) != "") \\\{
     addExit(msg);
   \\\}
   while ((msg = Alice.GetAvailableText(60)) != "") \\\{
     if (!this["chatMode"]) \\\{
       this["chatMode"] = true;
     \\\}
   \\\}
   while ((msg = Alice.GetAvailableText(61)) != "") \\\{
     if (this["chatMode"]) \\\{
       this["chatMode"] = false;
     \\\}
   \\\}
   while ((msg = Alice.GetAvailableText(70)) != "") \\\{
     popupWin(msg, 'SkotosToolSourceView', 800, 600);
   \\\}
\\\}
function DoResize()
\\\{
 document.all.Right_Strip.style.posLeft = document.body.offsetWidth - 140;
 document.all.Skotos_Logo.style.posLeft = document.body.offsetWidth - 140;
 document.all.Getting_Started.style.posLeft = document.body.offsetWidth - 132;
 document.all.Mastering_Chat.style.posLeft = document.body.offsetWidth - 132;
 document.all.mapImage.style.posLeft = document.body.offsetWidth - 132;
 this.commandPopup.style.posLeft = document.body.offsetWidth - 137;
 document.all.compassNW.style.posLeft = document.body.offsetWidth - 136;
 document.all.compassW.style.posLeft = document.body.offsetWidth - 136;
 document.all.compassSW.style.posLeft = document.body.offsetWidth - 136;
 document.all.compassN.style.posLeft = document.body.offsetWidth - 80;
 document.all.compassS.style.posLeft = document.body.offsetWidth - 80;
 document.all.compassNE.style.posLeft = document.body.offsetWidth - 18;
 document.all.compassE.style.posLeft = document.body.offsetWidth - 18;
 document.all.compassSE.style.posLeft = document.body.offsetWidth - 18;
 document.all.compassNW.style.posTop = document.body.offsetHeight - 142;
 document.all.compassN.style.posTop = document.body.offsetHeight - 142;
 document.all.compassNE.style.posTop = document.body.offsetHeight - 142;
 document.all.compassW.style.posTop = document.body.offsetHeight - 80;
 document.all.compassE.style.posTop = document.body.offsetHeight - 80
 document.all.compassSW.style.posTop = document.body.offsetHeight - 24;
 document.all.compassS.style.posTop = document.body.offsetHeight - 24;
 document.all.compassSE.style.posTop = document.body.offsetHeight - 24;
        document.all.mapImage.style.posTop = document.body.offsetHeight - 128 - 10;
 //this.nearbyUsers.style.posTop = document.body.offsetHeight - 128;
 this.commandPopup.style.posTop = document.body.offsetHeight - 328;
 Alice.Move(145, 10,
  document.body.clientWidth - 286,
  document.body.clientHeight - 14);
\\\}
window.onresize = DoResize;
// \</script\> \<script LANGUAGE="javascript" FOR="Alice" EVENT="TextAvailable"\> \\\<!--
 Alice_TextAvailable()
//--\\\> \</script\>
      </Core:Property>
      <Core:Property property="xtra:js-misc">
         X[S] \<script language="javascript"\> \\\<!--
  if (window.name != "AliceClient") \\\{
  bareWin('/Theatre/Alice.sam','AliceClient',760,480);
  window.openerLoc = ""; window.openerName = "";
  window.history.back(); \\\} else \\\{ if(window.opener.closed) \\\{
  window.openerLoc = ""; window.openerName = ""; \\\} else \\\{
  window.openerLoc = window.opener.location.href; window.openerName =
  window.opener.window.name; \\\} \\\}
    function writeIntoInputWindow(str) \\\{
      document.CupOmud.writeIntoInputWindow(str);
    \\\}
                function dacookie() \\\{
                    return document.cookie;
                \\\}
  function openerWin(filename) \\\{
    if(filename != "") \\\{
       if(window.opener.closed) \\\{
        window.open(filename,window.openerName);
        return;
        \\\}
       else \\\{
        window.opener.focus();
        window.opener.location.href = filename;
        return;
        \\\}
     \\\}
    else \\\{
       if(window.opener.closed) \\\{
        window.open(window.openerLoc,window.openerName);
        return;
        \\\}
       else \\\{
        window.opener.focus();
        return;
        \\\}
      \\\}
      \\\}
  function updatelayout() \\\{
   var shouldResize = false;
   var winOffsetWidth = document.body.offsetWidth;
   var winOffsetHeight = document.body.offsetHeight;
   if (winOffsetWidth \\\<= 764) \\\{
    shouldResize = true;
    winOffsetWidth = 772;
   \\\}
   if (winOffsetHeight \\\<= 484) \\\{
    shouldResize = true;
    winOffsetHeight = 511;
   \\\}
   if (shouldResize == true) \\\{
    shouldResize = false;
    window.resizeTo(winOffsetWidth,winOffsetHeight);
    //window.resizeTo(764,484); as reported by javascript
    //window.resizeTo(772,511); actual size to set
   \\\}
  \\\}
window.resizeTo(772,511);
//--\\\> \</script\>
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
