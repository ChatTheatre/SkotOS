<object clone="/base/obj/thing" owner="Reverse">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Shared:Local:food/drinks:drinks:brewed:ale)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:sys:trigger:consume">
         "get_drunk"
      </Core:Property>
      <Core:Property property="merry:lib:get_drunk">
         X[M] /*
 * D=Get drunk!
 *
 * Note: we receive \$amount (int between 1-4, determining size of "bite"/"gulp") and \$actor, who is the person
 *       drinking/eating. \$this, here, points to the drink itself.
 *
 * Since this is an example, the merry:lib:get_drunk script is located in the drink itself. In a game setting,
 * this is highly inefficent except for special-case triggers which only exist in a single drink or food item
 * (such as a poisonous apple used in a single plot at a single occasion). Instead, you are advised to place
 * the more generic (such as "get drunk") merry scripts in one of the Local equivalents. These objects ARE NOT
 * overwritten or changed, ever. For example, you may want to make it standard praxis to place ALL triggers
 * in Shared:Local:food/drinks:UrFoodAndDrink under various names. That way, all drinks in the entire system
 * will be able to hook into those scripts via the sys:trigger property interface.
 */
Call(\$\{Effects:Example:Intoxication\}, "apply", \$who: \$actor, \$severity: \$amount);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1205424448, "zwoc", "R", 1205424455, "zwoc", "E", 1205424490, "zwoc", "E", 1205424633, "zwoc", "R", 1205424856, "zwoc", "E", 1205424893, "zwoc", "E", 1205426261, "zwoc", "E", 1205426278, "zwoc", "E", 1205427343, "zwoc", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1205424455" state="Open" user="zwoc">
           This is an example of the brewed:ale which has the intoxication effect enabled in it.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
