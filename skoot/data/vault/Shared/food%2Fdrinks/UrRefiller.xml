<object clone="/base/obj/thing" owner="Reverse">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Shared:Local:food/drinks:UrVessel)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">barrel</Base:Description>
          <Base:Description type="look">
             A barrel for holding liquids.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:sys:shared:consume:refills">
         1
      </Core:Property>
      <Core:Property property="merry:react-desc:tap-dob">
         X[M] /*
 * D=Refill first appropriate container in actor's inventory from this vessel.
 */
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;
object liquid, container, refiller, holder;
int    potential;

if (!sizeof(this."base:inventory")) \{
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " is empty.");
    return FALSE;
\}
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);
if (!container) \{
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");
    return FALSE;
\}

holder = this."base:holder";
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");
        return FALSE;
    \}
\}

if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{
    /* Transfer was successful. */
    EmitTo(\$actor, "You tap some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " is now empty." : ""));
    EmitIn(\$actor."base:environment", Describe(\$actor) + " taps some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " is now empty." : ""), \$actor);
\}
      </Core:Property>
      <Core:Property property="merry:react:finish-iob">
         X[M] /*
 * D=Stop a person from trying to finish a huge refiller.
 */
EmitTo(\$actor, "Ambitious, but no.");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1154968035, "zwoc", "S", 1154968038, "zwoc", "S", 1154968100, "zwoc", "E", 1154968110, "zwoc", "E", 1154974380, "zwoc", "EED", 1154974974, "zwoc", "EED", 1154975026, "zwoc", "EED", 1154975058, "zwoc", "EED", 1154975070, "zwoc", "EED", 1154975119, "zwoc", "EED", 1154975135, "zwoc", "EED", 1156177313, "zwoc", "X", 1156346391, "zwoc", "E", 1213250115, "tonyd", "P", 1213250253, "tonyd", "P", 1223109401, "tonyd", "P", 1223110776, "tonyd", "P", 1223111103, "tonyd", "P", 1223111631, "tonyd", "P", 1223184178, "???", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="sys:sync:clearing">0</Core:Property>
      <Core:Property property="sys:sync:imported">
         1223184178
      </Core:Property>
      <Core:Property property="sys:sync:proposing-revision">
         1223111631
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
