<object clone="/base/obj/thing" owner="TextIF">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="100000" maxweight="65684684"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="123.45" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="room"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rooms"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="movement"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the movement room
          </Base:Description>
          <Base:Description type="glance">
             <atag tag="imp">[Entered the Movement Room]</atag>
          </Base:Description>
          <Base:Description type="look">
             This room demonstrates the signals triggered by movement. You can enter exits in this room (they all lead TO this room) to see which signals are triggered, and when. You can also move around inside the room (try walking to a pillar, for example).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-north" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="north"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the north exit
          </Base:Description>
          <Base:Description type="look">
             A passage leading north. A mere few feet beyond the opening, you see yourself gazing north, the back of your head turned toward you. <atag tag="imp">This exit has no special features.</atag>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Examples:incomplete:rooms:movement-room|exit-south)" door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="north"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-northeast" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="northeast"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the northeast exit
          </Base:Description>
          <Base:Description type="look">
             A passage leading northeast. A mere few feet beyond the opening, you see yourself gazing northeast, the back of your head turned toward you.
 <atag tag="imp">This exit demonstrates the 'react-post:enter-from' description trigger. This trigger happens right after somebody has finished moving INTO the room, arriving THROUGH this exit.</atag>
          </Base:Description>
          <Base:Description type="react-post:enter-from">
             This is the react-post:enter-from "description" in exit-northeast. react-post:enter-from triggers, just like the regular react-post:enter-from merry script, right after somebody enters the room through this exit (the northeast exit).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Examples:incomplete:rooms:movement-room|exit-southwest)" door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="northeast"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-northwest" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="northwest"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the northwest exit
          </Base:Description>
          <Base:Description type="look">
             A passage leading northwest. A mere few feet beyond the opening, you see yourself gazing northwest, the back of your head turned toward you.
 <atag tag="imp">This exit demonstrates the 'react:enter-into' description; this description will stop you from leaving the room through this exit, but it will allow you to enter the room through the opposite exit (southeast).</atag>
          </Base:Description>
          <Base:Description type="react:enter-into">
             This is the react:enter-into "description" in exit-northwest (react-pre:enter-into does not work). react:enter-into triggers, just like the regular react:enter-into merry script, right before somebody leaves the room through this exit (the northwest exit).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Examples:incomplete:rooms:movement-room|exit-southeast)" door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="northwest"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-south" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="south"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the south exit
          </Base:Description>
          <Base:Description type="look">
             A passage leading south. A mere few feet beyond the opening, you see yourself gazing south, the back of your head turned toward you.
 <atag tag="imp">This exit has no special features.</atag>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Examples:incomplete:rooms:movement-room|exit-north)" door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="south"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-southwest" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="southwest"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the southwest exit
          </Base:Description>
          <Base:Description type="look">
             A passage leading southwest. A mere few feet beyond the opening, you see yourself gazing southwest, the back of your head turned toward you.
 <atag tag="imp">This exit demonstrates the 'react:enter-from' description type. It will stop you from entering the room THROUGH this exit. That is, if you attempt to go northeast, this exit will stop you before you complete your movement into the room on the other side (which happens to be this room, in this case, since all exits point to the same room).</atag>
          </Base:Description>
          <Base:Description type="react:enter-from">
             This is the react:enter-from "description" in exit-southwest (react-pre:enter-from does not work). react:enter-from triggers, just like the regular react:enter-from merry script, right before somebody enters the room through this exit (the southwest exit).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Examples:incomplete:rooms:movement-room|exit-northeast)" door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="southwest"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-west" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="west"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the west exit
          </Base:Description>
          <Base:Description type="look">
             A passage leading west. A mere few feet beyond the opening, you see yourself gazing west, the back of your head turned toward you.
 <atag tag="imp">This exit demonstrates the 'react-pre:enter' description type. This is a sort of 'catch-all' trigger, for both 'walking into the room via this exit', and 'walking out of this room via this exit'.</atag>
          </Base:Description>
          <Base:Description type="react-pre:enter">
             This is the react-pre:enter "description" in exit-west. As you see, you can't enter this exit.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Examples:incomplete:rooms:movement-room|exit-east)" door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="west"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pillar-blue" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pillar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pillars"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blue"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the blue pillar
          </Base:Description>
          <Base:Description type="look">
             A blue pillar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pillar-green" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pillar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pillars"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="green"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the green pillar
          </Base:Description>
          <Base:Description type="look">
             A green pillar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pillar-red" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pillar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pillars"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the red pillar
          </Base:Description>
          <Base:Description type="look">
             A red pillar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-post:approach">
         X[M] /* D=After a person changes their proximity... */
EmitTo(\$actor, "[" + TAG("react-post:approach", "syntax") + " in room]");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:enter-from">
         X[M] /* D=After entering the room. */
EmitTo(\$actor, "[" + TAG("react-post:enter-from", "syntax") + " in room]");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:enter-into">
         X[M] /* D=After leaving the room. */
EmitTo(\$actor, "[" + TAG("react-post:enter-into", "syntax") + " in room]");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:teleport">
         X[M] /* D=Teleporting! */
EmitTo(\$actor, "[" + TAG("react-post:teleport", "syntax") + " in room]");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:approach">
         X[M] /* D=Before a person changes their proximity... */
EmitTo(\$actor, "[" + TAG("react-pre:approach", "syntax") + " in room]");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:approach">
         X[M] /* D=Right before a person changes their proximity... */
EmitTo(\$actor, "[" + TAG("react:approach", "syntax") + " in room]");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:enter-from">
         X[M] /* D=Right before ENTERING the room. */
EmitTo(\$actor, "[" + TAG("react:enter-from", "syntax") + " in room] -- " + TAG("react-pre does not work for this signal", "imp") + "\\n-- This signal triggers right before somebody walks into the room in which the script is located.");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:enter-into">
         X[M] /* D=Right before LEAVING the room. */
EmitTo(\$actor, "[" + TAG("react:enter-into", "syntax") + " in room] -- " + TAG("react-pre does not work for this signal", "imp") + "\\n-- This signal triggers right before somebody leaves the room in which the script is located.");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:teleport">
         X[M] /* D=Teleporting! */
EmitTo(\$actor, "[" + TAG("react:teleport", "syntax") + " in room] -- " + TAG("react-pre:teleport does not work", "imp"));
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1163064698, "zwoc", "E", 1163064789, "zwoc", "E", 1163064821, "zwoc", "E", 1163064872, "zwoc", "E", 1163064890, "zwoc", "E", 1163064978, "zwoc", "E", 1163065035, "zwoc", "E", 1163065041, "zwoc", "E", 1163065070, "zwoc", "E", 1163065118, "zwoc", "E", 1163065147, "zwoc", "E", 1163065161, "zwoc", "E", 1163065185, "zwoc", "E", 1163065434, "zwoc", "EED", 1163065510, "zwoc", "EED", 1163065544, "zwoc", "EED", 1163065569, "zwoc", "EED", 1163065605, "zwoc", "EED", 1163065623, "zwoc", "EED", 1163065626, "zwoc", "EED", 1163065634, "zwoc", "EED", 1163065673, "zwoc", "EED", 1163065707, "zwoc", "EED", 1163065724, "zwoc", "EED", 1163065749, "zwoc", "EED", 1163065769, "zwoc", "EED", 1163065777, "zwoc", "EED", 1163065787, "zwoc", "EED", 1163065818, "zwoc", "EED", 1163065842, "zwoc", "EED", 1163065931, "zwoc", "EED", 1163065960, "zwoc", "EED", 1163066784, "zwoc", "E", 1163069312, "zwoc", "E", 1163069345, "zwoc", "E", 1163069396, "zwoc", "E", 1163069505, "zwoc", "E", 1163069652, "zwoc", "E", 1163069717, "zwoc", "E", 1163069787, "zwoc", "E", 1163070428, "zwoc", "E", 1163081201, "zwoc", "EED", 1163081223, "zwoc", "EED", 1163081237, "zwoc", "EED", 1163081245, "zwoc", "EED", 1163081249, "zwoc", "EED", 1163081291, "zwoc", "EED", 1163081310, "zwoc", "EED", 1163081335, "zwoc", "EED", 1163081343, "zwoc", "EED", 1163081548, "zwoc", "EED" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
