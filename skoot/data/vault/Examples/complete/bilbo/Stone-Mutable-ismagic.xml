<object clone="/base/obj/thing" owner="TextIF">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Examples:complete:bilbo:Stone-Mutable)"/>
    <Base:Bulk immobile="false" mass="0.02" density="10.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stone"/>
            <Base:SName sname="rock"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rocks"/>
            <Base:PName pname="stones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="glowing"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="examine">
             $(Examples:complete:bilbo:Stone-Mutable.details:default:description:examine) {? | $(looker.skill:seesmagic) |You see <pronoun what="$(this)"/> give off a {slight|faint} {glimmer|glow|aura}{{ of| that you recognize as} magic|}. | }
          </Base:Description>
          <Base:Description type="look">
             $(Examples:complete:bilbo:Stone-Mutable.details:default:description:look){||||||{? | $(looker.skill:seesmagic) | You see <pronoun what="$(this)"/> give off a {slight|faint} {glimmer|glow|aura}{{ of| that you recognize as} magic|}.| }}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="marrach:ismagic">
         "true"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:color">
         "red"
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="marrach:ismagic">
         "true"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1150099705, "-", "SYNC" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:color">"red"</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1" state="Comment" user="christophera">
           Stone-Mutable-ismagic: This is an example of an child object that looks different based on the existence of a specific viewer's skill (in this case the actors skill:seesmagic skill), using OneOf and simple If SAM tags. Currently functional as is, however, does not give different output based on the amount of skill:seesmagic skill. It also has property marrach:ismagic set to true for other scripts to use.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
