<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="60" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="60" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="male" volition="true" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="dude"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="dudes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="burger"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             burger king dude
          </Base:Description>
          <Base:Description type="examine">
             You need a cred card or cash. Credit card: spawn Kalle:stuff:credit-card -- it'll have \$200 on it. Cash: spawn Kalle:stuff:100 -- that's a \$100-dollar bill, for starters. +ask dude (to get a list of stuff he can sell), then +ask dude for something, to initiate a purchase. He will offer the item to you and give you the price. Accept the item to take it and pay for it.
          </Base:Description>
          <Base:Description type="look">
             This guy is one of those sorry dudes who ended up earning his wage on a filthy Burger King restaurant. You can't help but pity the poor lad, up until he gives you "the look". "The look" is something only Burger King, McDonald's, etc. employees can give another living being. It's the kind of look that makes you wanna crawl into a tight ball in a corner of your bed with all the lights out, thinking about how much the world hates you. Examine the loser to figure out how to make a purchase.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:asking\>:(\{ "react:npcask-dob" \}), \<Lib:NIP:lib:presents\>:(\{ "lib:handler:ask-for", "lib:handler:ask", "lib:core:add_present", "lib:core:sub_present" \}), \<Lib:NIP:lib:trading\>:(\{ "react:take", "lib:core_clean_currency", "lib:core_trading_deduct", "lib:core_trading_query_assets", "lib:handler:ask-for" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:asking\>, \<Lib:NIP:lib:presents\>, \<Lib:NIP:lib:trading\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         23
      </Core:Property>
      <Core:Property property="export:nip:behavior:hatdh">
         \<Examples:complete:NIP:trading:misc:HatDH\>
      </Core:Property>
      <Core:Property property="export:nip:ext:cdb">
         \<Examples:complete:NIP:trading:misc:HatDH\>
      </Core:Property>
      <Core:Property property="export:nip:ext:connect_bid">
         "HatDH"
      </Core:Property>
      <Core:Property property="export:nip:ext:connected">
         "HatDH"
      </Core:Property>
      <Core:Property property="export:nip:ext:edb">
         \<Examples:complete:NIP:trading:misc:HatDH\>
      </Core:Property>
      <Core:Property property="export:nip:ext:emood">
         "DB"
      </Core:Property>
      <Core:Property property="export:nip:ext:rid">
         "harry"
      </Core:Property>
      <Core:Property property="export:nip:ext:scene">
         ([ \<Examples:complete:NIP:trading:burger-king-dude\>:([ "default":"harry" ]) ])
      </Core:Property>
      <Core:Property property="export:nip:ext:tracking">
         0
      </Core:Property>
      <Core:Property property="export:nip:trait:present:objects">
         ([ \<Examples:complete:NIP:trading:menu:hamburger\>:(\{ "burger", "hamburger", "meat", "food", "foodstuff", "edibles" \}) ])
      </Core:Property>
      <Core:Property property="export:nip:trait:trading:object">
         \<Examples:complete:NIP:trading:CDO:cdo\>
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:add_present">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sub_present">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core_clean_currency">
         \<Lib:NIP:lib:trading\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core_trading_deduct">
         \<Lib:NIP:lib:trading\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core_trading_query_assets">
         \<Lib:NIP:lib:trading\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask-for">
         \<Lib:NIP:lib:trading\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:npcask-dob">
         \<Lib:NIP:lib:asking\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:take">
         \<Lib:NIP:lib:trading\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1076287585
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1069061499, "zwoc", "E", 1076287190, "zwoc", "E", 1076287530, "zwoc", "X", 1076288569, "zwoc", "E", 1076288583, "zwoc", "E", 1076288606, "zwoc", "E", 1091830084, "zwoc", "S" \})
      </Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         0
      </Core:Property>
      <Core:Property property="skill:cutoffensive">3</Core:Property>
      <Core:Property property="skill:dodgedefensive">
         1
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="volition">1</Core:Property>
      <Core:Property property="warning">
         "Unsetting \$OBJ since \$MERRY is set."
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
