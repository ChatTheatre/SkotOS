<object clone="/base/obj/thing" owner="Generic">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        MGeneric:DB:BandageDB
 Maintainer:    StoryCoder Kuang
 Email:         kuang@marrach.skotos.net
 Revision:      1.24
 Generated:     Sun Sep 25 01:50:28 2011 on Jonkichi
 Last revision: Mon Apr 18 10:10:23 2005 by caltosdarr (P)



(Do not modify #list# -- it is automatically constructed.)


-----
-----

*/
      </Core:Property>
      <Core:Property property="merry:react:unwear">
         X[M] string firstPerson, thirdPerson;
object env;
string loc;
int ctr;
mapping detailtocoverage;
string *ind;
string *val;
object person;

if(\$actor."debug:2" \|\| \$actor."debug:1")EmitTo(\$actor,"ENTER MGeneric:DB:BandageDB react:unwear");

if(\$actor."debug:2")EmitTo(\$actor,"u-----NRefDetail(\$target) is " + dump_value(NRefDetail(\$target)));

person = this."base:environment";

/*to ensure details read correctly when removed*/
person."descriptions:cache" = nil;

if(\$actor."debug:2")EmitTo(\$actor,"u-----person is " + dump_value(person));

if(NRefDetail(\$target) == "default")\{
 detailtocoverage = \$\{MGeneric:UrHuman\}.detailtocoverage;
 if(\$actor."debug:2")EmitTo(\$actor,"u-----detailtocoverage is " + dump_value(detailtocoverage));

 ind = map_indices(detailtocoverage);
 for(ctr=0;ctr\<sizeof(ind);ctr++)\{
  val = detailtocoverage[ind[ctr]];
  if(member(this."base:parts-covered"[0],val))\{
   if(\$actor."debug:2")EmitTo(\$actor,"u-----val is " + dump_value(val));
   if(\$actor."debug:2")EmitTo(\$actor,"u-----ind is " + dump_value(ind[ctr]));
   if(person."wound:woundlocations")\{
      if(person."wound:woundlocations"[ind[ctr]] \&\& Get(person,"healing:ishealing:" + ind[ctr]))\{
       loc = ind[ctr];
       break;
      \}
   \}
  \}
 \}
\}
else \{
 loc = \$target;
\}

if(\$actor."debug:2")EmitTo(\$actor,"u-----loc is " + dump_value(loc));


firstPerson= "The bandage unravels and disintegrates as you remove it";
if(loc!=nil)\{
 if (Get(person, "healing:ishealing:" + loc)) \{
  firstPerson += ", revealing a freshly opened wound";
 \}
\}

firstPerson += ".";

thirdPerson= Describe(\$actor) + " removes " + Describe(this, \$actor) + ", which promptly unravels and disintegrates.";

if(loc!=nil)Set(person, "healing:ishealing:" + loc , nil);

env = Get(\$actor, "base:environment");
EmitTo(\$actor, firstPerson);
EmitIn(env, thirdPerson, \$actor);

Slay(this);
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:wear">
         X[M] if(!\$actor."state:wound:wound:value")\{
 EmitTo(\$actor,"You do not appear to be wounded.");
 return FALSE;
\}

if(!\$actor."skill:healer")\{
 EmitTo(\$actor,"Bandages can only be applied by a healer.");
 return FALSE;
\}
if(\$actor == this."base:environment")\{
 EmitTo(\$actor,"You cannot apply bandages to yourself. Seek another healer.");
 return FALSE;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1097622322, "zwoc", "S", 1097622322, "zwoc", "S", 1097707006, "caltosdarr", "X", 1101131708, "caltosdarr", "P", 1101132144, "caltosdarr", "P", 1101132424, "caltosdarr", "P", 1113833423, "caltosdarr", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="{author}">
         "StoryCoder Kuang"
      </Core:Property>
      <Core:Property property="{email}">
         "kuang@marrach.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1113833423
      </Core:Property>
      <Core:Property property="{sub_rev}">24</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="971734080" state="Comment" user="brianm">
           The BandageDB.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
