<object clone="/base/obj/thing" owner="Generic">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="db"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="dbs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="food"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">food db</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        MGeneric:DB:FoodDB
 Maintainer:    StoryCoder Kuang
 Email:         kuang@marrach.skotos.net
 Revision:      1.24
 Generated:     Sun Sep 25 01:50:16 2011 on Jonkichi
 Last revision: Tue Oct 12 19:05:22 2004 by zwoc (S)



(Do not modify #list# -- it is automatically constructed.)


-----
-----

*/
      </Core:Property>
      <Core:Property property="empty">"0"</Core:Property>
      <Core:Property property="merry:react:eat">
         X[M] this."trait:eaten" = TRUE;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:nibble-dob">
         X[M] string desc;
string adv;
if(!this."trait:taste")\{
 return TRUE;
\}

desc = UnSAM(this."details:default:descriptions:brief");

if(this."base:environment" !=\$actor)\{
 EmitTo(\$actor,"You must be holding the " + desc +  " to do that.");
 return FALSE;
\}

adv=" ";

if(\$adverb)\{
 adv=" " + \$adverb;
\}

EmitTo(\$actor,"You" + adv + " nibble your " + desc + ". " + this."trait:taste");
EmitIn(\$actor."base:environment", Describe(\$actor) + adv + " nibbles " + \$actor."trait:possessive" + " " + desc + ".",\$actor);
      </Core:Property>
      <Core:Property property="merry:react:smell-dob">
         X[M] string desc;
if(!this."trait:smell")\{
 return TRUE;
\}

desc = UnSAM(this."details:default:descriptions:brief");

if(this."base:environment" != \$actor)\{
 EmitTo(\$actor,"You must be holding your " + desc + " to do that.");
 return FALSE;
\}

EmitTo(\$actor,this."trait:smell");
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:sniff-dob">
         X[M] string desc;
if(!this."trait:smell")\{
 return TRUE;
\}

desc = UnSAM(this."details:default:descriptions:brief");

if(this."base:environment" != \$actor)\{
 EmitTo(\$actor,"You must be holding your " + desc + " to do that.");
 return FALSE;
\}

EmitTo(\$actor,this."trait:smell");
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:taste-dob">
         X[M] string desc,adv;

if(!this."trait:taste")\{
 return TRUE;
\}
desc= UnSAM(this."details:default:descriptions:brief");

if(this."base:environment" != \$actor)\{
 EmitTo(\$actor, "You must be holding the " + desc + " to do that.");
 return FALSE;
\}

adv = " " ;
if(\$adverb)\{
 adv += \$adverb;
\}

EmitTo(\$actor, "You" + adv + " taste your " + desc + ". " + this."trait:taste");
EmitIn(\$actor."base:environment",Describe(\$actor) + adv + " tastes " + \$actor."trait:possessive" + " " + desc + ".",\$actor);
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1097622322, "zwoc", "S", 1097622322, "zwoc", "S" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="{author}">
         "StoryCoder Kuang"
      </Core:Property>
      <Core:Property property="{email}">
         "kuang@marrach.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1097622322
      </Core:Property>
      <Core:Property property="{sub_rev}">24</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="971734080" state="Comment" user="brianm">
           Generic food database.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
