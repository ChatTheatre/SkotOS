<object clone="/base/obj/thing" owner="Generic">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1.5" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        MGeneric:DB:CodeDB
 Maintainer:    StoryCoder Kuang
 Email:         kuang@marrach.skotos.net
 Revision:      1.24
 Generated:     Sun Sep 25 01:50:24 2011 on Jonkichi
 Last revision: Tue Oct 12 19:05:22 2004 by zwoc (S)



(Do not modify #list# -- it is automatically constructed.)


-----
-----

*/
      </Core:Property>
      <Core:Property property="merry:lib:inscribesub">
         X[M] /*
\$xaction
\$xdesc
\$xnoun
\$skill
\$level
*/

int skilllvl;
string skillname;
string detail,detname;

if(!\$xaction) \$xaction="embroider";
if(!\$xdesc) \$xdesc = "embroidered";
if(!\$xnoun) \$xnoun = "ebroidery";
if(!\$xactionthird) \$xactionthird="embroidering";

detail = ":" + NRefDetail(\$target);


if(detail==":default") detail="";
detname = replace_strings(detail,":","-");

if(!this.generic \|\| !Get(this,"alteration" + detail + ":can" + \$xaction))
\{
 EmitTo(\$actor,"Alas, " + Describe(\$target,nil,\$actor) + " cannot be " + \$xdesc + ". You should find another item to work upon.");
 return FALSE;
\}

skilllvl=-1;
if(Get(\$actor,"skill:" + \$skill))\{
 skilllvl = Get(\$actor,"skill:" + \$skill);
\}

if(skilllvl \< \$level)
\{
 EmitTo(\$actor, "Alas. Your skill is not sufficient to " + \$xaction +  " " + Describe(this,nil,\$actor) + ".");
 return FALSE;
\}


if(!\$evoke)
\{
 EmitTo(\$actor,"[You must specify the message to be " + \$xdesc + " in quotes. Example: " + \$xaction + " " + this."trait:superbrief" + " \\"I Love You\\"]");
 return FALSE;
\}

skillname = mggeneral::getskillname(\$skill: \$skill);

Set(this,"trait" + detail + ":inscription",\$(raw-evoke));

if(lower_case(\$(raw-evoke)) == "none")
\{
 EmitTo(\$actor,"Employing your skill as a " + skillname + ", you remove the " + \$xnoun + " from " + Describe(\$target,nil,\$actor));

 EmitIn(\$actor."base:environment", Describe(\$actor) + " employs " + \$actor."trait:possessive" + " skill as a " + skillname + ", removing the " + \$xnoun + " from " + Describe(\$target,\$actor,\$actor."base:environment") + ".",\$actor);

 Set(this,"trait" + detail + ":inscription",nil);
 Set(this,"details:inscription" + detname + ":hidden" ,TRUE);
\}
else
\{
 EmitTo (\$actor, "Employing your skill as a " + skillname + ", you " + \$xaction +  " \\"" + \$(raw-evoke) + "\\" upon " + Describe(\$target,nil,\$actor) + ".");

 EmitIn (\$actor."base:environment",Describe(\$actor) + " employs " + \$actor."trait:possessive" + " skill as a " + skillname + ", " + \$xactionthird + " \\"" + \$(raw-evoke) + "\\" upon " + Describe(\$target,\$actor,\$actor."base:environment") + ".",\$actor);

 Set(this,"details:inscription" + detname + ":descriptions:writing",\$(raw-evoke));
 Set(this,"details:inscription" + detname + ":sname:" + \$xnoun, TRUE);
 Set(this,"details:inscription" + detname + ":descriptions:brief",\$xnoun);
 if(NRefDetail(\$target) != "default")\{
  Set(this,"details:inscription" + detname + ":descriptions:look","The words \\"" + \$(raw-evoke) + "\\" have been carefully " + \$xaction + " upon " + mggeneral::aan(\$word: NRefDetail(\$target)) + ".");
 \}
 else\{
  Set(this,"details:inscription" + detname + ":descriptions:look","The words \\"" + \$(raw-evoke) + "\\" have been carefully " + \$xaction + " upon " + mggeneral::aan(\$word: this."trait:superbrief") + ".");
 \}

 if(detail!="") \{
  Set(this,"details:inscription" + detname + ":adjective" + detail,TRUE);
 \}
 else \{
  Set(this,"details:inscription:adjective:main" ,TRUE);
 \}
 Set(this,"details:inscription" + detname + ":hidden",FALSE);
\}
      </Core:Property>
      <Core:Property property="merry:react:+clone-dob">
         X[M] Call (this,"cloneit");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1053627369, "caltosdarr", "X", 1065429393, "caltosdarr", "P", 1065429956, "caltosdarr", "P", 1065429965, "caltosdarr", "P", 1065775384, "caltosdarr", "X", 1071591980, "caltosdarr", "X", 1071592012, "caltosdarr", "X", 1071700095, "caltosdarr", "X", 1071703629, "caltosdarr", "P", 1076453098, "caltosdarr", "P", 1097622322, "zwoc", "S", 1097622322, "zwoc", "S" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="{author}">
         "StoryCoder Kuang"
      </Core:Property>
      <Core:Property property="{email}">
         "kuang@marrach.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1097622322
      </Core:Property>
      <Core:Property property="{sub_rev}">24</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1030699079" state="Open" user="carlg">
           root CodeDB containing general methods
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
