<object clone="/obj/properties" owner="tonyd">
  <Core:PropertyContainer>
    <Ur:UrObject urobject="OBJ(Theatre:Lib:stages)"/>
    <Core:PCProperties>
      <Core:Property property="export:auto:default:description">
         X[S] Auto default description!
      </Core:Property>
      <Core:Property property="export:autoendpage">
         "end"
      </Core:Property>
      <Core:Property property="export:html:index">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$[/* run some initial code */
   ::initialize();
   ::figureState();]
\<html\>
   \<head scrolling="no"\>
      \<title\>\$(title)\</title\>
      \$(this.xtra:stylesheet)
   \</head\>
   \<body\>
      \<div id="main"\>
      \$[\$snippet = Get(\$this, "xtra:state:" + \$state);]
      \{? \| \$(snippet) \| \$(snippet) \|
            \<div id="infobox"\>No definition for state: '\$(state)'.\</div\>
      \}
      \</div\>
   \</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="export:startpage">
         "auto"
      </Core:Property>
      <Core:Property property="export:theatre_id">
         "ID"
      </Core:Property>
      <Core:Property property="export:title">
         "Character Generator"
      </Core:Property>
      <Core:Property property="export:xtra:state:alreadycast">
         X[S] \\\<!-- confirm user is cast; offer chance to cancel --\\\>
\<div id="infobox"\>
   \<b\>\<capitalize what="\$(Name)"/\>\</b\>:
   You are \<b\>confirmed\</b\> as cast in the role of "\$[Describe(\$scenarioMap["roles"][\$role]["body"])]" for the next session of "\$(scenarioMap.name)".
\<br/\>
You may
  \<zact actrole="\$(role)"\>
    cancel
    \<action\>
      \$[::clearRole(\$stageDB: \$this, \$role: \$actrole);]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zact\>
  your commitment and free up this role for somebody else to play.
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:auto">
         X[S] \\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\\\<!--
\$[/*EmitTo(\$\{Chatters:IC:az:azrael\}, dump_value(args));*/ return nil;]
--\\\>
\\\<!-- find which autopage the player is at. get the choices for this page, as well as the page description --\\\>
\$[if(\$body."charGen:state:auto" != nil) \{
  \$autoNumber = \$body."chargen:state:auto";
\} else \{
  \$autoNumber = 1;
\}
if(Get(this, "auto:" + Str(\$autoNumber) + ":description") != nil)
\{
  \$autoDesc = Get(this, "auto:" + Str(\$autoNumber) + ":description");
\} else \{
  \$autoDesc = Get(this, "auto:default:description");
\}
if(Get(this, "auto:" + Str(\$autoNumber) + ":choices") != nil)
\{
  \$autoChoices = Get(this, "auto:" + Str(\$autoNumber) + ":choices");
\} else \{
  \$autoNumber = nil;
  \$body."CharGen:State:auto" = nil;
  \$body."CharGen:State" = Get(\$this, "autoendpage");
  \$autoChoices = (\{ \});
\}]
\{? \| \$(autoNumber) \|\|
\<redirect propob="\$(this)" characterref="\$(body)"/\>
\<meta HTTP-EQUIV="Refresh" CONTENT="0"/\>
\}
\<div id="bigbox"\>
\$(autoDesc)
\</div\>
\<div id="castlist"\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: \$autoChoices);]
  \<zform actbody="\$(body)" actchoices="\$(choices)" actnumber="\$(autoNumber)"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \|
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select NAME="counter\$[Str(\$counter)]" SIZE="1"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
\|\}
    \</for\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$list = (\{ \});
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)
\{
  if(sizeof(\$actchoices[\$i])\>=2)
  \{
    \$list += (\{ \$actchoices[\$i][1] \});
  \}
\}

switch (sizeof(\$list)) \{
    case 20:
      Set(\$actbody, "appearance:" + \$list[19], \$counter20);
    case 19:
      Set(\$actbody, "appearance:" + \$list[18], \$counter19);
    case 18:
      Set(\$actbody, "appearance:" + \$list[17], \$counter18);
    case 17:
      Set(\$actbody, "appearance:" + \$list[16], \$counter17);
    case 16:
      Set(\$actbody, "appearance:" + \$list[15], \$counter16);
    case 15:
      Set(\$actbody, "appearance:" + \$list[14], \$counter15);
    case 14:
      Set(\$actbody, "appearance:" + \$list[13], \$counter14);
    case 13:
      Set(\$actbody, "appearance:" + \$list[12], \$counter13);
    case 12:
      Set(\$actbody, "appearance:" + \$list[11], \$counter12);
    case 11:
      Set(\$actbody, "appearance:" + \$list[10], \$counter11);
    case 10:
      Set(\$actbody, "appearance:" + \$list[9], \$counter10);
    case 9:
      Set(\$actbody, "appearance:" + \$list[8], \$counter9);
    case 8:
      Set(\$actbody, "appearance:" + \$list[7], \$counter8);
    case 7:
      Set(\$actbody, "appearance:" + \$list[6], \$counter7);
    case 6:
      Set(\$actbody, "appearance:" + \$list[5], \$counter6);
    case 5:
      Set(\$actbody, "appearance:" + \$list[4], \$counter5);
    case 4:
      Set(\$actbody, "appearance:" + \$list[3], \$counter4);
    case 3:
      Set(\$actbody, "appearance:" + \$list[2], \$counter3);
    case 2:
      Set(\$actbody, "appearance:" + \$list[1], \$counter2);
    case 1:
      Set(\$actbody, "appearance:" + \$list[0], \$counter1);
    default:
      Set(\$actbody, "CharGen:State:auto", Int(\$actnumber + 1));
      break;
\}]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
  \<sbr/\>
\<zact actbody="\$(body)"\>
FIRST
  \<action\>
    \$[\$actbody."CharGen:State:auto" = Int(\$autoNumber) + 1;]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<br/\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:auto-bak">
         X[S] \\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\\\<!--
\$[/*EmitTo(\$\{Chatters:IC:az:azrael\}, dump_value(args));*/ return nil;]
--\\\>
\<div id="bigbox"\>
UPDATED AUTOPAGE!
\<br/\>
\$(this.auto:1:description)
\</div\>
\<div id="castlist"\>
  \$(this.auto:1:choices)
  \<sbr/\>\<sbr/\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: \$this."auto:1:choices");]
  \<for var="thisfeature" val="\$(choices)"\>
    \<for var="thisfeature2" val="\$(thisfeature)"\>
      \$(thisfeature2)\<sbr/\>
    \</for\>
  \</for\>
  \<zform actbody="\$(body)" actchoices="\$(choices)"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \| \$(counter)
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select NAME="counter\$[Str(\$counter)]" SIZE="1"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
\|\}
    \</for\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$list = (\{ \});
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)
\{
  if(sizeof(\$actchoices[\$i])\>=2)
  \{
    \$list += (\{ \$actchoices[\$i][1] \});
  \}
\}

switch (sizeof(\$list)) \{
    case 20:
      Set(\$actbody, "appearance:" + \$list[20], \$counter20);
    case 19:
      Set(\$actbody, "appearance:" + \$list[19], \$counter19);
    case 18:
      Set(\$actbody, "appearance:" + \$list[18], \$counter18);
    case 17:
      Set(\$actbody, "appearance:" + \$list[17], \$counter17);
    case 16:
      Set(\$actbody, "appearance:" + \$list[16], \$counter16);
    case 15:
      Set(\$actbody, "appearance:" + \$list[15], \$counter15);
    case 14:
      Set(\$actbody, "appearance:" + \$list[14], \$counter14);
    case 13:
      Set(\$actbody, "appearance:" + \$list[13], \$counter13);
    case 12:
      Set(\$actbody, "appearance:" + \$list[12], \$counter12);
    case 11:
      Set(\$actbody, "appearance:" + \$list[11], \$counter11);
    case 10:
      Set(\$actbody, "appearance:" + \$list[10], \$counter10);
    case 9:
      Set(\$actbody, "appearance:" + \$list[9], \$counter9);
    case 8:
      Set(\$actbody, "appearance:" + \$list[8], \$counter8);
    case 7:
      Set(\$actbody, "appearance:" + \$list[7], \$counter7);
    case 6:
      Set(\$actbody, "appearance:" + \$list[6], \$counter6);
    case 5:
      Set(\$actbody, "appearance:" + \$list[5], \$counter5);
    case 4:
      Set(\$actbody, "appearance:" + \$list[4], \$counter4);
    case 3:
      Set(\$actbody, "appearance:" + \$list[2], \$counter3);
    case 2:
      Set(\$actbody, "appearance:" + \$list[1], \$counter2);
    case 1:
      Set(\$actbody, "appearance:" + \$list[0], \$counter1);
    default:
      break;
\}]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
  \<sbr/\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page2";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<br/\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:auto-bak2">
         X[S] \\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\\\<!--
\$[/*EmitTo(\$\{Chatters:IC:az:azrael\}, dump_value(args));*/ return nil;]
--\\\>
\<div id="bigbox"\>
UPDATED AUTOPAGE!
\<br/\>
\$(this.auto:1:description)
\</div\>
\<div id="castlist"\>
  \$(this.auto:1:choices)
  \<sbr/\>\<sbr/\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: \$this."auto:1:choices");]
  \<for var="thisfeature" val="\$(choices)"\>
    \<for var="thisfeature2" val="\$(thisfeature)"\>
      \$(thisfeature2)\<sbr/\>
    \</for\>
  \</for\>
  \<zform actbody="\$(body)" actchoices="\$(choices)"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \| \$(counter)
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select NAME="counter\$[Str(\$counter)]" SIZE="1"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
\|\}
    \</for\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$list = (\{ \});
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)
\{
  if(sizeof(\$actchoices[\$i])\>=2)
  \{
    \$list += (\{ \$actchoices[\$i][1] \});
  \}
\}

switch (sizeof(\$list)) \{
    case 20:
      Set(\$actbody, "appearance:" + \$list[20], \$counter20);
    case 19:
      Set(\$actbody, "appearance:" + \$list[19], \$counter19);
    case 18:
      Set(\$actbody, "appearance:" + \$list[18], \$counter18);
    case 17:
      Set(\$actbody, "appearance:" + \$list[17], \$counter17);
    case 16:
      Set(\$actbody, "appearance:" + \$list[16], \$counter16);
    case 15:
      Set(\$actbody, "appearance:" + \$list[15], \$counter15);
    case 14:
      Set(\$actbody, "appearance:" + \$list[14], \$counter14);
    case 13:
      Set(\$actbody, "appearance:" + \$list[13], \$counter13);
    case 12:
      Set(\$actbody, "appearance:" + \$list[12], \$counter12);
    case 11:
      Set(\$actbody, "appearance:" + \$list[11], \$counter11);
    case 10:
      Set(\$actbody, "appearance:" + \$list[10], \$counter10);
    case 9:
      Set(\$actbody, "appearance:" + \$list[9], \$counter9);
    case 8:
      Set(\$actbody, "appearance:" + \$list[8], \$counter8);
    case 7:
      Set(\$actbody, "appearance:" + \$list[7], \$counter7);
    case 6:
      Set(\$actbody, "appearance:" + \$list[6], \$counter6);
    case 5:
      Set(\$actbody, "appearance:" + \$list[5], \$counter5);
    case 4:
      Set(\$actbody, "appearance:" + \$list[4], \$counter4);
    case 3:
      Set(\$actbody, "appearance:" + \$list[2], \$counter3);
    case 2:
      Set(\$actbody, "appearance:" + \$list[1], \$counter2);
    case 1:
      Set(\$actbody, "appearance:" + \$list[0], \$counter1);
    default:
      break;
\}]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
  \<sbr/\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page2";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<br/\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:end">
         X[S] \\\<!-- we're finished! woo! --\\\>
\<div id="infobox"\>
Thank you!\<br/\>
You have now finished creating your character, and are ready to enter the game.\<br/\>\<sbr/\>
\<br/\>\<sbr/\>
   \<button onClick="window.close();"\>Close Window\</button\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:no-body">
         X[S] \\\<!-- confirm user is cast; offer chance to cancel --\\\>
\<div id="infobox"\>
\\\<!-- Check that we are allowed to create new characters --\\\>
\{? \| \$(taken_name) \| I'm sorry, but that name has already been used. Please choose another one. \<sbr/\> \}
\<zform\>
What is your name?\<br/\>
  \<input type="text" name="nickname"/\>\<br/\>
  Are you \<input type="radio" name="gender" value="male" checked="1"/\>Male or \<input type="radio" name="gender" value="female"/\>Female?\<br/\>
  \<input type="submit" value="Continue"/\>
  \<action\>
  \{? \| \$(nickname) \|
    \$[\$nickname = lower_case(\$nickname);]
    \{? \| \$[!Obj("Chatters:" + this.theatre_id + ":" + \$nickname[0..1] + ":" + \$nickname)] \|
      \<create-chatter gender="\$(Gender)" char="\$(nickname)"/\>
      \<redirect propob="\$(this)" characterref="\$[Obj("Chatters:" + this.theatre_id + ":" + \$nickname[0..1] + ":" + \$nickname)]"/\>
    \|
      \<redirect propob="\$(this)" taken_name="true"/\>
    \}
  \|
    \<redirect propob="\$(this)"/\>
  \}
  \</action\>
\</zform\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:noroles">
         X[S] \<div id="infobox"\>
   Sorry, all the roles have been cast. We plan to re-run this scenario again in the future. Please check the forums for date and time.\<sbr/\>
   \<button onClick="window.close();"\>Close Window\</button\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:noshow">
         X[S] \\\<!-- slam user for being a noshow --\\\>
\<div id="infobox"\>
   You previously registered for a role in a Skotos stage but failed to show up, and you have been marked a 'no-show'. Please contact the GMs to have this flag removed.\<sbr/\>
   \<button onClick="window.close();"\>Close Window\</button\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:page1">
         X[S] \\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\<div id="bigbox"\>
PAGE ONE! BUILD AND FUR OR SKIN
\<br/\>
Look description:
\$(body.trait:look)\<br/\>
Examine description:
\$(body.trait:examine)\<br/\>
\$(name)
\$(dat)
\$(body)
\$(body.trait:animal)
\$(body.trait:animaltype)
\$(body.base:urparent)
\</div\>
\<div id="castlist"\>
  You are a
  \<zform actbody="\$(body)"\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "height", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="height" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:height)\</option\>
      \<for var="thisheight" val="\$(choicearray)"\>
        \<option\>\$(thisheight)\</option\>
      \</for\>
    \</select\>
 and
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "build", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="build" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:build)\</option\>
      \<for var="thisbuild" val="\$(choicearray)"\>
        \<option\>\$(thisbuild)\</option\>
      \</for\>
    \</select\>
 \$(body.trait:animal).\<br/\>
You have
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "furlength", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="furlength" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:furlength)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "furtexture", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="furtexture" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:furtexture)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "furcoloradj", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="furcoloradj" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:furcoloradj)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "furcolor", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="furcolor" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:furcolor)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
\$(body.appearance:furtype).
    \<br/\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$actbody."appearance:build" = \$build;
      \$actbody."appearance:height" = \$height;
      \$actbody."appearance:furlength" = \$furlength;
      \$actbody."appearance:furtexture" = \$furtexture;
      \$actbody."appearance:furcoloradj" = \$furcoloradj;
      \$actbody."appearance:furcolor" = \$furcolor;
      Call(nil /* defunct */, "updatedesc", \$body: \$actbody);]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page2";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<br/\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:page2">
         X[S] \\\<!-- This is where the user chooses what type of hair they want --\\\>
\<div id="bigbox"\>
PAGE TWO! HAIR
\<br/\>
Look description:
\$(body.trait:look)\<br/\>
Examine description:
\$(body.trait:examine)\<br/\>
\</div\>
\<div id="castlist"\>
  \<zform actbody="\$(body)"\>
    Do you have a head of hair, in addition to your \$(body.appearance:furtype)?\<br/\>
    \<input TYPE="radio" NAME="hashair" VALUE="yes"/\>Yes\<br/\>
    \<input TYPE="radio" NAME="hashair" VALUE="no"/\>No\<br/\>
    If you have or got hair, it would be:\<br/\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "hairlength", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="hairlength" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:hairlength)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "hairtype", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="hairtype" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:hairtype)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "haircoloradj", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="haircoloradj" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:haircoloradj)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "haircolor", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="haircolor" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:haircolor)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 hair, in
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "hairstyle", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="hairstyle" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:hairstyle)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \<br/\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[if(\$hashair == "no") \{
        \$actbody."appearance:hairlength" = "none";
        \$actbody."appearance:hairtype" = \$hairtype;
        \$actbody."appearance:haircoloradj" = \$haircoloradj;
        \$actbody."appearance:haircolor" = \$haircolor;
        \$actbody."appearance:hairstyle" = "none";
      \} else \{
        \$actbody."appearance:hairlength" = \$hairlength;
        \$actbody."appearance:hairtype" = \$hairtype;
        \$actbody."appearance:haircoloradj" = \$haircoloradj;
        \$actbody."appearance:haircolor" = \$haircolor;
        \$actbody."appearance:hairstyle" = \$hairstyle;
      \}
      Call(nil /* defunct */, "updatedesc", \$body: \$actbody);]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<zact actbody="\$(body)"\>
BACK
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page1";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page3";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:page3">
         X[S] \\\<!-- This is where the user chooses what type of eyes, nose, and mouth they want --\\\>
\<div id="bigbox"\>
PAGE THREE! EYES, NOSE AND MOUTH
\<br/\>
Look description:
\$(body.trait:look)\<br/\>
Examine description:
\$(body.trait:examine)\<br/\>
\</div\>
\<div id="castlist"\>
  \<zform actbody="\$(body)"\>
    You have
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "eyeshape", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="eyeshape" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:eyeshape)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "eyecoloradj", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="eyecoloradj" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:eyecoloradj)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "eyecolor", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="eyecolor" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:eyecolor)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 eyes, a
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "noseshape", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="noseshape" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:noseshape)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
nose, and a
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "mouthshape", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="mouthshape" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:mouthshape)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 mouth with
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "lipshape", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="lipshape" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:lipshape)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 lips.
    \<br/\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$actbody."appearance:eyeshape" = \$eyeshape;
        \$actbody."appearance:eyecoloradj" = \$eyecoloradj;
        \$actbody."appearance:eyecolor" = \$eyecolor;
        \$actbody."appearance:noseshape" = \$noseshape;
        \$actbody."appearance:mouthshape" = \$mouthshape;
        \$actbody."appearance:lipshape" = \$lipshape;
        Call(nil /* defunct */, "updatedesc", \$body: \$actbody);]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<zact actbody="\$(body)"\>
BACK
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page2";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page4";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:page4">
         X[S] \\\<!-- This is where the user chooses what type of hands and feet they want --\\\>
\<div id="bigbox"\>
PAGE FOUR! HANDS AND FEET
\<br/\>
Look description:
\$(body.trait:look)\<br/\>
Examine description:
\$(body.trait:examine)\<br/\>
\</div\>
\<div id="castlist"\>
  \<zform actbody="\$(body)"\>
    You have
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "clawlength", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="clawlength" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:clawlength)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "clawapp", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="clawapp" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:clawapp)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 \$(body.appearance:clawtype) at the end of
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "hands", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="hands" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:hands)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 hands, and
    \$[\$choicearray = Call(this, "grabchoices", \$choice: "feet", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
    \<select NAME="feet" SIZE="1"\>
      \<option SELECTED="1"\>\$(body.appearance:feet)\</option\>
      \<for var="thisvar" val="\$(choicearray)"\>
        \<option\>\$(thisvar)\</option\>
      \</for\>
    \</select\>
 \$(body.appearance:feettype)
    \<br/\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$actbody."appearance:clawlength" = \$clawlength;
        \$actbody."appearance:clawapp" = \$clawapp;
        \$actbody."appearance:hands" = \$hands;
        \$actbody."appearance:feet" = \$feet;
        Call(nil /* defunct */, "updatedesc", \$body: \$actbody);]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<zact actbody="\$(body)"\>
BACK
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page3";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page5";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:page5">
         X[S] \\\<!-- This is where the user chooses any remaining options --\\\>
\<div id="bigbox"\>
PAGE FIVE! REMAINING OPTIONS
\<br/\>
Look description:
\$(body.trait:look)\<br/\>
Examine description:
\$(body.trait:examine)\<br/\>
\</div\>
\<div id="castlist"\>
Features:
    \$[/*\$featurearray = (\{ (\{ (\{ "taillength", "tailtexture" \}), "foxtail" \}) \});*/
\$featurearray = Call(this, "grabchoices", \$choice: "features", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");
      \$counter = 0;]
  \<zform actbody="\$(body)" actfeatures="\$(featurearray)"\>
    You have:\<br/\>
    \<for var="thisfeature" val="\$(featurearray)"\>
      \<for var="thisoption" val="\$[\$thisfeature[0]]"\>
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisoption, \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select NAME="counter\$[Str(\$counter)]" SIZE="1"\>
          \$[if(Get(\$body, "appearance:" + \$thisoption)) \{ \$knowsoption = 1; \} else \{ \$knowsoption = nil; \}]
          \{? \| \$[Get(\$body, "appearance:" + \$thisoption)] \|
            \<option SELECTED="1"\>\$[Get(\$body, "appearance:" + \$thisoption)]\</option\>
          \|
            \<option\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
        \$[\$counter++;]
      \</for\>
      \$[\$thisfeature[1]]\<br/\>
    \</for\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$actbody."appearance:browshape" = \$browshape;
        \$actbody."appearance:earshape" = \$earshape;
\$list = (\{ \});
for(\$i = 0; \$i \< sizeof(\$actfeatures); \$i++)
\{
  for(\$j = 0; \$j \< sizeof(\$actfeatures[\$i][0]); \$j++)
  \{
    \$list += (\{ \$actfeatures[\$i][0][\$j] \});
  \}
\}
/*if(sizeof(\$list) \> 0)
\{
  Set(\$actbody, "appearance:" + \$list[0], \$counter0);
\}*/

switch (sizeof(\$list)-1) \{
    case 20:
      Set(\$actbody, "appearance:" + \$list[20], \$counter20);
    case 19:
      Set(\$actbody, "appearance:" + \$list[19], \$counter19);
    case 18:
      Set(\$actbody, "appearance:" + \$list[18], \$counter18);
    case 17:
      Set(\$actbody, "appearance:" + \$list[17], \$counter17);
    case 16:
      Set(\$actbody, "appearance:" + \$list[16], \$counter16);
    case 15:
      Set(\$actbody, "appearance:" + \$list[15], \$counter15);
    case 14:
      Set(\$actbody, "appearance:" + \$list[14], \$counter14);
    case 13:
      Set(\$actbody, "appearance:" + \$list[13], \$counter13);
    case 12:
      Set(\$actbody, "appearance:" + \$list[12], \$counter12);
    case 11:
      Set(\$actbody, "appearance:" + \$list[11], \$counter11);
    case 10:
      Set(\$actbody, "appearance:" + \$list[10], \$counter10);
    case 9:
      Set(\$actbody, "appearance:" + \$list[9], \$counter9);
    case 8:
      Set(\$actbody, "appearance:" + \$list[8], \$counter8);
    case 7:
      Set(\$actbody, "appearance:" + \$list[7], \$counter7);
    case 6:
      Set(\$actbody, "appearance:" + \$list[6], \$counter6);
    case 5:
      Set(\$actbody, "appearance:" + \$list[5], \$counter5);
    case 4:
      Set(\$actbody, "appearance:" + \$list[4], \$counter4);
    case 3:
      Set(\$actbody, "appearance:" + \$list[3], \$counter3);
    case 2:
      Set(\$actbody, "appearance:" + \$list[2], \$counter2);
    case 1:
      Set(\$actbody, "appearance:" + \$list[1], \$counter1);
    case 0:
      Set(\$actbody, "appearance:" + \$list[0], \$counter0);
    default:
      break;
\}

        Call(nil /* defunct */, "updatedesc", \$body: \$actbody);]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<zact actbody="\$(body)"\>
BACK
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page4";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page6";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:page6">
         X[S] \\\<!-- we're finished! woo! --\\\>
\<div id="infobox"\>
Thank you!\<br/\>
You have now finished creating your character, and are ready to enter the game.\<br/\>\<sbr/\>
\<zact actbody="\$(body)"\>
BACK
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page5";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<br/\>\<sbr/\>
   \<button onClick="window.close();"\>Close Window\</button\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:tonytest">
         X[S] \\\<!-- This page is where the user selects what specific breed of animal they wish their character to be. E.G. Panther --\\\>
\\\<!-- Check that we have breed options for this type of animal, otherwise just set the breed to be the same as the animal type --\\\>
\$[if(!(\$breedlist = Get(\$this, "choices:animals:" + \$body."trait:animaltype")))
\{
  \$body."trait:animal" = \$body."trait:animaltype";
  \$body."IronClaw:CharacterCreator:State" = "page1";
\}]
\<div id="bigbox"\>
\$(this.page1:description)
Describing stuff\<br/\>
\$(name)
\$(dat)
\$(body)
\$(body.trait:animal)
\$(body.trait:animaltype)
\$(body.base:urparent)
\$(breedlist)
\$[\$breedlist]
\$[\$breedlist[1]]
\$[\$breedlist[1][0]]
\<br/\>Finished describing stuff
\</div\>
\<div id="castlist"\>
\{? \| \$(breedlist) \|
Please choose a breed of \$(body.trait:animaltype):\<br/\>
You are a
  \<zform actbody="\$(body)" actbreedlist="\$(breedlist)"\>
    \<select NAME="animalbreed" SIZE="1" onchange="submit()"\>
      \<option SELECTED="1"\>\{? equal \| \$(body.trait:animal) \| unknown \| \| \<capitalize what="\$(body.trait:animal)"/\> \}\</option\>
      \$[\$counter=-1;]
      \<for var="thisanimal" val="\$(breedlist)"\>
        \$[\$counter++;
          \$animalname = \$thisanimal[0];]
        \<option value="\$(counter)"\>\$(animalname)\</option\>
      \</for\>
    \</select\>
    \<action\>
      \$[\$actbody."trait:animal" = \$actbreedlist[Int(\$animalbreed)][0];
        if(sizeof(\$actbreedlist[Int(\$animalbreed)]) \> 1)
        \{
          \$actbody."breed:urparent" = \$actbreedlist[Int(\$animalbreed)][1];
        \} else \{
          \$actbody."breed:urparent" = nil;
        \}]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<br/\>
\{? equal \| \$(body.trait:animal) \| unknown \|  \|
\<zact actbody="\$(body)"\>
NEXT
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "page1";
      if(\$actbody."breed:urparent")
      \{
        \$actbody."base:urparent" = \$actbody."breed:urparent";
        \$actbody."breed:urparent" = nil;
      \}]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<br/\>
\<zact actbody="\$(body)"\>
NEW ANIMAL
  \<action\>
    \$[\$actbody."IronClaw:CharacterCreator:State" = "chooseanimal";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\}
\|
\<redirect propob="\$(this)" characterref="\$(actbody)"/\>
\<meta HTTP-EQUIV="Refresh" CONTENT="0"/\>
\}
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:welcome">
         X[S] \<div id="bigbox"\>
\$(scenarioMap.description)
\</div\>
\<div id="castlist"\>
  These roles are still uncast:\<br/\>
  \<for var="role" val="\$(uncastRoles)"\>
    \<span id="role"\>
      \<zact actrole="\$(role)" actuser="\$(name)"\>
        \$[Describe(\$scenarioMap["roles"][\$role]["body"])]
        \<action\>
          \$[::castInRole(\$stageDB: \$this, \$user: \$actuser, \$role: \$actrole);]
          \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
        \</action\>
      \</zact\>
    \</span\>\<sbr/\>
  \</for\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:stylesheet">
         X[S] \<style type="text/css"\>
    body \\\{
      padding: 0px;
      background: black;
           \\\}
    #main \\\{
      background: black;
      position: absolute;
      left: 0px; top: 0px;
      width: 640px;
      height: 390px;
      border: none;
           \\\}
    #mainbox \\\{
      position:absolute; left: 20px; top:50px;
      border: groove 2px;
      padding: 4px;
      width: 140px;
      height: 240px;
      background: #404040;
      color: yellow;
      font-family: cursive;
    \\\}
    #infobox \\\{
      position:absolute; right: 20px; top:180px;
      border: groove 2px;
      padding: 4px;
      width: 240px;
      height: 160px;
      background: #404040;
      color: yellow;
      font-family: cursive;
    \\\}
    \</style\>
      </Core:Property>
      <Core:Property property="merry:lib:figurestate">
         X[M] /*
  ** Now a bunch of code to figure out which state we're in; further
  ** down the SAM will act on this information to include the right
  ** sub-page.
  */

if(!\$body) return nil;

  /* did we fail to show up in any previous stage on this server? */
  if (\$dat."stage:no-show") \{
     \$state = "noshow";
     \$title = "You have been marked as a 'no-show' in some previous stage.";
     return nil;
  \}

/* check that this is the first time we're setting the variables for the character */
if(!Get(\$body, "CharGen:State"))
\{
  Set(\$body, "CharGen:State", Get(\$this, "startpage"));
\}

/* find which page we're at in the character creator */
\$title = Get(\$this, "title");

\$state = Get(\$body, "CharGen:State");

return nil;
      </Core:Property>
      <Core:Property property="merry:lib:gen-choices">
         X[M] /*
This function will generate a chunk of html to allow the user to make choices about their start story character
*/
/*variables for this function*/
string Head;
string Tail;
string Property;
string ChoiceBox;
string *Properties_arr;
int index;

if(!\$choices) return "";

\$choices = Str(UnSAM(\$choices));
Properties_arr = (\{\});

while(sscanf(\$choices, "%s[%s]%s", Head, Property, Tail) == 3)
\{
  Properties_arr += (\{ Property \});
  ChoiceBox = "\<select NAME=\\""+Property+"\\" SIZE=\\"1\\"\>\<option SELECTED=\\"1\\"\>";
  /* find the current value of this property */
  ChoiceBox += Str(Get(\$actbody, "appearance:"+Property));
  /* find the available options for this property */
  \$choicearray = Call(this, "grabchoices", \$choice: Property, \$animaltype: "fox", \$animalbreed: "fennec");
  for(index = 0; index \< sizeof(\$choicearray); index++)
  \{
    ChoiceBox += "\</option\>\<option\>"+Str(\$choicearray[index]);
  \}
  ChoiceBox += "\</option\>\</select\>";
  \$choices = Head+ChoiceBox+Tail;
\}

return (\{ \$choices, Properties_arr \});
      </Core:Property>
      <Core:Property property="merry:lib:initialize">
         X[M] /* first basic sanity checks -- these should never happen */
  if (\$dat == nil) \{
     error("page reached without a udat");
  \}
  if (\$name == nil) \{
     error("page reached without a name");
  \}

  if(\$body == nil \&\& \$characterref)
  \{
    \$body= Obj( \$characterref );
  \}

  if(\$body == nil \&\& \$thischaracter != nil)
  \{
    \$body = Obj( \$thischaracter[4..strlen(\$thischaracter)-2] );
  \}

  if (\$body == nil) \{
     \$state = "no-body";
     \$title = "Character Creator";
  \}

/* Need to check that this character is from the right theatre */

/* find the body for this character */
/*\$body = nil;
\$bodies = Udat::query_bodies_in_roster(\$user: \$name);
for(\$i = 0; \$i \< sizeof(\$bodies);)
\{
  if(\$bodies[\$i]."theatre:id" != Get(\$this, "theatre"))
  \{
    \$bodies -= (\{ \$bodies[\$i] \});
  \} else \{
    \$i++;
  \}
\}

if (!\$bodies \|\| sizeof(\$bodies) \< 1) \{
     error("Unknown character");
\} else \{
  \$body = \$bodies[0];
\}
*/
      </Core:Property>
      <Core:Property property="merry:lib:list-choices">
         X[M] /*
This function will generate an array which has elements that contain a string, then the property for a character creation choice.
an input of:
You have a [noseshape] nose, and [haircolor] hair.
would be returned as:
(\{ (\{ "You have a", "noseshape" \}), (\{ "nose, and ", haircolor \}), (\{ "hair." \}) \})
*/
/*variables for this function*/
string Head;
string Tail;
string Property;
string *Properties_arr;

Properties_arr = (\{\});
if(!\$choices) return Properties_arr;
\$choices = Str(UnSAM(\$choices));

while(sscanf(\$choices, "%s[%s]%s", Head, Property, Tail) == 3)
\{
  Properties_arr += (\{ (\{ Head, Property \}) \});
  \$choices = Tail;
\}
Properties_arr += (\{ (\{ Tail \}) \});

return Properties_arr;
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1063771615, "tonyd", "E", 1063771873, "tonyd", "E", 1063772663, "tonyd", "E", 1063774532, "tonyd", "E", 1063774726, "tonyd", "E", 1063774936, "tonyd", "E", 1063869372, "tonyd", "E", 1063869585, "tonyd", "E", 1063870161, "tonyd", "E", 1063870235, "tonyd", "E", 1063870780, "tonyd", "E", 1063871222, "tonyd", "E", 1064064718, "tonyd", "E", 1064066461, "tonyd", "E", 1064130372, "tonyd", "E", 1064134941, "tonyd", "E", 1064150487, "tonyd", "E", 1064152761, "tonyd", "E", 1064154108, "tonyd", "E", 1064154508, "tonyd", "E", 1064156071, "tonyd", "E", 1064158378, "tonyd", "E", 1064380462, "tonyd", "E", 1064380517, "tonyd", "E", 1064381313, "tonyd", "E", 1064381552, "tonyd", "E", 1064381770, "tonyd", "E", 1064381860, "tonyd", "E", 1064381954, "tonyd", "E", 1064382767, "tonyd", "E", 1064382964, "tonyd", "E", 1064383131, "tonyd", "E", 1064383360, "tonyd", "E", 1064383694, "tonyd", "E", 1064385904, "tonyd", "E", 1064386484, "tonyd", "E", 1064386593, "tonyd", "E", 1064387235, "tonyd", "E", 1064387299, "tonyd", "E", 1064387370, "tonyd", "E", 1064387478, "tonyd", "E", 1064387640, "tonyd", "E", 1064387824, "tonyd", "E", 1064387913, "tonyd", "E", 1064466024, "tonyd", "E", 1064467023, "tonyd", "E", 1064468719, "tonyd", "E", 1064468979, "tonyd", "E", 1064469487, "tonyd", "E", 1064469546, "tonyd", "E", 1064469658, "tonyd", "E", 1064469906, "tonyd", "E", 1064470302, "tonyd", "E", 1064470373, "tonyd", "E", 1064470681, "tonyd", "E", 1070764008, "tonyd", "P", 1073619192, "tonyd", "P", 1073619404, "tonyd", "P", 1073619574, "tonyd", "P", 1073619826, "tonyd", "P", 1073619892, "tonyd", "P", 1073620065, "tonyd", "P", 1073620305, "tonyd", "P", 1080256174, "tonyd", "P", 1080256405, "tonyd", "P", 1080256818, "tonyd", "P", 1080257003, "tonyd", "P", 1080257189, "tonyd", "P", 1080258166, "tonyd", "P", 1080259820, "tonyd", "P", 1080262102, "tonyd", "P", 1080263214, "tonyd", "P", 1080263429, "tonyd", "P", 1080263464, "tonyd", "P", 1080263485, "tonyd", "P", 1080263636, "tonyd", "P", 1080263661, "tonyd", "P", 1080263681, "tonyd", "P", 1080263774, "tonyd", "P", 1080263805, "tonyd", "P", 1080263828, "tonyd", "P", 1080263845, "tonyd", "P", 1080263858, "tonyd", "P", 1080263902, "tonyd", "P", 1080263942, "tonyd", "P", 1080264472, "tonyd", "P", 1080264530, "tonyd", "P", 1080264550, "tonyd", "P", 1080264567, "tonyd", "P", 1080264957, "tonyd", "P", 1080265053, "tonyd", "P", 1080265176, "tonyd", "P", 1080265248, "tonyd", "P", 1080265435, "tonyd", "P", 1080265501, "tonyd", "P", 1080265563, "tonyd", "P", 1080265621, "tonyd", "P", 1080265751, "tonyd", "P", 1080265776, "tonyd", "P", 1080265820, "tonyd", "P", 1080265873, "tonyd", "P", 1080265902, "tonyd", "P", 1080265943, "tonyd", "P", 1080266074, "tonyd", "P", 1080266185, "tonyd", "P", 1080266201, "tonyd", "P", 1080266216, "tonyd", "P", 1080266254, "tonyd", "P", 1080266275, "tonyd", "P", 1080266371, "tonyd", "P", 1080266389, "tonyd", "P", 1080266622, "tonyd", "P", 1080266767, "tonyd", "P", 1080266896, "tonyd", "P", 1080266957, "tonyd", "P", 1080266983, "tonyd", "P", 1080267030, "tonyd", "P", 1080267042, "tonyd", "P", 1080267164, "tonyd", "P", 1080267210, "tonyd", "P", 1080267234, "tonyd", "P", 1080267321, "tonyd", "P", 1080267411, "tonyd", "P", 1080267431, "tonyd", "P", 1080267525, "tonyd", "P", 1080267705, "tonyd", "P", 1080267882, "tonyd", "P", 1080267929, "tonyd", "P", 1080267960, "tonyd", "P", 1080268042, "tonyd", "P", 1080268099, "tonyd", "P", 1080268123, "tonyd", "P", 1080268156, "tonyd", "P", 1080268181, "tonyd", "P", 1080268201, "tonyd", "P", 1080268325, "tonyd", "P", 1080268343, "tonyd", "P", 1080268358, "tonyd", "P", 1080269302, "tonyd", "P", 1080269320, "tonyd", "P", 1080269370, "tonyd", "P", 1080269430, "tonyd", "P", 1080269452, "tonyd", "P", 1080269467, "tonyd", "P", 1080269583, "tonyd", "P", 1080269648, "tonyd", "P", 1080269710, "tonyd", "P", 1080269966, "tonyd", "P", 1080269992, "tonyd", "P", 1080270087, "tonyd", "P", 1080270462, "tonyd", "P", 1080270865, "tonyd", "P", 1080270874, "tonyd", "P", 1080270885, "tonyd", "P", 1080270900, "tonyd", "P", 1080270973, "tonyd", "P", 1080270993, "tonyd", "P", 1080271071, "tonyd", "P", 1080271096, "tonyd", "P", 1080271124, "tonyd", "P", 1080271176, "tonyd", "P", 1080271705, "tonyd", "P", 1080271730, "tonyd", "P", 1080271757, "tonyd", "P", 1080271891, "tonyd", "P", 1080272359, "tonyd", "P", 1080272378, "tonyd", "P", 1080272428, "tonyd", "P", 1080272522, "tonyd", "P", 1080272589, "tonyd", "P", 1080272631, "tonyd", "P", 1080272647, "tonyd", "P", 1080272863, "tonyd", "P", 1080273028, "tonyd", "P", 1080273231, "tonyd", "P", 1080273275, "tonyd", "P", 1080273298, "tonyd", "P", 1080273322, "tonyd", "P", 1080273373, "tonyd", "P", 1080273391, "tonyd", "P", 1080273407, "tonyd", "P", 1080273732, "tonyd", "P", 1080538251, "tonyd", "P", 1080538293, "tonyd", "P", 1080538355, "tonyd", "P", 1080538531, "tonyd", "P", 1080538646, "tonyd", "P", 1080538687, "tonyd", "P", 1080538807, "tonyd", "P", 1080538887, "tonyd", "P", 1080541292, "tonyd", "P", 1080543152, "tonyd", "P", 1080543281, "tonyd", "P", 1080543295, "tonyd", "P", 1080543335, "tonyd", "P", 1080543345, "tonyd", "P", 1080543368, "tonyd", "P", 1080543544, "tonyd", "P", 1080543572, "tonyd", "P", 1080543639, "tonyd", "P", 1080543910, "tonyd", "P", 1080702872, "tonyd", "P", 1080703301, "tonyd", "P", 1080703483, "tonyd", "P", 1080703536, "tonyd", "P", 1080703580, "tonyd", "P", 1080703603, "tonyd", "P", 1080703627, "tonyd", "P", 1080703669, "tonyd", "P", 1080704006, "tonyd", "P", 1080704070, "tonyd", "P", 1080704094, "tonyd", "P", 1080704377, "tonyd", "P", 1080704885, "tonyd", "P", 1080704916, "tonyd", "P", 1080706141, "tonyd", "P", 1080706308, "tonyd", "P", 1080706353, "tonyd", "P", 1080706622, "tonyd", "P", 1080706673, "tonyd", "P", 1080706695, "tonyd", "P", 1080706831, "tonyd", "P", 1080706898, "tonyd", "P", 1080706972, "tonyd", "P", 1080707670, "tonyd", "P", 1080707722, "tonyd", "P", 1080708307, "tonyd", "P", 1080708414, "tonyd", "P", 1080708485, "tonyd", "P", 1080708935, "tonyd", "P", 1080708991, "tonyd", "P", 1080709062, "tonyd", "P", 1080709097, "tonyd", "P", 1080709346, "tonyd", "P", 1080709410, "tonyd", "P", 1080710068, "tonyd", "P", 1080710356, "tonyd", "P", 1080710374, "tonyd", "P", 1080710407, "tonyd", "P", 1080711064, "tonyd", "P", 1080711589, "tonyd", "P", 1080711612, "tonyd", "P", 1080711634, "tonyd", "P", 1080711850, "tonyd", "P", 1080713415, "tonyd", "P", 1080714021, "tonyd", "P", 1080714102, "tonyd", "P", 1080714165, "tonyd", "P", 1080714207, "tonyd", "P", 1080714268, "tonyd", "P", 1080714349, "tonyd", "P", 1080714388, "tonyd", "P", 1080714415, "tonyd", "P", 1080714859, "tonyd", "P", 1080714943, "tonyd", "P", 1080714959, "tonyd", "P", 1080715339, "tonyd", "P", 1080715440, "tonyd", "P", 1080715779, "tonyd", "P", 1080715947, "tonyd", "P", 1080734139, "tonyd", "P", 1080734209, "tonyd", "P", 1080734317, "tonyd", "P", 1080734494, "tonyd", "P", 1080734561, "tonyd", "P", 1080734649, "tonyd", "P", 1080735084, "tonyd", "P", 1080735281, "tonyd", "P", 1080735387, "tonyd", "P", 1080735417, "tonyd", "P", 1080735465, "tonyd", "P", 1080735496, "tonyd", "P", 1080735600, "tonyd", "P", 1080735700, "tonyd", "P", 1080735728, "tonyd", "P", 1080735780, "tonyd", "P", 1080735814, "tonyd", "P", 1080735883, "tonyd", "P", 1080735909, "tonyd", "P", 1080735936, "tonyd", "P", 1080736008, "tonyd", "P", 1080736712, "tonyd", "P", 1081229125, "tonyd", "P", 1081230212, "tonyd", "P", 1081231666, "tonyd", "P", 1081232108, "tonyd", "P", 1081232320, "tonyd", "P", 1081232358, "tonyd", "P", 1081232378, "tonyd", "P", 1081232450, "tonyd", "P", 1081232841, "tonyd", "P", 1081232926, "tonyd", "P", 1081232968, "tonyd", "P", 1081233332, "tonyd", "P", 1081233374, "tonyd", "P", 1081233504, "tonyd", "P", 1081233548, "tonyd", "P", 1081233617, "tonyd", "P", 1081233656, "tonyd", "P", 1081233739, "tonyd", "P", 1081233846, "tonyd", "P", 1081233904, "tonyd", "P", 1081234136, "tonyd", "P", 1081234182, "tonyd", "P", 1081234286, "tonyd", "P", 1081234347, "tonyd", "P", 1081234516, "tonyd", "P", 1081234548, "tonyd", "P", 1081234637, "tonyd", "P", 1081234658, "tonyd", "P", 1081315534, "tonyd", "P", 1081315912, "tonyd", "P", 1081316190, "tonyd", "P", 1081316754, "tonyd", "P", 1081317129, "tonyd", "P", 1081319542, "tonyd", "P", 1081320429, "tonyd", "P", 1081320517, "tonyd", "P", 1081384723, "tonyd", "P", 1081564839, "tonyd", "P", 1081565006, "tonyd", "P", 1081565072, "tonyd", "P", 1081565524, "tonyd", "P", 1081565790, "tonyd", "P", 1081565858, "tonyd", "P", 1081565909, "tonyd", "P", 1081565945, "tonyd", "P", 1081566044, "tonyd", "P", 1081566955, "tonyd", "P", 1081566972, "tonyd", "P", 1081567558, "tonyd", "P", 1081567664, "tonyd", "P", 1081567721, "tonyd", "P", 1081567818, "tonyd", "P", 1081567842, "tonyd", "P", 1081568250, "tonyd", "P", 1081568671, "tonyd", "P", 1081568747, "tonyd", "P", 1081568818, "tonyd", "P", 1081568882, "tonyd", "P", 1081568973, "tonyd", "P", 1081568999, "tonyd", "P", 1081569037, "tonyd", "P", 1081569081, "tonyd", "P", 1081569125, "tonyd", "P", 1081569189, "tonyd", "P", 1081569751, "tonyd", "P", 1081569987, "tonyd", "P", 1081570956, "tonyd", "P", 1081571450, "tonyd", "P", 1081571566, "tonyd", "P", 1081571609, "tonyd", "P", 1081572146, "tonyd", "P", 1081572195, "tonyd", "P", 1081572208, "tonyd", "P", 1081572287, "tonyd", "P", 1081572532, "tonyd", "P", 1081572722, "tonyd", "P", 1081572889, "tonyd", "P", 1106953726, "tonyd", "E", 1107992927, "tonyd", "E", 1107995125, "tonyd", "E", 1107995492, "tonyd", "P", 1107995596, "tonyd", "P", 1107995628, "tonyd", "P", 1107995649, "tonyd", "P", 1107995972, "tonyd", "P", 1107996159, "tonyd", "E", 1107996206, "tonyd", "P", 1107996270, "tonyd", "E", 1107996466, "tonyd", "P", 1107996634, "tonyd", "P", 1107999547, "tonyd", "P", 1108000061, "tonyd", "E", 1108000331, "tonyd", "E", 1108000818, "tonyd", "E", 1108000942, "tonyd", "P", 1108002848, "tonyd", "E", 1108268703, "tonyd", "P", 1108268878, "tonyd", "P", 1108268944, "tonyd", "P", 1108269001, "tonyd", "P", 1108269211, "tonyd", "P", 1108269244, "tonyd", "P", 1108269585, "tonyd", "P", 1108269677, "tonyd", "P", 1108269711, "tonyd", "P", 1108269724, "tonyd", "P", 1108269805, "tonyd", "P", 1108269838, "tonyd", "P", 1108269863, "tonyd", "P", 1108269896, "tonyd", "P", 1108270163, "tonyd", "P", 1108270184, "tonyd", "P", 1108270568, "tonyd", "P", 1108270588, "tonyd", "P", 1108270678, "tonyd", "P", 1108270753, "tonyd", "P", 1108270787, "tonyd", "P", 1108270842, "tonyd", "P", 1108270871, "tonyd", "P", 1108271210, "tonyd", "P", 1108271420, "tonyd", "P", 1108271808, "tonyd", "P", 1108272121, "tonyd", "P" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
