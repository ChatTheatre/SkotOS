<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="agreeable:adverb">
         (\{ (\{ "approvingly" \}), (\{ "hesitantly" \}), (\{ "testingly" \}), (\{ "unsurely" \}), (\{ "wolfishly" \}), (\{ nil \}), (\{ nil \}), (\{ "pensively" \}), (\{ "lightly" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="agreeable:apos">
         (\{ (\{ "pv" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="agreeable:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="agreeable:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil, nil, (\{ (\{ "my:ear" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:tail" \}) \}), nil \})
      </Core:Property>
      <Core:Property property="agreeable:obj2">
         (\{ nil, nil, nil, nil, nil, nil, (\{ (\{ "my:paw" \}) \}), nil, nil, nil \})
      </Core:Property>
      <Core:Property property="agreeable:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="agreeable:prep">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), nil, nil, nil, (\{ nil \}), (\{ nil \}), (\{ nil \}), nil \})
      </Core:Property>
      <Core:Property property="agreeable:prep2">
         (\{ nil, nil, nil, nil, nil, nil, (\{ "with" \}), nil, nil, nil \})
      </Core:Property>
      <Core:Property property="agreeable:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="agreeable:verb">
         (\{ (\{ "sniff" \}), (\{ "regard" \}), (\{ "sniff" \}), (\{ "exhale" \}), (\{ "grin" \}), (\{ "pant" \}), (\{ "scratch" \}), (\{ "regard" \}), (\{ "wag" \}), (\{ "yawn" \}) \})
      </Core:Property>
      <Core:Property property="angry:adverb">
         (\{ (\{ "threateningly" \}), (\{ "angrily" \}), (\{ "angrily" \}), (\{ "commandingly" \}) \})
      </Core:Property>
      <Core:Property property="angry:apos">
         (\{ (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pv" \}) \})
      </Core:Property>
      <Core:Property property="angry:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="angry:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="angry:obj2">
         (\{ nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="angry:obj3">
         (\{ nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="angry:prep">
         (\{ (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}) \})
      </Core:Property>
      <Core:Property property="angry:prep2">
         (\{ nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="angry:prep3">
         (\{ nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="angry:verb">
         (\{ (\{ "growl" \}), (\{ "bark" \}), (\{ "growl" \}), (\{ "growl" \}) \})
      </Core:Property>
      <Core:Property property="annoyed:adverb">
         (\{ (\{ "annoyedly" \}), (\{ "uncomfortably" \}), (\{ "faintly" \}), (\{ nil \}), (\{ nil \}), (\{ "annoyedly" \}) \})
      </Core:Property>
      <Core:Property property="annoyed:apos">
         (\{ (\{ "pv" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ nil \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="annoyed:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="annoyed:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), nil, nil, (\{ (\{ "(subject)" \}) \}), nil, (\{ (\{ "my:tail" \}) \}) \})
      </Core:Property>
      <Core:Property property="annoyed:obj2">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="annoyed:obj3">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="annoyed:prep">
         (\{ (\{ nil \}), nil, nil, (\{ "at" \}), nil, (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="annoyed:prep2">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="annoyed:prep3">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="annoyed:verb">
         (\{ (\{ "regard" \}), (\{ "snort" \}), (\{ "exhale" \}), (\{ "bark" \}), (\{ "shift" \}), (\{ "wag" \}) \})
      </Core:Property>
      <Core:Property property="c_here:db:adverb">
         (\{ (\{ "happily" \}), (\{ "obediently" \}), (\{ "immediately" \}), (\{ "unsurely" \}), (\{ "readily" \}), (\{ nil \}), (\{ nil \}), (\{ "happily" \}), (\{ "obediently" \}), (\{ "hesitantly" \}), (\{ "unsurely" \}), (\{ "readily" \}), (\{ "easily" \}), (\{ nil \}), (\{ "noisily" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_here:db:apos">
         (\{ (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_here:db:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_here:db:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="c_here:db:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_here:db:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_here:db:prep">
         (\{ (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}) \})
      </Core:Property>
      <Core:Property property="c_here:db:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_here:db:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_here:db:verb">
         (\{ (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "pad" \}), (\{ "pad" \}), (\{ "pad" \}), (\{ "pad" \}), (\{ "pad" \}), (\{ "pad" \}), (\{ "pad" \}), (\{ "bounce" \}), (\{ "bounce" \}), (\{ "bound" \}) \})
      </Core:Property>
      <Core:Property property="c_lie:db:adverb">
         (\{ (\{ nil \}), (\{ "immediately" \}), (\{ "obediently" \}), (\{ "cozily" \}), (\{ "wonderingly" \}), (\{ "playfully" \}), (\{ "disobediently" \}), (\{ "playfully" \}), (\{ "spiritedly" \}), (\{ "easily" \}), (\{ "momentarily" \}) \})
      </Core:Property>
      <Core:Property property="c_lie:db:apos">
         (\{ (\{ nil \}), (\{ "pp" \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="c_lie:db:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_lie:db:obj">
         (\{ nil, nil, nil, nil, nil, nil, (\{ (\{ "my:tail" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="c_lie:db:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_lie:db:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_lie:db:prep">
         (\{ nil, nil, nil, nil, nil, nil, (\{ nil \}), (\{ nil \}), (\{ "at" \}), nil, nil \})
      </Core:Property>
      <Core:Property property="c_lie:db:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_lie:db:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_lie:db:verb">
         (\{ (\{ "lie" \}), (\{ "lie" \}), (\{ "lie" \}), (\{ "lie" \}), (\{ "lie" \}), (\{ "lie" \}), (\{ "wag" \}), (\{ "ignore" \}), (\{ "bark" \}), (\{ "lie" \}), (\{ "lie" \}) \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:adverb">
         (\{ (\{ "affirmatively" \}), (\{ "hopefully" \}) \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:apos">
         (\{ (\{ "pp" \}), (\{ "pv" \}) \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:evoke">
         (\{ (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:obj2">
         (\{ nil, nil \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:obj3">
         (\{ nil, nil \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:prep">
         (\{ (\{ "to" \}), (\{ "at" \}) \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:prep2">
         (\{ nil, nil \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:prep3">
         (\{ nil, nil \})
      </Core:Property>
      <Core:Property property="c_like_cats:db:verb">
         (\{ (\{ "bark" \}), (\{ "sniff" \}) \})
      </Core:Property>
      <Core:Property property="c_playdead:db:freemotes">
         (\{ "\$(npc) rolls on his back and stretches his paws into the air lifelessly." \})
      </Core:Property>
      <Core:Property property="c_rollover:db:freemotes">
         (\{ "\$(npc) \{dives onto\|dashes to\|tosses himself onto\|drops himself onto\|lowers himself towards\} the floor with \{amazing\|extraordinary\|swift\|agile\|well-practiced\|well-trained\} \{speed\|ease\|grace\|haste\|force\|power\|strength\}, rolls around and gets to his feet immediately." \})
      </Core:Property>
      <Core:Property property="c_sit:db:adverb">
         (\{ (\{ "immediately" \}), (\{ nil \}), (\{ "unsurely" \}), (\{ "obediently" \}), (\{ "eventually" \}), (\{ "disobediently" \}), (\{ "flatteringly" \}), (\{ nil \}), (\{ "grudgingly" \}), (\{ "momentarily" \}) \})
      </Core:Property>
      <Core:Property property="c_sit:db:apos">
         (\{ (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="c_sit:db:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_sit:db:obj">
         (\{ nil, nil, nil, nil, nil, nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="c_sit:db:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_sit:db:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_sit:db:prep">
         (\{ nil, nil, nil, nil, nil, nil, (\{ nil \}), (\{ "at" \}), nil, nil \})
      </Core:Property>
      <Core:Property property="c_sit:db:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_sit:db:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_sit:db:verb">
         (\{ (\{ "sit" \}), (\{ "sit" \}), (\{ "sit" \}), (\{ "sit" \}), (\{ "sit" \}), (\{ "bounce" \}), (\{ "lick" \}), (\{ "paw" \}), (\{ "sit" \}), (\{ "sit" \}) \})
      </Core:Property>
      <Core:Property property="c_speak:db:adverb">
         (\{ (\{ "surely" \}), (\{ "obediently" \}), (\{ "easily" \}), (\{ "once" \}), (\{ "twice" \}), (\{ "joyfully" \}), (\{ "excitedly" \}), (\{ "promptly" \}), (\{ "surely" \}) \})
      </Core:Property>
      <Core:Property property="c_speak:db:apos">
         (\{ (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}) \})
      </Core:Property>
      <Core:Property property="c_speak:db:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_speak:db:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="c_speak:db:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_speak:db:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_speak:db:prep">
         (\{ (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}) \})
      </Core:Property>
      <Core:Property property="c_speak:db:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_speak:db:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_speak:db:verb">
         (\{ (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "bark" \}) \})
      </Core:Property>
      <Core:Property property="c_stand:db:adverb">
         (\{ (\{ "obediently" \}), (\{ nil \}), (\{ "slowly" \}), (\{ "boredly" \}), (\{ "pensively" \}), (\{ "eventually" \}), (\{ "lazily" \}), (\{ "pleadingly" \}), (\{ "meditatively" \}), (\{ "grumpily" \}), (\{ "sighingly" \}), (\{ "hopefully" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_stand:db:apos">
         (\{ (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_stand:db:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="c_stand:db:obj">
         (\{ nil, nil, nil, (\{ (\{ "(subject)" \}) \}), nil, nil, (\{ (\{ "my:tail" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil, nil, nil, (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="c_stand:db:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_stand:db:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_stand:db:prep">
         (\{ nil, nil, nil, (\{ "at" \}), nil, nil, (\{ nil \}), (\{ "at" \}), nil, nil, nil, nil, (\{ "to" \}) \})
      </Core:Property>
      <Core:Property property="c_stand:db:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_stand:db:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="c_stand:db:verb">
         (\{ (\{ "stand" \}), (\{ "stand" \}), (\{ "stand" \}), (\{ "exhale" \}), (\{ "sniff" \}), (\{ "stand" \}), (\{ "wag" \}), (\{ "gaze" \}), (\{ "sniff" \}), (\{ "stand" \}), (\{ "stand" \}), (\{ "stand" \}), (\{ "scramble" \}) \})
      </Core:Property>
      <Core:Property property="confused:adverb">
         (\{ (\{ "cluelessly" \}), (\{ "demandingly" \}), (\{ "hopefully" \}), (\{ "happily" \}), (\{ "spiritedly" \}), (\{ "unsurely" \}), (\{ "confusedly" \}), (\{ "confusedly" \}), (\{ "lostly" \}), (\{ "dumbly" \}) \})
      </Core:Property>
      <Core:Property property="confused:apos">
         (\{ (\{ "pp" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pv" \}), (\{ "pv" \}), (\{ "pe" \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="confused:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="confused:obj">
         (\{ nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil, (\{ (\{ "(subject)" \}) \}), nil, nil, nil, (\{ (\{ "my:head" \}) \}) \})
      </Core:Property>
      <Core:Property property="confused:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="confused:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="confused:prep">
         (\{ nil, (\{ "at" \}), (\{ "at" \}), nil, nil, (\{ "at" \}), nil, nil, nil, (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="confused:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="confused:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="confused:verb">
         (\{ (\{ "blink" \}), (\{ "bark" \}), (\{ "whine" \}), (\{ "bark" \}), (\{ "dance" \}), (\{ "sniff" \}), (\{ "stand" \}), (\{ "appear" \}), (\{ "appear" \}), (\{ "tilt" \}) \})
      </Core:Property>
      <Core:Property property="db:adverb">
         (\{ (\{ "curiously" \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ "relaxedly" \}), (\{ "cozily" \}), (\{ "faintly" \}), (\{ nil \}), (\{ "randomly" \}), (\{ "energetically" \}) \})
      </Core:Property>
      <Core:Property property="db:apos">
         (\{ (\{ "pp" \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="db:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="db:obj">
         (\{ (\{ (\{ "(here)" \}) \}), (\{ (\{ "my:ear" \}) \}), nil, nil, nil, nil, nil, (\{ (\{ "my:ear" \}) \}), (\{ (\{ "my:nose" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="db:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, (\{ (\{ "my:paw" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="db:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="db:prep">
         (\{ (\{ nil \}), (\{ nil \}), nil, nil, nil, nil, nil, (\{ nil \}), (\{ nil \}), nil, nil \})
      </Core:Property>
      <Core:Property property="db:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, (\{ "under" \}), nil, nil \})
      </Core:Property>
      <Core:Property property="db:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="db:verb">
         (\{ (\{ "sniff" \}), (\{ "scratch" \}), (\{ "sit" \}), (\{ "stand" \}), (\{ "lie" \}), (\{ "sniff" \}), (\{ "yawn" \}), (\{ "flick" \}), (\{ "hide" \}), (\{ "trot" \}), (\{ "bounce" \}) \})
      </Core:Property>
      <Core:Property property="ecstatic:adverb">
         (\{ (\{ "enormously" \}), (\{ "fondly" \}), (\{ "approvingly" \}), (\{ "lovingly" \}), (\{ "fondly" \}), (\{ "happily" \}), (\{ nil \}), (\{ "dancingly" \}), (\{ "happily" \}), (\{ "melodiously" \}), (\{ "singingly" \}), (\{ "artistically" \}) \})
      </Core:Property>
      <Core:Property property="ecstatic:apos">
         (\{ (\{ "pp" \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pv" \}), (\{ "pv" \}), (\{ "pe" \}), (\{ nil \}), (\{ "pv" \}), (\{ "pv" \}), (\{ "pe" \}), (\{ "pv" \}), (\{ "pv" \}) \})
      </Core:Property>
      <Core:Property property="ecstatic:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="ecstatic:obj">
         (\{ nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject):arm" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:tail" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, (\{ (\{ "(subject)" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="ecstatic:obj2">
         (\{ nil, nil, nil, nil, nil, nil, (\{ (\{ "(subject)" \}) \}), nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="ecstatic:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="ecstatic:prep">
         (\{ nil, (\{ "around" \}), (\{ "at" \}), (\{ nil \}), (\{ nil \}), (\{ "at" \}), (\{ nil \}), (\{ "around" \}), nil, (\{ "at" \}), nil, nil \})
      </Core:Property>
      <Core:Property property="ecstatic:prep2">
         (\{ nil, nil, nil, nil, nil, nil, (\{ "at" \}), nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="ecstatic:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="ecstatic:verb">
         (\{ (\{ "howl" \}), (\{ "dance" \}), (\{ "exhale" \}), (\{ "bite" \}), (\{ "chew" \}), (\{ "bark" \}), (\{ "wag" \}), (\{ "bounce" \}), (\{ "howl" \}), (\{ "howl" \}), (\{ "howl" \}), (\{ "howl" \}) \})
      </Core:Property>
      <Core:Property property="family:c_drop">
         (\{ (\{ (\{ (\{ "drop", "release" \}) \}), (\{ "put", "it", "down" \}) \}) \})
      </Core:Property>
      <Core:Property property="family:c_east">
         (\{ "east" \})
      </Core:Property>
      <Core:Property property="family:c_fetch">
         (\{ "fetch" \})
      </Core:Property>
      <Core:Property property="family:c_find">
         (\{ "find" \})
      </Core:Property>
      <Core:Property property="family:c_follow">
         (\{ "follow" \})
      </Core:Property>
      <Core:Property property="family:c_here">
         (\{ (\{ "here", "cmere" \}) \})
      </Core:Property>
      <Core:Property property="family:c_lie">
         (\{ (\{ "lie", "lay", "get" \}), "down" \})
      </Core:Property>
      <Core:Property property="family:c_like_cats">
         (\{ (\{ "like", "love" \}), "cats" \})
      </Core:Property>
      <Core:Property property="family:c_north">
         (\{ "north" \})
      </Core:Property>
      <Core:Property property="family:c_northeast">
         (\{ "northeast" \})
      </Core:Property>
      <Core:Property property="family:c_northwest">
         (\{ "northwest" \})
      </Core:Property>
      <Core:Property property="family:c_playdead">
         (\{ "play", "dead" \})
      </Core:Property>
      <Core:Property property="family:c_rollover">
         (\{ "roll", "over" \})
      </Core:Property>
      <Core:Property property="family:c_sit">
         (\{ (\{ "sit", "down" \}) \})
      </Core:Property>
      <Core:Property property="family:c_south">
         (\{ "south" \})
      </Core:Property>
      <Core:Property property="family:c_southeast">
         (\{ "southeast" \})
      </Core:Property>
      <Core:Property property="family:c_southwest">
         (\{ "southwest" \})
      </Core:Property>
      <Core:Property property="family:c_speak">
         (\{ (\{ (\{ (\{ "speak", "bark" \}) \}), (\{ "tell", "me" \}) \}) \})
      </Core:Property>
      <Core:Property property="family:c_stand">
         (\{ (\{ (\{ "stand" \}), (\{ "get", "up" \}) \}) \})
      </Core:Property>
      <Core:Property property="family:c_stop">
         (\{ (\{ "stop", "stay" \}) \})
      </Core:Property>
      <Core:Property property="family:c_west">
         (\{ "west" \})
      </Core:Property>
      <Core:Property property="family_meta:c_drop">
         "drop/release\\r\\nput it down"
      </Core:Property>
      <Core:Property property="family_meta:c_east">
         "east"
      </Core:Property>
      <Core:Property property="family_meta:c_fetch">
         "fetch"
      </Core:Property>
      <Core:Property property="family_meta:c_find">
         "find"
      </Core:Property>
      <Core:Property property="family_meta:c_follow">
         "follow"
      </Core:Property>
      <Core:Property property="family_meta:c_here">
         "here/cmere\\r\\n"
      </Core:Property>
      <Core:Property property="family_meta:c_lie">
         "lie/lay/get down\\r\\n"
      </Core:Property>
      <Core:Property property="family_meta:c_like_cats">
         "like/love cats"
      </Core:Property>
      <Core:Property property="family_meta:c_north">
         "north"
      </Core:Property>
      <Core:Property property="family_meta:c_northeast">
         "northeast"
      </Core:Property>
      <Core:Property property="family_meta:c_northwest">
         "northwest"
      </Core:Property>
      <Core:Property property="family_meta:c_playdead">
         "play dead"
      </Core:Property>
      <Core:Property property="family_meta:c_rollover">
         "roll over\\r\\n"
      </Core:Property>
      <Core:Property property="family_meta:c_sit">
         "sit/down"
      </Core:Property>
      <Core:Property property="family_meta:c_south">
         "south"
      </Core:Property>
      <Core:Property property="family_meta:c_southeast">
         "southeast"
      </Core:Property>
      <Core:Property property="family_meta:c_southwest">
         "southwest"
      </Core:Property>
      <Core:Property property="family_meta:c_speak">
         "speak/bark\\r\\ntell me"
      </Core:Property>
      <Core:Property property="family_meta:c_stand">
         "stand\\r\\nget up\\r\\n"
      </Core:Property>
      <Core:Property property="family_meta:c_stop">
         "stop/stay"
      </Core:Property>
      <Core:Property property="family_meta:c_west">
         "west"
      </Core:Property>
      <Core:Property property="fetch-approach:adverb">
         (\{ (\{ "hopefully" \}), (\{ "happily" \}), (\{ "assuredly" \}), (\{ "readily" \}), (\{ "wisely" \}), (\{ "appropriately" \}), (\{ "hopefully" \}), (\{ nil \}), (\{ nil \}), (\{ "happily" \}), (\{ "hopefully" \}), (\{ "assuredly" \}), (\{ "readily" \}), (\{ "wisely" \}), (\{ "appropriately" \}), (\{ "happily" \}), (\{ "randomly" \}), (\{ "immediately" \}), (\{ "intelligently" \}) \})
      </Core:Property>
      <Core:Property property="fetch-approach:apos">
         (\{ (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ nil \}), (\{ nil \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}) \})
      </Core:Property>
      <Core:Property property="fetch-approach:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="fetch-approach:obj">
         (\{ (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}), (\{ (\{ "(item)" \}) \}) \})
      </Core:Property>
      <Core:Property property="fetch-approach:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-approach:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-approach:prep">
         (\{ (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}) \})
      </Core:Property>
      <Core:Property property="fetch-approach:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-approach:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-approach:verb">
         (\{ (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "hop" \}), (\{ "hop" \}), (\{ "hop" \}), (\{ "hop" \}), (\{ "hop" \}), (\{ "hop" \}), (\{ "hop" \}), (\{ "bounce" \}), (\{ "bounce" \}), (\{ "bounce" \}), (\{ "bounce" \}) \})
      </Core:Property>
      <Core:Property property="fetch-return:adverb">
         (\{ (\{ "back" \}), (\{ "back" \}), (\{ nil \}), (\{ "obediently" \}), (\{ "followingly" \}), (\{ "importantly" \}), (\{ "onwardly" \}) \})
      </Core:Property>
      <Core:Property property="fetch-return:apos">
         (\{ (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ "pv" \}), (\{ "pv" \}), (\{ "pe" \}), (\{ "pe" \}) \})
      </Core:Property>
      <Core:Property property="fetch-return:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="fetch-return:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="fetch-return:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-return:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-return:prep">
         (\{ (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}) \})
      </Core:Property>
      <Core:Property property="fetch-return:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-return:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="fetch-return:verb">
         (\{ (\{ "run" \}), (\{ "pad" \}), (\{ "return" \}), (\{ "pad" \}), (\{ "hop" \}), (\{ "saunter" \}), (\{ "strut" \}) \})
      </Core:Property>
      <Core:Property property="happy:adverb">
         (\{ (\{ "happily" \}), (\{ "wildly" \}), (\{ "playfully" \}), (\{ "happily" \}), (\{ "thrice" \}), (\{ "entertainedly" \}), (\{ "eagerly" \}), (\{ "spontaneously" \}), (\{ nil \}), (\{ "blissfully" \}), (\{ "wolfishly" \}), (\{ "randomly" \}), (\{ "playfully" \}), (\{ "once" \}), (\{ "twice" \}), (\{ nil \}), (\{ "happily" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="happy:apos">
         (\{ (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="happy:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="happy:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:tail" \}) \}), nil, nil, nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:ears" \}) \}), nil, (\{ (\{ "(subject):hand" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil, (\{ (\{ "(subject)" \}) \}), nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="happy:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, (\{ (\{ "my:tail" \}) \}), nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="happy:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="happy:prep">
         (\{ (\{ "at" \}), (\{ nil \}), nil, nil, nil, (\{ "at" \}), (\{ nil \}), nil, (\{ nil \}), (\{ nil \}), nil, nil, (\{ "around" \}), nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="happy:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, (\{ "with" \}), nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="happy:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="happy:verb">
         (\{ (\{ "bark" \}), (\{ "wag" \}), (\{ "dance" \}), (\{ "dance" \}), (\{ "bark" \}), (\{ "stare" \}), (\{ "perk" \}), (\{ "howl" \}), (\{ "lick" \}), (\{ "slap" \}), (\{ "grin" \}), (\{ "bounce" \}), (\{ "bounce" \}), (\{ "bark" \}), (\{ "bark" \}), (\{ "wiggle" \}), (\{ "yawn" \}), (\{ "trot" \}) \})
      </Core:Property>
      <Core:Property property="harrier:sniffstamp">
         1145036541
      </Core:Property>
      <Core:Property property="is-sleeping:adverb">
         (\{ (\{ "dreamily" \}), (\{ "disturbedly" \}), (\{ "annoyedly" \}), (\{ "uninterruptedly" \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="is-sleeping:apos">
         (\{ (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="is-sleeping:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="is-sleeping:obj">
         (\{ nil, nil, (\{ (\{ "my:ear" \}) \}), nil, nil, nil \})
      </Core:Property>
      <Core:Property property="is-sleeping:obj2">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="is-sleeping:obj3">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="is-sleeping:prep">
         (\{ nil, nil, (\{ nil \}), nil, nil, nil \})
      </Core:Property>
      <Core:Property property="is-sleeping:prep2">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="is-sleeping:prep3">
         (\{ nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="is-sleeping:verb">
         (\{ (\{ "whine" \}), (\{ "exhale" \}), (\{ "twitch" \}), (\{ "snore" \}), (\{ "snooze" \}), (\{ "sleep" \}) \})
      </Core:Property>
      <Core:Property property="lying_already:adverb">
         (\{ (\{ "lazily" \}), (\{ nil \}), (\{ nil \}), (\{ "unsurely" \}), (\{ "hesitantly" \}), (\{ nil \}), (\{ nil \}), (\{ "further" \}), (\{ nil \}), (\{ "unsurely" \}), (\{ "excitedly" \}), (\{ "cluelessly" \}), (\{ "compromisingly" \}), (\{ "curiously" \}), (\{ "unsurely" \}), (\{ "stupidly" \}) \})
      </Core:Property>
      <Core:Property property="lying_already:apos">
         (\{ (\{ "pe" \}), (\{ nil \}), (\{ nil \}), (\{ "pe" \}), (\{ "pe" \}), (\{ nil \}), (\{ nil \}), (\{ "pp" \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="lying_already:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="lying_already:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), nil, (\{ (\{ "my:paws" \}) \}), (\{ (\{ "my:head" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:paw" \}) \}), (\{ (\{ "my:butt" \}) \}), (\{ (\{ "my:default" \}) \}), (\{ (\{ "my:default" \}) \}), nil, nil, nil, nil, (\{ (\{ "my:tail" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="lying_already:obj2">
         (\{ nil, nil, nil, (\{ (\{ "my:paws" \}) \}), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="lying_already:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="lying_already:prep">
         (\{ (\{ "at" \}), nil, (\{ nil \}), (\{ nil \}), (\{ "at" \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), nil, nil, nil, nil, (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="lying_already:prep2">
         (\{ nil, nil, nil, (\{ "to" \}), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="lying_already:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="lying_already:verb">
         (\{ (\{ "blink" \}), (\{ "yawn" \}), (\{ "stretch" \}), (\{ "lower" \}), (\{ "gaze" \}), (\{ "lick" \}), (\{ "wiggle" \}), (\{ "lower" \}), (\{ "flatten" \}), (\{ "sit" \}), (\{ "stand" \}), (\{ "sit" \}), (\{ "stand" \}), (\{ "wag" \}), (\{ "regard" \}), (\{ "regard" \}) \})
      </Core:Property>
      <Core:Property property="merry:lib:c_drop">
         X[M] /*
 * D=Elmer command: drop. "Forces the NPC to drop an item at random."
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 09:48, 2006
 * State:  EXPERIMENTAL
 */
object *inv, ob, env;

env = \$npc."base:environment";
inv = \$npc."base:inventory";

/* If we carry nothing, we're confused about such a command. */
if (!sizeof(inv)) \{
    \$situation = "confused";
    return TRUE;
\}

ob        = inv[random(sizeof(inv))];
ob.marked = TRUE;
ob."base:environment" = env;
EmitIn(env, Describe(\$npc) + " drops " + Describe(ob) + ".");
/*
 * ChangeLog [
 *    Change(Apr 14 09:48, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_east">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "east");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_fetch">
         X[M] /*
 * D=Elmer command: fetch.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 10:53, 2006
 * State:  EXPERIMENTAL
 */
string *adjs, sname, evoke, z;
object env;
int i, sz;
mapping e;
NRef *matches;

\$situation = "confused";
env        = \$npc."base:environment";
evoke      = strip(lower_case(\$(raw-evoke)));
sz         = strlen(evoke);

if (sz \< 7) \{
    return TRUE;
\}
if (sscanf(evoke, "%sfetch %s", \$devnull, evoke) != 2) \{
    return TRUE;
\}

sz = strlen(evoke);
if (sz \> 4 \&\& evoke[0..3] == "the " ) \{
    evoke = evoke[4..];
    sz   -= 4;
\}
e = (['!':1,'?':1,'.':1,';':1,':':1,'\\'':1]);
for (i = 0; i \< sz \&\& !e[evoke[i]]; i++);

evoke = evoke[..i-1];

adjs  = explode(evoke, " ");
sz    = sizeof(adjs);
sname = adjs[sz-1];
adjs  = adjs[..sz-2];

/*
 * Evoke is now cut down into adjectives
 * [everything before the last word] and an
 * sname [last word].
 */

/*
 * Patch; using Match().
 */
matches = Match(env, sname, \$npc, adjs...);
sz      = sizeof(matches);

if(sz) \{
    /*
     * Found matches.
     */
    for (i = 0; i \< sz; i++) \{
        \$item = NRefOb(matches[i]);
        if (!\$item."base:volition") \{
            Call(\$npc, "behave", \$db: \$npc."nip:trait:communicate:db", \$mood: "fetch-approach");
            /* Ensure that \$situation does not trigger "confused" here, since delay returns to previous fun. */
            \$situation = "c_fetch";
            \$delay(random(3) + 1, FALSE, "b65a");
            Act(\$npc, "take", \$what: (\{ \$item \}) );
            \$delay(1, FALSE, "abcd");
            if (\$item."base:environment" != \$npc) \{
                Call(\$npc, "behave", \$db: \$npc."nip:trait:communicate:db", \$mood: "confused");
                return FALSE;
            \}
            \$delay(random(3) + 1, FALSE, "4aaa");
            Call(\$npc, "behave", \$db: \$npc."nip:trait:communicate:db", \$mood: "fetch-return", \$subject: \$actor);
            \$delay(random(3) + 1, FALSE, "e716");
            \$item."base:environment" = \$npc."base:environment";
            EmitIn(\$npc."base:environment", Describe(\$npc) + " drops " + Describe(\$item) + ".");
            return FALSE;
        \}
    \}
\}
/*
 * ChangeLog [
 *    Change(Apr 14 10:53, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_find">
         X[M] /*
 * D=Elmer command: find.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 12:34, 2006
 * State:  EXPERIMENTAL
 */
string evoke, z;
mapping e;
int i, sz;

\$npc."harrier:searchabortedat" = nil;
\$npc."harrier:searchabortedi" = nil;

\$situation = "confused";

if (\$npc."harrier:sniffstamp") \{
    return FALSE;
\}

\$env  = \$npc."base:environment";
evoke = strip(lower_case(\$(raw-evoke)));
sz    = strlen(evoke);

if (sz \< 6) \{
    return TRUE;
\}
if (sscanf(evoke, "%sfind %s", \$devnull, evoke) != 2) \{
    return TRUE;
\}
sz = strlen(evoke);
e  = (['!':1,'?':1,'.':1,';':1,':':1,'\\'':1]);
for (i = 0; i \< sz \&\& !e[evoke[i]]; i++);

evoke = evoke[..i-1];

/* Evoke is now cut down to the name of the person to bring here. Let's see if that person doth indeed exist. */
\$ob = common::lookup(\$name: evoke);

if (!\$ob) \{
    return FALSE;
\}

if (\$actor."harrier:disabled:tracking" \&\& \$actor."harrier:disabled:tracking"[\$ob]) \{
    /*
     * For abusive persons, the tracking may be disabled by setting
     * "harrier:disabled:tracking" in their body to a mapping in which
     * a list of bodies may be set which may not be tracked by this person.
     */
    return FALSE;
\}

\$room  = \$ob."base:environment";
\$evoke = nil;
\$prep  = nil;

if (!\$room) \{
    /* The target is in the NIL. We just exit confused */
    return FALSE;
\}

::sniff(\$weare: \$env, \$target: \$room); /* , \$emotedb: \$npc."nip:trait:communicate:db", \$emotemood: "sniffing"); */

\$x = 0;
\$situation = "c_find";
while (!\$npc.sniffdone \&\& \$x \< 1000) \{
    \$x++;
    \$delay(3, FALSE, "167f");
\}

if (!\$npc."harrier:sniff_result") \{
    \$npc."harrier:sniffstamp" = nil;
    Call(\$npc, "behave", \$db: \$npc."nip:trait:communicate:db", \$mood: "confused");
    return FALSE;
\}

if (\$npc.sniffdone) \{
    ::travel();
    \$x = 0;
    while (!\$npc."harrier:traveldone" \&\& \$x \< 1000) \{
        \$x++;
        \$delay(3, FALSE, "e013");
    \}

    if (\$npc."harrier:travelhalt") \{
        \$sniffed = \$npc."harrier:sniff_result";
        \$i       = \$npc."harrier:searchabortedi";
        Call(\$npc, "behave", \$db: \$npc."nip:trait:communicate:db", \$mood: "travel-halt", \$door: \$sniffed[\$i]);
        return TRUE;
    \}
\}
\$npc."harrier:sniffstamp" = nil;

/* Search successfully completed */
Call(\$npc, "behave", \$db: \$npc."nip:trait:communicate:db", \$mood: "travel-done", \$subject: NRefOb(\$ob));

return TRUE;
/*
 * ChangeLog [
 *    Change(Apr 14 12:34, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_follow">
         X[M] /*
 * D=Elmer command: follow. Begin to follow the actor.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 13:58, 2006
 * State:  EXPERIMENTAL
 */
if (\$npc.follow == \$actor) \{
    \$situation = "confused";
    return FALSE;
\}

\$npc.follow = \$actor;
Call(\$npc, "behave", \$db: this."nip:trait:communicate:db", \$mood: "c_here");

EmitTo(\$actor, "\\n[" + capitalize(Describe(\$npc)) + " will follow you now.]");
/*
 * ChangeLog [
 *    Change(Apr 14 13:58, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_lie">
         X[M] /*
 * D=Elmer command: lie. If Elmer is lying already, change the mood from "c_lie" to "lying_already".
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 10:08, 2006
 * State:  EXPERIMENTAL
 */
if (\$npc."base:stance" == STANCE_LIE) \{
    \$situation = "lying_already";
\}
/*
 * ChangeLog [
 *    Change(Apr 14 10:08, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_north">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "north");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_northeast">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "northeast");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_northwest">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "northwest");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_sit">
         X[M] /*
 * D=Elmer command: sit. If Elmer is sitting already, change the mood from "c_sit" to "sitting_already".
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 10:08, 2006
 * State:  EXPERIMENTAL
 */
if (\$npc."base:stance" == STANCE_SIT) \{
    \$situation = "sitting_already";
\}
/*
 * ChangeLog [
 *    Change(Apr 14 10:08, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_south">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "south");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_southeast">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "southeast");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_southwest">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "southwest");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_stand">
         X[M] /*
 * D=Elmer command: stand. If Elmer is standing already, change the mood from "c_stand" to "standing_already".
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 10:08, 2006
 * State:  EXPERIMENTAL
 */
if (\$npc."base:stance" == STANCE_STAND) \{
    \$situation = "standing_already";
\}
/*
 * ChangeLog [
 *    Change(Apr 14 10:08, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_stop">
         X[M] /*
 * D=Elmer command: stop.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:05, 2006
 * State:  EXPERIMENTAL
 */
if (\$npc.follow == \$actor) \{
    \$npc.follow = nil;
    EmitTo(\$actor, "[" + capitalize(Describe(\$npc)) + " stops following you.]");
\} else \$situation = "confused";
/*
 * ChangeLog [
 *    Change(Apr 14 14:05, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:c_west">
         X[M] /*
 * D=Directional command.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:14, 2006
 * State:  EXPERIMENTAL
 */
::directional(\$direction: "west");
/*
 * ChangeLog [
 *    Change(Apr 14 14:14, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:directional">
         X[M] /*
 * D=Move in a specific \$direction.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 14:07, 2006
 * State:  EXPERIMENTAL
 */
string texit, *dir, *arr;
NRef dest, found;
object env;
int i, ix, j, jx;

/* let's try it the easy way... */
env   = \$npc."base:environment";
texit = "exit " + \$direction;
dest  = Get(env, "details:" + texit + ":exit:dest");
if (dest \&\& NRefOb(dest) \&\& !dest."detail:hidden") \{
    found = dest;
\} else \{
    /* Arf. No good. */
    arr = env."base:details";
    ix  = sizeof(arr);
    for (i = 0; i \< ix; i++) \{
        dest = Get(env, "details:" + arr[i] + ":exit:dest");
        if (dest) \{
            dir = Get(env, "details:" + arr[i] + ":exit:directions");
            jx  = sizeof(dir);
            for (j = 0; j \< jx; j++) \{
                if (dir[j] == \$direction) \{
                    texit = arr[i];
                    found = dest;
                    j = jx;
                    i = ix;
                \}
            \}
        \}
    \}
\}

if (found) \{
    Act(\$npc, "enter", \$what: NewNRef(\$npc."base:environment", texit));
\} else \{
    \$situation = "confused";
\}
/*
 * ChangeLog [
 *    Change(Apr 14 14:07, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:sniff">
         X[M] /*
 * D=Sniff out a target.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 12:42, 2006
 * State:  EXPERIMENTAL
 *
 *  (#1) \$weare: env, \$target: room       ** find the room
 *  (#2) \$weare: env, \$targets: rooms     ** find any of these rooms
 *  (#3) \$weare: env, \$item: name, \$equals: property
 *                                        ** find an item with a spec property
 *
 * \$weare:     an object reference to our current location
 * \$target:    the single target to find
 * \$targets:   the array of targets in which the path to the closest one will be found
 * \$item:      name of a property in an object to find
 * \$equals:    required value of \$item
 * (if \$item is set, and \$equals isn't, it means the property just needs to exist for the sniffer to accept it as "found")
 *
 * \$emotedb:   the behavior db from which emotes should be derived.
 * \$emotemood: the mood in the db which should be triggered.
 */
object room, env, *inv;
string *arr;
string z;
int i, ix, blocked, steps;

if (\$npc."harrier:sniffstamp") return FALSE; /* already sniffing or using sniff results elsewhere */
\$npc."harrier:sniffstamp" = time();

\$queue = (\{ \$weare \});
\$path  = ([ \$weare : (\{ \}) ]);
\$found = FALSE;

if (\$targets) \{
    \$targetx = sizeof(\$targets);
\}

\$npc.sniffdone = nil;
\$npc."harrier:sniff_result" = nil;

while (sizeof(\$queue)) \{
    env    = \$queue[0];
    \$queue = \$queue[1..];

    if (\$target \&\& env == \$target) \{
        /* single room search */
        \$found = TRUE;
    \}
    if (\$targets) \{
        /* array of room search */
        for (i = 0; i \< \$targetx \&\& !\$found; i++) \{
            \$found \|= env == \$targets[i];
        \}
    \}
    if (\$item) \{
        /* item (with/without property) search */
        inv = env."base:inventory";
        ix  = sizeof(\$inv);
        for (i = 0; i \< ix \&\& !\$found; i++) \{
            \$it = Get(inv[i], \$item);
            \$found \|= (!\$equals \&\& \$it) \|\| (\$equals \&\& \$it == \$equals);
        \}
    \}

    if (\$found) \{
        /* found the room */
        \$npc."harrier:sniff_result" = \$path[env];
        \$npc.sniffdone = TRUE;

        \$target = \$targets = \$item = \$equals = nil;
        return TRUE;
    \}
    EmitTo(\$actor, dump_value(env));
    arr = env."base:details";
    ix  = sizeof(arr);
    for (i = 0; i \< ix; i++) \{
        NRef dest;
        dest    = Get(env, "details:" + arr[i] + ":exit:dest");
        blocked = !!Get(env, "details:" + arr[i] + ":description:npcblock");
        if (dest \&\& !blocked) \{
            /* this is an exit */
            room = NRefOb(dest);
            if (room \&\& !\$path[room])\{
                \$queue     += (\{ room \});
                \$path[room] = \$path[env] + (\{ NewNRef(env, arr[i]) \});
            \}
        \}
    \}
    \$delay(1, FALSE, "16c4");
    if (\$emotedb \&\& \$emotemood \&\& !random(20)) Call(\$npc, "behave", \$db: \$emotedb, \$mood: \$emotemood);
\}

\$npc.sniffdone = 1;
\$npc."harrier:sniffstamp" = nil;

return TRUE;
/*
 * ChangeLog [
 *    Change(Apr 14 12:42, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:lib:travel">
         X[M] /*
 * D=Travel to a specific destination defined in \$npc."harrier:sniff_result".
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Apr 14 13:03, 2006
 * State:  EXPERIMENTAL
 */
\$npc."harrier:traveldone" = \$npc."harrier:travelhalt" = nil;

\$sniffed = \$npc."harrier:sniff_result";

\$npc."harrier:ignorant" = TRUE; /* or we'll have an anger fit when we arrive */

if (\$sniffed) \{
    \$snifx = sizeof(\$sniffed);
    for (\$i = 0; \$i \< \$snifx; \$i++) \{
        \$vb = random(60);
        \$r  = Flt(\$vb / 10);
        \$r += 5.0;
        \$delay(\$r, FALSE, "6a65");
        \$env = \$npc."base:environment";
        if (\$env == \$oldenv) \{
            /* Hunt reached an unexpected halt. Closed/locked door.. Etc. */
            \$npc."harrier:traveldone" = TRUE;
            \$npc."harrier:searchabortedat" = \$env;
            \$npc."harrier:searchabortedi" = \$i;
            \$npc."harrier:ignorant" = nil;
            return FALSE;
        \} else \{
            \$oldenv = \$env;
            Act(\$npc, "enter", \$what: \$sniffed[\$i]);
        \}
    \}
\}
\$npc."harrier:ignorant" = nil;

\$npc."harrier:traveldone" = TRUE;
/*
 * ChangeLog [
 *    Change(Apr 14 13:03, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="nip:families">
         (\{ "c_like_cats", "c_drop", "c_here", "c_sit", "c_stand", "c_lie", "c_fetch", "c_speak", "c_rollover", "c_playdead", "c_find", "c_follow", "c_stop", "c_northeast", "c_northwest", "c_southeast", "c_southwest", "c_north", "c_south", "c_east", "c_west" \})
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_drop">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_east">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_fetch">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_find">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_follow">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_lie">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_north">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_northeast">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_northwest">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_sit">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_south">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_southeast">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_southwest">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_stand">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_stop">
         1
      </Core:Property>
      <Core:Property property="pre-parse-execution:c_west">
         1
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052088, "-", "SYNC", 1145024774, "zwoc", "X", 1145024875, "zwoc", "P", 1145024892, "zwoc", "P", 1145025144, "zwoc", "P", 1145025868, "zwoc", "P", 1145025882, "zwoc", "P", 1145026464, "zwoc", "P", 1145026537, "zwoc", "P", 1145026549, "zwoc", "P", 1145026559, "zwoc", "P", 1145026974, "zwoc", "P", 1145027223, "zwoc", "P", 1145028734, "zwoc", "P", 1145029192, "zwoc", "P", 1145029221, "zwoc", "P", 1145032334, "zwoc", "P", 1145032645, "zwoc", "P", 1145033717, "zwoc", "P", 1145034048, "zwoc", "P", 1145034187, "zwoc", "P", 1145035214, "zwoc", "P", 1145036492, "zwoc", "P", 1145036794, "zwoc", "P", 1145036909, "zwoc", "P", 1145036944, "zwoc", "P", 1145037035, "zwoc", "P", 1145037243, "zwoc", "P", 1145037756, "zwoc", "P", 1145037819, "zwoc", "P", 1145037963, "zwoc", "P", 1145038444, "zwoc", "P", 1145038520, "zwoc", "P", 1145038546, "zwoc", "P", 1145038559, "zwoc", "P", 1145038571, "zwoc", "P", 1145038582, "zwoc", "P", 1145038595, "zwoc", "P", 1145038612, "zwoc", "P", 1145038629, "zwoc", "P", 1145039008, "zwoc", "P", 1145039061, "zwoc", "P", 1145039090, "zwoc", "P", 1145039107, "zwoc", "P", 1145039172, "zwoc", "P", 1145039303, "zwoc", "P", 1145039320, "zwoc", "P", 1206647583, "zwoc", "R" \})
      </Core:Property>
      <Core:Property property="sad:adverb">
         (\{ (\{ nil \}), (\{ "lowly" \}), (\{ "sharply" \}), (\{ "protestingly" \}), (\{ "throatily" \}), (\{ nil \}), (\{ "evasively" \}), (\{ "abruptly" \}) \})
      </Core:Property>
      <Core:Property property="sad:apos">
         (\{ (\{ nil \}), (\{ "pp" \}), (\{ "pe" \}), (\{ "pv" \}), (\{ "pe" \}), (\{ nil \}), (\{ "pp" \}), (\{ "pv" \}) \})
      </Core:Property>
      <Core:Property property="sad:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="sad:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), nil, (\{ (\{ "(subject)" \}) \}), nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:teeth" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="sad:obj2">
         (\{ nil, nil, nil, nil, nil, (\{ (\{ "(subject)" \}) \}), nil, nil \})
      </Core:Property>
      <Core:Property property="sad:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="sad:prep">
         (\{ (\{ nil \}), nil, (\{ "at" \}), nil, (\{ "at" \}), (\{ nil \}), nil, nil \})
      </Core:Property>
      <Core:Property property="sad:prep2">
         (\{ nil, nil, nil, nil, nil, (\{ "to" \}), nil, nil \})
      </Core:Property>
      <Core:Property property="sad:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="sad:verb">
         (\{ (\{ "avoid" \}), (\{ "growl" \}), (\{ "bark" \}), (\{ "whine" \}), (\{ "growl" \}), (\{ "advertise" \}), (\{ "trot" \}), (\{ "scramble" \}) \})
      </Core:Property>
      <Core:Property property="sitting_already:adverb">
         (\{ (\{ "unblinkingly" \}), (\{ "briefly" \}), (\{ nil \}), (\{ nil \}), (\{ "cluelessly" \}), (\{ "idiotically" \}), (\{ "instead" \}), (\{ "hopefully" \}), (\{ "compromisingly" \}), (\{ "compromisingly" \}), (\{ "unsurely" \}), (\{ "inquisitively" \}), (\{ "conversationally" \}) \})
      </Core:Property>
      <Core:Property property="sitting_already:apos">
         (\{ (\{ "pe" \}), (\{ "pp" \}), (\{ nil \}), (\{ nil \}), (\{ "pe" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pe" \}) \})
      </Core:Property>
      <Core:Property property="sitting_already:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="sitting_already:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:butt" \}) \}), (\{ (\{ "my:tail" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil, nil, nil, (\{ (\{ "my:head" \}) \}), (\{ (\{ "my:ear" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="sitting_already:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="sitting_already:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="sitting_already:prep">
         (\{ (\{ "at" \}), (\{ nil \}), (\{ nil \}), (\{ "at" \}), (\{ "at" \}), (\{ nil \}), nil, nil, nil, nil, (\{ nil \}), (\{ nil \}), (\{ "at" \}) \})
      </Core:Property>
      <Core:Property property="sitting_already:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="sitting_already:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="sitting_already:verb">
         (\{ (\{ "stare" \}), (\{ "wiggle" \}), (\{ "wag" \}), (\{ "blink" \}), (\{ "bark" \}), (\{ "regard" \}), (\{ "stand" \}), (\{ "lie" \}), (\{ "lie" \}), (\{ "stand" \}), (\{ "lower" \}), (\{ "perk" \}), (\{ "whine" \}) \})
      </Core:Property>
      <Core:Property property="standing_already:adverb">
         (\{ (\{ nil \}), (\{ nil \}), (\{ "unsurely" \}), (\{ nil \}), (\{ nil \}), (\{ "crookedly" \}), (\{ "compromisingly" \}), (\{ "lazily" \}), (\{ "already" \}), (\{ "obtusely" \}), (\{ "confusedly" \}) \})
      </Core:Property>
      <Core:Property property="standing_already:apos">
         (\{ (\{ nil \}), (\{ nil \}), (\{ "pe" \}), (\{ nil \}), (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pe" \}) \})
      </Core:Property>
      <Core:Property property="standing_already:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="standing_already:obj">
         (\{ (\{ (\{ "my:tail" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "my:ear" \}) \}), nil, nil, nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="standing_already:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="standing_already:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="standing_already:prep">
         (\{ (\{ nil \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ nil \}), nil, nil, nil, (\{ nil \}), (\{ "around" \}) \})
      </Core:Property>
      <Core:Property property="standing_already:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="standing_already:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="standing_already:verb">
         (\{ (\{ "wag" \}), (\{ "stare" \}), (\{ "bark" \}), (\{ "exhale" \}), (\{ "blink" \}), (\{ "perk" \}), (\{ "sit" \}), (\{ "lie" \}), (\{ "stand" \}), (\{ "note" \}), (\{ "dance" \}) \})
      </Core:Property>
      <Core:Property property="surprised:adverb">
         (\{ (\{ "surprisedly" \}), (\{ nil \}), (\{ "unsurely" \}), (\{ nil \}), (\{ "uncomfortably" \}), (\{ "distantly" \}), (\{ "uncomfortably" \}), (\{ "unsurely" \}), (\{ "surprisedly" \}), (\{ "disagreeably" \}), (\{ "protestingly" \}) \})
      </Core:Property>
      <Core:Property property="surprised:apos">
         (\{ (\{ "pp" \}), (\{ nil \}), (\{ "pe" \}), (\{ nil \}), (\{ "pv" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pe" \}), (\{ "pv" \}) \})
      </Core:Property>
      <Core:Property property="surprised:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="surprised:obj">
         (\{ nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), nil, nil, nil, (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject):face" \}) \}), (\{ (\{ "(subject)" \}) \}), nil \})
      </Core:Property>
      <Core:Property property="surprised:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="surprised:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="surprised:prep">
         (\{ nil, (\{ "from" \}), (\{ "at" \}), (\{ "from" \}), nil, nil, nil, (\{ "around" \}), (\{ "at" \}), (\{ "at" \}), nil \})
      </Core:Property>
      <Core:Property property="surprised:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="surprised:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="surprised:verb">
         (\{ (\{ "yelp" \}), (\{ "cower" \}), (\{ "whine" \}), (\{ "flee" \}), (\{ "blink" \}), (\{ "stare" \}), (\{ "exhale" \}), (\{ "dance" \}), (\{ "gaze" \}), (\{ "bark" \}), (\{ "dance" \}) \})
      </Core:Property>
      <Core:Property property="travel-done:adverb">
         (\{ (\{ "directly" \}), (\{ "immediately" \}), (\{ "immediately" \}), (\{ "directly" \}), (\{ "directly" \}), (\{ "immediately" \}), (\{ "doubtlessly" \}), (\{ "doubtlessly" \}), (\{ "doubtlessly" \}), (\{ "doubtlessly" \}) \})
      </Core:Property>
      <Core:Property property="travel-done:apos">
         (\{ (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="travel-done:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="travel-done:obj">
         (\{ (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}), (\{ (\{ "(subject)" \}) \}) \})
      </Core:Property>
      <Core:Property property="travel-done:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-done:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-done:prep">
         (\{ (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}), (\{ "to" \}) \})
      </Core:Property>
      <Core:Property property="travel-done:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-done:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-done:verb">
         (\{ (\{ "sniff" \}), (\{ "sniff" \}), (\{ "lope" \}), (\{ "lope" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "skip" \}), (\{ "hop" \}), (\{ "dance" \}), (\{ "sniff" \}) \})
      </Core:Property>
      <Core:Property property="travel-halt:adverb">
         (\{ (\{ nil \}), (\{ "worriedly" \}), (\{ "morosely" \}), (\{ "hopefully" \}), (\{ "determinedly" \}), (\{ "eagerly" \}), (\{ "futilely" \}), (\{ "needfully" \}), (\{ "hungrily" \}) \})
      </Core:Property>
      <Core:Property property="travel-halt:apos">
         (\{ (\{ nil \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}), (\{ "pp" \}) \})
      </Core:Property>
      <Core:Property property="travel-halt:evoke">
         (\{ (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}), (\{ nil \}) \})
      </Core:Property>
      <Core:Property property="travel-halt:obj">
         (\{ (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}), (\{ (\{ "(door)" \}) \}) \})
      </Core:Property>
      <Core:Property property="travel-halt:obj2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-halt:obj3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-halt:prep">
         (\{ (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}), (\{ "at" \}) \})
      </Core:Property>
      <Core:Property property="travel-halt:prep2">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-halt:prep3">
         (\{ nil, nil, nil, nil, nil, nil, nil, nil, nil \})
      </Core:Property>
      <Core:Property property="travel-halt:verb">
         (\{ (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}), (\{ "scratch" \}) \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
