<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="true" mass="1" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="10" maxweight="9000" verb2="hold" verb3="curtly holds"/>
    <Base:Misc gender="male" volition="true" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="butler"/>
            <Base:SName sname="npc"/>
            <Base:SName sname="servant"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="butlers"/>
            <Base:PName pname="npcs"/>
            <Base:PName pname="servants"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
          <Base:Adjective adjective="trustworthy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">butler</Base:Description>
          <Base:Description type="examine">
             A butler of trustworthy appearance, with graying, thin hair and a spotless white towel hung over his arm.
          </Base:Description>
          <Base:Description type="look">
             A butler of trustworthy appearance, with graying, thin hair and a spotless white towel hung over his arm.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arm"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">arm</Base:Description>
          <Base:Description type="look">
             A butler's arm, from which a spotless towel hangs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">arms</Base:Description>
          <Base:Description type="look">
             A butler's arms.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eye" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">eye</Base:Description>
          <Base:Description type="look">
             A butler's eye.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">eyes</Base:Description>
          <Base:Description type="look">
             A butler's eyes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="finger" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="finger"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">finger</Base:Description>
          <Base:Description type="look">
             A butler's finger. The fingernail at the end of it, you observe, is quite clean and cut short.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingernail" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingernail"/>
            <Base:SName sname="nail"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
          <Base:Adjective adjective="clean"/>
          <Base:Adjective adjective="finger"/>
          <Base:Adjective adjective="short"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fingernail
          </Base:Description>
          <Base:Description type="look">
             A butler's fingernail. It is quite clean and cut short.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingernails" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingernails"/>
            <Base:SName sname="nails"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
          <Base:Adjective adjective="clean"/>
          <Base:Adjective adjective="finger"/>
          <Base:Adjective adjective="short"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fingernails
          </Base:Description>
          <Base:Description type="look">
             A butler's fingernails. They are quite clean and cut short.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingers" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingers"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">fingers</Base:Description>
          <Base:Description type="look">
             A butler's fingers. His fingernails, you observe, are quite clean and cut short.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">head</Base:Description>
          <Base:Description type="look">
             A butler's head.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lip" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">lip</Base:Description>
          <Base:Description type="look">
             A butler's lip.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">lips</Base:Description>
          <Base:Description type="look">
             A butler's lips.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="teeth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="teeth"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             pearly-white teeth
          </Base:Description>
          <Base:Description type="look">
             A butler's pearly-white teeth.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="towel" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="towel"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="towels"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="butler"/>
          <Base:Adjective adjective="clean"/>
          <Base:Adjective adjective="spotless"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             spotless, white towel
          </Base:Description>
          <Base:Description type="look">
             A spotless, white towel lies over the butler's left arm.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="details:arm:prepgroup">
         "distant"
      </Core:Property>
      <Core:Property property="details:arms:prepgroup">
         "distant"
      </Core:Property>
      <Core:Property property="details:default:prepgroup">
         "distant"
      </Core:Property>
      <Core:Property property="details:towel:prepgroup">
         "distant"
      </Core:Property>
      <Core:Property property="error">
         "Failed to locate library present."
      </Core:Property>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "emoting":\<Lib:NIP:lib:emoting\>, "freemoting":\<Lib:NIP:lib:freemoting\>, "internal":\<Lib:NIP:base:hooks:internal\>, "nip":\<Lib:NIP:hooks:nip\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Jonkichi:NIP:lib:emoting-def\>:(\{ "lib:handler:emoting:preparse" \}), \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:asking\>:(\{ "react:npcask-dob" \}), \<Lib:NIP:lib:communicate\>:(\{ "lib:core:reply", "lib:family_resolve", "react-post:evoke-iob%nip:communicate", "react-post:evoke-dob%nip:communicate" \}), \<Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave" \}), \<Lib:NIP:lib:freemoting\>:(\{ "lib:handler_freemote" \}), \<Lib:NIP:lib:presents\>:(\{ "lib:handler:ask-for", "lib:handler:ask", "lib:core:add_present", "lib:core:sub_present" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<Lib:NIP:lib:rumours\>:(\{ "lib:handler:ask-about" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:emoting\>, \<Lib:NIP:lib:freemoting\>, \<Lib:NIP:lib:asking\>, \<Lib:NIP:lib:presents\>, \<Lib:NIP:lib:communicate\>, \<Jonkichi:NIP:lib:emoting-def\>, \<Lib:NIP:lib:rumours\>, \<Lib:NIP:lib:interaction\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:behavior:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:communicate:db">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:emoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:freemoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:hints:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:interaction:chance">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:interaction:db">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:interaction:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:present:objects">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:rumour:database">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "nip:INTERNAL", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "freemoting:DECIDE", "nip:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         34
      </Core:Property>
      <Core:Property property="export:nip:behavior:db">
         \<Mansion:nip:behavior:butler\>
      </Core:Property>
      <Core:Property property="export:nip:ext:edb">
         \<Mansion:lib:jonkichi:interaction:butler\>
      </Core:Property>
      <Core:Property property="export:nip:ext:emood">
         "cat"
      </Core:Property>
      <Core:Property property="export:nip:trait:communicate:db">
         \<Mansion:nip:comm:butler\>
      </Core:Property>
      <Core:Property property="export:nip:trait:emoting:frequency">
         150
      </Core:Property>
      <Core:Property property="export:nip:trait:freemoting:frequency">
         150
      </Core:Property>
      <Core:Property property="export:nip:trait:interaction:chance">
         50
      </Core:Property>
      <Core:Property property="export:nip:trait:interaction:db">
         \<Mansion:lib:jonkichi:interaction:butler\>
      </Core:Property>
      <Core:Property property="export:nip:trait:interaction:ttl">
         300
      </Core:Property>
      <Core:Property property="export:nip:trait:present:objects">
         ([  ])
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:nip:trait:rumour:database">
         \<Mansion:nip:rumours:butler\>
      </Core:Property>
      <Core:Property property="kas">1138927434</Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act-post:command">
         \<Lib:NIP:EXT:record\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:behave">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:add_present">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:reply">
         \<Lib:NIP:lib:communicate\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sub_present">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:emoting:decide">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:family_resolve">
         \<Lib:NIP:lib:communicate\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:freemoting:decide">
         \<Lib:NIP:lib:freemoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask-about">
         \<Lib:NIP:lib:rumours\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask-for">
         \<Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:emoting:parse">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:emoting:preparse">
         \<Jonkichi:NIP:lib:emoting-def\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler_freemote">
         \<Lib:NIP:lib:freemoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:lookup">
         \<Jonkichi:NIP:lib:emoting-def\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:nip:decide">
         \<Lib:NIP:hooks:nip\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:nip:internal">
         \<Lib:NIP:hooks:nip\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:record_command_parse">
         \<Lib:NIP:EXT:record\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:evoke-dob%nip:communicate">
         \<Lib:NIP:lib:communicate\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:evoke-iob%nip:communicate">
         \<Lib:NIP:lib:communicate\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:npcask-dob">
         \<Lib:NIP:lib:asking\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:login%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:lib:introduce">
         X[M] /*
 * D=Introduce people.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Feb 20 10:17, 2006
 * State:  EXPERIMENTAL
 *
 * To prevent the butler from being senile and repetitive, the introductions are only made when certain conditions are met.
 * 1. The person being introduced must not have been introduced in the last 12 hours.
 * 2. The person being introduced must not have been introduced to at least one person in the room.
 */
object *ppl, *newppl;
int now, i, ix, lastdef;

/* Wait 5 seconds. If the person is not in the room anymore, they were just passing thru. */
\$delay(5, FALSE, "f737");
if (\$actor."base:environment" != this."base:environment") return nil;

if (!\$actor."trait:seen-butler") \{
    ::behave(\$db: this."nip:behavior:db", \$mood: "hello", \$newbie: \$actor);
    \$actor."trait:seen-butler" = time();
    return TRUE;
\}

/* Does the actor have intro data. */
if (!\$actor."trait:definitionstamp") \{
    if (!random(10) \&\& !\$actor."sys:tip:definition") \{
        EmitTo(\$actor, "[I would introduce you, but you have no definition. " + LINK("Ask the butler about names", "ask butler about names", "command") + " for further information.]");
        \$actor."sys:tip:definition" = 1;
    \}
    return nil;
\}

lastdef = Int(\$actor."trait:definitionstamp");
now     = time();

if (Int(\$actor."sys:jonkichi:last-intro") + 43200 \> now) \{
    /* Intro'd recently. */
    return nil;
\}

/* Find people in the room. */
ppl    = this."base:environment"."base:inventory";
newppl = (\{ \});
ix     = sizeof(ppl);

for (i = 0; i \< ix; i++) \{
    if (!ppl[i]."skotos:charname" \|\| ppl[i] == \$actor) \{
        ppl[i] = nil;
    \} else if (!Map(ppl[i]."sys:jonkichi:intro-map")[\$actor]) \{
        newppl += (\{ ppl[i] \});
        ppl[i]."sys:jonkichi:intro-map" = Map(ppl[i]."sys:jonkichi:intro-map") + ([ \$actor : lastdef ]);
    \}
\}
ppl -= (\{ nil \});

if (!sizeof(ppl)) return nil;

if (sizeof(newppl)) \{
    /* There are new people here who've not been introduced to the actor. */
    /* \$actor."sys:jonkichi:last-intro" = time(); */
    mapping amap;

    ::lookup();
    Social(this, "introduce", oneof("monotonously", "lifelessly", "raspingly", "articulately", "purposefully"), "This is " + Describe(\$actor) + ". " + capitalize(\$actor."base:pronoun") + " " + \$lookup + ".", nil, \$actor, "to", newppl);

    /* Since introductions customarily mean BOTH parties are introduced, check if the people are known to the actor. */
    ix     = sizeof(newppl);
    amap   = Map(\$actor."sys:jonkichi:intro-map");
    \$intro = (\{ \});
    for (i = 0; i \< ix; i++) \{
        if ((newppl[i]."trait:definition" \|\| newppl[i]."trait:contain") \&\& !amap[newppl[i]]) \{
            \$intro += (\{ newppl[i] \});
            amap[newppl[i]] = newppl[i]."trait:definitionstamp";
        \}
    \}
    \$actor."sys:jonkichi:intro-map" = amap;

    if (\$ix = sizeof(\$intro)) \{
        for (\$i = 0; \$i \< \$ix; \$i++) \{
            \$delay(4, FALSE, "ab62");
            if (\$intro[\$i] \&\& \$intro[\$i]."base:environment" == this."base:environment" \&\& \$actor."base:environment" == this."base:environment") \{
                ::lookup(\$actor: \$intro[\$i]);
                Social(this, "introduce", oneof("continuingly", "followingly", "orderly", "onwardly", "leadingly"), "And this is " + Describe(\$intro[\$i]) + ", " + \$lookup + ".", nil, \$intro[\$i], "to", \$actor);
            \}
        \}
    \}
    return nil;
\}
/*
 * ChangeLog [
 *    Change(Feb 20 10:17, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:witness-post:login">
         X[M] /*
 * D=Introduce people unless they were intro'd recently.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Feb 20 10:08, 2006
 * State:  EXPERIMENTAL
 *
 * To prevent the butler from being senile and repetitive, the introductions are only made when certain conditions are met.
 * 1. The person being introduced must not have been introduced in the last 12 hours.
 * 2. The person being introduced must have logged out for a period of \> 60 minutes since last introduced.
 * 3. The person being introduced must not be the only person in the room.
 */
::introduce();
return TRUE;
/*
 * ChangeLog [
 *    Change(Feb 20 10:08, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:witness:enter-from">
         X[M] /*
 * D=Introduce people unless they were intro'd recently.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Feb 20 10:08, 2006
 * State:  EXPERIMENTAL
 *
 * To prevent the butler from being senile and repetitive, the introductions are only made when certain conditions are met.
 * 1. The person being introduced must not have been introduced in the last 12 hours.
 * 2. The person being introduced must have logged out for a period of \> 60 minutes since last introduced.
 * 3. The person being introduced must not be the only person in the room.
 */
::introduce();
return TRUE;
/*
 * ChangeLog [
 *    Change(Feb 20 10:08, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="merry:witness:evoke">
         X[M] /*
 * D=Emit to vestibule when people speak in the hall, occasionally.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Feb 12 11:08, 2006
 * State:  EXPERIMENTAL
 */
if (\$imperative \&\& !(['!':1,'+':1,'@':1])[\$imperative[0]] \&\& !random(4) \&\& Int(this."sys:ct:lastemit") + 30 \< time()) \{
    this."sys:ct:lastemit" = time();
    EmitIn(\$\{Mansion:rooms:Vestibule\}, oneof(
        "You hear voices from the north.",
        "Someone speaks to the north.",
        "The faint sound of chatter reaches you from within the mansion.",
        "A " + (\$actor."base:male" ? "man" : "woman") + " is heard from the north saying " + \$evoke
    ));
\}
return TRUE;
/*
 * ChangeLog [
 *    Change(Feb 12 11:08, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "emoting":\<Lib:NIP:lib:emoting\>, "freemoting":\<Lib:NIP:lib:freemoting\>, "internal":\<Lib:NIP:base:hooks:internal\>, "nip":\<Lib:NIP:hooks:nip\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<Jonkichi:NIP:lib:emoting-def\>:(\{ "lib:handler:emoting:preparse" \}), \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:asking\>:(\{ "react:npcask-dob" \}), \<Lib:NIP:lib:communicate\>:(\{ "lib:core:reply", "lib:family_resolve", "react-post:evoke-iob%nip:communicate", "react-post:evoke-dob%nip:communicate" \}), \<Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave" \}), \<Lib:NIP:lib:freemoting\>:(\{ "lib:handler_freemote" \}), \<Lib:NIP:lib:presents\>:(\{ "lib:handler:ask-for", "lib:handler:ask", "lib:core:add_present", "lib:core:sub_present" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<Lib:NIP:lib:rumours\>:(\{ "lib:handler:ask-about" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:emoting\>, \<Lib:NIP:lib:freemoting\>, \<Lib:NIP:lib:asking\>, \<Lib:NIP:lib:presents\>, \<Lib:NIP:lib:communicate\>, \<Jonkichi:NIP:lib:emoting-def\>, \<Lib:NIP:lib:rumours\>, \<Lib:NIP:lib:interaction\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:behavior:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:communicate:db">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:emoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:freemoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:hints:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:interaction:chance">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:interaction:db">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:interaction:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:present:objects">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:rumour:database">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "nip:INTERNAL", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "freemoting:DECIDE", "nip:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         34
      </Core:Property>
      <Core:Property property="nip:behavior:db">
         \<Mansion:nip:behavior:butler\>
      </Core:Property>
      <Core:Property property="nip:trait:communicate:db">
         \<Mansion:nip:comm:butler\>
      </Core:Property>
      <Core:Property property="nip:trait:emoting:frequency">
         150
      </Core:Property>
      <Core:Property property="nip:trait:freemoting:frequency">
         150
      </Core:Property>
      <Core:Property property="nip:trait:interaction:chance">
         50
      </Core:Property>
      <Core:Property property="nip:trait:interaction:db">
         \<Mansion:lib:jonkichi:interaction:butler\>
      </Core:Property>
      <Core:Property property="nip:trait:interaction:ttl">
         300
      </Core:Property>
      <Core:Property property="nip:trait:present:objects">
         ([  ])
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="nip:trait:rumour:database">
         \<Mansion:nip:rumours:butler\>
      </Core:Property>
      <Core:Property property="npc:instance:id">5883</Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1363773412
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1135807224
      </Core:Property>
      <Core:Property property="npc:status:startup">
         1140107151
      </Core:Property>
      <Core:Property property="npc:sys:ncs_id">
         "butler-2"
      </Core:Property>
      <Core:Property property="npc:sys:shk-cursor">1</Core:Property>
      <Core:Property property="npc:sys:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "nip:INTERNAL", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "freemoting:DECIDE", "nip:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="npc:sys:sign">2</Core:Property>
      <Core:Property property="npc:sys:stake">2</Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1135806065, "zwoc", "E", 1135806092, "zwoc", "E", 1135806102, "zwoc", "X", 1135806174, "zwoc", "S", 1135807030, "zwoc", "X", 1135807166, "zwoc", "E", 1135807196, "zwoc", "E", 1135807233, "zwoc", "S", 1135807234, "zwoc", "S", 1135807262, "zwoc", "S", 1135807265, "zwoc", "S", 1135807479, "zwoc", "S", 1135807486, "zwoc", "S", 1135807539, "zwoc", "S", 1135807593, "zwoc", "S", 1135807615, "zwoc", "S", 1135808427, "zwoc", "S", 1135808589, "zwoc", "S", 1138928533, "zwoc", "E", 1138928626, "zwoc", "E", 1138928657, "zwoc", "E", 1138928682, "zwoc", "E", 1138928702, "zwoc", "X", 1138928720, "zwoc", "E", 1138928737, "zwoc", "X", 1138928748, "zwoc", "X", 1138928865, "zwoc", "E", 1138929546, "zwoc", "E", 1138933064, "zwoc", "S", 1138938416, "zwoc", "S", 1138938428, "zwoc", "S", 1138938453, "zwoc", "S", 1138984862, "zwoc", "S", 1139760984, "???", "P", 1139760995, "zwoc", "S", 1139761012, "???", "P", 1139761056, "???", "P", 1139761100, "???", "P", 1139761228, "???", "P", 1140100872, "zwoc", "S", 1140103317, "zwoc", "S", 1140106213, "zwoc", "S", 1140106484, "zwoc", "E", 1140106499, "zwoc", "E", 1140107139, "zwoc", "S", 1140107889, "zwoc", "S", 1140108117, "zwoc", "S", 1140108334, "zwoc", "S", 1140448103, "???", "P", 1140448125, "???", "P", 1140448126, "???", "P", 1140448138, "zwoc", "P", 1140448146, "???", "P", 1140448181, "zwoc", "P", 1140448196, "zwoc", "P", 1140448206, "???", "P", 1140448576, "???", "P", 1140448627, "???", "P", 1140449113, "???", "P", 1140449240, "???", "P", 1140449252, "???", "P", 1140449357, "???", "P", 1140449397, "???", "P", 1140449496, "???", "P", 1140449854, "???", "P", 1140449997, "???", "P", 1140451100, "???", "P", 1140451293, "???", "P", 1140451300, "???", "P", 1140454387, "???", "P", 1140454509, "???", "P", 1140454590, "???", "P", 1140457304, "zwoc", "E", 1140458160, "???", "P", 1140458170, "???", "P", 1140458221, "???", "P", 1140458233, "???", "P", 1140458248, "???", "P", 1140458301, "???", "P", 1140458319, "???", "P", 1140458366, "???", "P", 1140458397, "???", "P", 1140458893, "zwoc", "X", 1140459695, "???", "P", 1140459725, "???", "P", 1140459746, "???", "P", 1140459840, "???", "P", 1140459956, "???", "P", 1140459958, "???", "P", 1140460001, "???", "P", 1140460516, "???", "P", 1140460517, "???", "P", 1140464869, "zwoc", "S", 1140465014, "zwoc", "P", 1140465025, "???", "P", 1140465140, "???", "P", 1140466934, "zwoc", "E", 1140466946, "zwoc", "E", 1143485391, "zwoc", "S", 1143485432, "zwoc", "S", 1143493970, "zwoc", "P", 1143494579, "zwoc", "S", 1143494585, "zwoc", "S", 1143494590, "zwoc", "S", 1143494665, "zwoc", "P", 1143494718, "zwoc", "P", 1143494727, "zwoc", "P", 1143494774, "zwoc", "P", 1143494806, "zwoc", "P", 1143494839, "zwoc", "P", 1143494869, "zwoc", "P", 1143494921, "zwoc", "P", 1143494926, "zwoc", "P", 1143494971, "zwoc", "P", 1143494998, "zwoc", "P", 1143495017, "zwoc", "P", 1143495290, "zwoc", "P", 1143495298, "zwoc", "P", 1143495307, "zwoc", "P", 1143495335, "zwoc", "P", 1143495409, "zwoc", "P", 1143495916, "zwoc", "P", 1149546005, "zwoc", "P", 1149546092, "zwoc", "P", 1149546099, "zwoc", "P", 1149546137, "zwoc", "P", 1151591471, "zwoc", "S", 1151593423, "zwoc", "S", 1161390409, "dodinas", "S", 1161390422, "dodinas", "S", 1206641791, "zwoc", "R", 1206647825, "zwoc", "E" \})
      </Core:Property>
      <Core:Property property="setp:pointer">
         \<Mansion:nip:comm:butler\>
      </Core:Property>
      <Core:Property property="setp:undoo">
         \<Mansion:lib:jonkichi:butler\>
      </Core:Property>
      <Core:Property property="setp:undop">
         "details:head:description:look"
      </Core:Property>
      <Core:Property property="sigexecptr">
         "decide:decide-exec"
      </Core:Property>
      <Core:Property property="sigstream">4</Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         0
      </Core:Property>
      <Core:Property property="skill:cutoffensive">3</Core:Property>
      <Core:Property property="skill:dodgedefensive">
         1
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="sys:ct:lastemit">
         1317145811
      </Core:Property>
      <Core:Property property="sys:keepalive:disabled">
         1
      </Core:Property>
      <Core:Property property="sys:keepalive:par">
         600
      </Core:Property>
      <Core:Property property="sys:web:owner">"zwoc"</Core:Property>
      <Core:Property property="theatre:notwhobody">1</Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
