<object clone="/obj/properties" owner="zwoc">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        Lib:NIP:updates
 Email:         kalle@mortalis.skotos.net
 Revision:      11.33
 Generated:     Sun Sep 25 01:49:00 2011 on Jonkichi
 Last revision: Wed Oct 25 10:13:54 2006 by zwoc (EED)



(Do not modify #list# -- it is automatically constructed.)


------------------------------------------------------------------------------------------------------
 lib:update:1  (M) 2003-08-31 Rev. 0-1: Data:NIP:system inheritage updated with act:start for
                   spawned NPC's.
 lib:update:10 (M) 2003-11-17 Rev. 9-10: This update updates any CNPC's using the 'eating' library.
 lib:update:11 (M) 2003-11-18 Rev. 10-11: This update updates any CNPC's using the 'emoting'
                   library.
 lib:update:12 (M) 2003-11-21 Rev. 11-12: This update updates any CNPC's using the 'predator'
                   library.
 lib:update:13 (M) 2003-11-26 Rev. 12-13: Add new inherit for ::shutdown();
 lib:update:14 (M) 2003-11-27 Rev. 13-14: Implement log feature.
 lib:update:15 (M) 2003-12-20 Rev. 14-15: Re-add inherit for ::shutdown();
 lib:update:16 (M) 2003-12-21 Rev. 15-16: This update updates any CNPC's using the 'predator'
                   library.
 lib:update:17 (M) 2004-02-17 Rev. 16-17: Deprecated properties for freemote db's need auto-
                   adjustment.
 lib:update:18 (M) 2004-03-23 Rev. 17-18: This update updates any CNPC's using the 'resource-
                   control' library.
 lib:update:19 (M) 2004-03-30 Rev. 18-19: This update updates any CNPC's using the 'movement'
                   library.
 lib:update:2  (M) 2003-08-31 Rev. 1-2: NCS support implemented.
 lib:update:20 (M) 2004-03-30 Rev. 19-20: This update updates any CNPC's using the 'wounding'
                   library.
 lib:update:21 (M) 2004-04-23 Rev. 20-21: Fail to inherit base script fix.
 lib:update:22 (M) 2004-04-23 Rev. 21-22: Previous update invalid.
 lib:update:23 (M) 2004-05-19 Rev. 22-23: This update updates any CNPC's using the 'freemoting'
                   library.
 lib:update:24 (M) 2004-08-07 Rev. 23-24: This update updates any CNPC's using the 'trading'
                   library.
 lib:update:25 (M) 2004-08-17 Rev. 24-25: This update applies to all nippers using the 'wearer'
                   library.
 lib:update:26 (M) 2004-08-23 Rev. 25-26: This update is global.
 lib:update:27 (M) 2004-10-13 Rev. 26-27: This update applies to all nippers using the 'musician'
                   library.
 lib:update:28 (M) 2004-10-27 Rev. 27-28: This update applies to all nippers using the 'trash-
                   taker' library.
 lib:update:29 (M) 2004-10-29 Rev. 28-29: This update applies to all nippers using the 'courier'
                   library.
 lib:update:3  (M) 2003-09-23 Rev. 2-3: NCS support dummy.
 lib:update:30 (M) 2004-11-01 Rev. 29-30: This update applies to all nippers using the 'resource-
                   control' library.
 lib:update:31 (M) 2004-11-16 Rev. 30-31: This update applies to all nippers using the 'resource-
                   control' library.
 lib:update:32 (M) 2005-05-12 Rev. 31-32: This update applies to all nippers using the 'emoting'
                   library.
 lib:update:33 (M) 2005-05-15 Rev. 32-33: This update applies to all nippers using the 'emoting'
                   library.
 lib:update:34 (M) 2006-02-03 Rev. 33-34: This update applies to all nippers using the 'emoting'
                   library.
 lib:update:35 (M) 2006-02-14 Rev. 34-35: This update applies to all nippers using the 'prey'
                   library.
 lib:update:36 (M) 2006-02-20 Rev. 35-36: This update applies to all nippers using the 'resource-
                   control' library.
 lib:update:37 (M) 2006-03-06 Rev. 36-37: This update applies to all nippers using the 'guarding'
                   library.
 lib:update:38 (M) 2006-04-25 Rev. 37-38: This update applies to all nippers using the 'emoting'
                   library.
 lib:update:39 (M) 2006-04-26 Rev. 38-39: This update applies to all nippers using the 'freemoting'
                   library.
 lib:update:4  (M) 2003-09-23 Rev. 3-4: Default error handler added.
 lib:update:40 (M) 2006-08-03 Rev. 39-40: This update applies to all nippers using the 'prey'
                   library.
 lib:update:41 (M) 2006-08-03 Rev. 40-41: This update applies to all nippers using the 'prey'
                   library.
 lib:update:42 (M) 2006-08-03 Rev. 41-42: This update applies to all nippers using the 'fighting-
                   fake' library.
 lib:update:43 (M) 2006-10-25 Rev. 42-43: This update applies to all nippers using the 'death'
                   library.
 lib:update:44 (M) 2006-10-25 Rev. 43-44: Copycat.
 lib:update:5  (M) 2003-09-23 Rev. 4-5: react-post:offer-to -=\> react-post:offer-who change.
 lib:update:6  (M) 2003-10-28 Rev. 5-6: This update implements the new this.npc feature (set in the
                   parent NPC). The new feature implements a more efficient way of dealing with
                   spawns of NPC's, where instead of brutally copying the properties down to the
                   child, the NPC now has two layers, the property NPC and the spawn NPC.
 lib:update:7  (M) 2003-11-01 Rev. 6-7: This update replaces the this.npc feature with the nip and
                   nip-core namespace setprop-triggers.
 lib:update:8  (M) 2003-11-01 Rev. 7-8: This update removes and re-adds all libraries in the NPC.
                   This is necessary due to the extensive amount of modifications to the system.
 lib:update:9  (M) 2003-11-01 Rev. 8-9: This update refreshes all NIP and NIP-CORE properties in
                   the NPC.
------------------------------------------------------------------------------------------------------

*/
      </Core:Property>
      <Core:Property property="log:creator">
         "Kalle Alm"
      </Core:Property>
      <Core:Property property="merry:lib:update:1">
         X[M] /*
  D=2003-08-31 Rev. 0-1: Data:NIP:system inheritage updated with act:start for spawned NPC's.

  This update will inherit act:start from Lib:NIP:core.
*/

this."merry:inherit:act:start" = \$\{Lib:NIP:core\};
      </Core:Property>
      <Core:Property property="merry:lib:update:10">
         X[M] /*
  D=2003-11-17 Rev. 9-10: This update updates any CNPC's using the 'eating' library.

  This update applies to all NPC's using 'Lib:NIP:lib:eating'.
*/

if( this."nip-core:inherits"[ \$\{Lib:NIP:lib:eating\} ] ) \{

  if( this."nip:trait:eating:burn" == nil )
    this."nip:trait:eating:burn" = 300.0;

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:11">
         X[M] /*
  D=2003-11-18 Rev. 10-11: This update updates any CNPC's using the 'emoting' library.

  This update applies to all NPC's using 'Lib:NIP:lib:emoting'.

  It introduces the short-cut function "::behavior()" to all NPC's using 'emoting'.
*/

if( this."nip-core:inherits"[ \$\{Lib:NIP:lib:emoting\} ] ) \{

  Call( this, "core:merry_add", \$MERRY: "lib:behave", \$OBJ: \$\{Lib:NIP:lib:emoting\} );

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:12">
         X[M] /*
  D=2003-11-21 Rev. 11-12: This update updates any CNPC's using the 'predator' library.

  This update applies to all NPC's using 'Lib:NIP:lib:predator'.

  The missing script handler 'act:eat%predator' was introduced and needs to be implemented.
*/

if( this."nip-core:inherits"[ \$\{Lib:NIP:lib:predator\} ] ) \{

  Call( this, "core:merry_add", \$MERRY: "act:eat%predator", \$OBJ: \$\{Lib:NIP:lib:predator\} );

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:13">
         X[M] /*
  D=2003-11-26 Rev. 12-13: Add new inherit for ::shutdown();

  This update applies to all NPC's.
*/

this."merry:inherit:lib:shutdown" = \$\{Lib:NIP:core\};
      </Core:Property>
      <Core:Property property="merry:lib:update:14">
         X[M] /*
  D=2003-11-27 Rev. 13-14: Implement log feature.

  This update applies to all NPC's.
*/

this."merry:inherit:lib:log" = \$\{Lib:NIP:core\};
      </Core:Property>
      <Core:Property property="merry:lib:update:15">
         X[M] /*
  D=2003-12-20 Rev. 14-15: Re-add inherit for ::shutdown();

  This update applies to all NPC's

  This is a bogey-update due to a mistake made previously when revision #13 was introduced to S7.
*/

this."merry:inherit:lib:shutdown" = \$\{Lib:NIP:core\};
      </Core:Property>
      <Core:Property property="merry:lib:update:16">
         X[M] /*
  D=2003-12-21 Rev. 15-16: This update updates any CNPC's using the 'predator' library.

  This update applies to all NPC's using 'Lib:NIP:lib:predator'.

  The library incorrectly inherited the script "merry:merry:lib:act:eat%predator" for any NPC's which began using the system post update #12.
*/

if( this."nip-core:inherits"[ \$\{Lib:NIP:lib:predator\} ] ) \{

  if( this."merry:inherit:merry:act:eat%predator" ) \{

    Call( this, "core:merry_delete", \$MERRY: "merry:act:eat%predator", \$OBJ: \$\{Lib:NIP:lib:predator\} );

    Call( this, "core:merry_add", \$MERRY: "act:eat%predator", \$OBJ: \$\{Lib:NIP:lib:predator\} );

  \}

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:17">
         X[M] /*
  D=2004-02-17 Rev. 16-17: Deprecated properties for freemote db's need auto-adjustment.

  This update applies to all NPC's using 'Lib:NIP:lib:freemoting'.

*/

if( arr_to_set(this."nip-core:libraries")[ \$\{Lib:NIP:lib:freemoting\} ] )
\{

  /*
   * Retrieve all the names beginning with
   * "nip:behavior:freemoting"
   */
  mapping freemoting, unexported;
  int i, sz;
  string *ind;

  freemoting = prefixed_map( this."*", "export:nip:behavior:freemoting:", TRUE );

  EmitTo( this, "freemoting: " + dump_value(freemoting) );

  unexported = prefixed_map( this."*", "nip:behavior:freemoting:", TRUE );

  EmitTo( this, "unexported freemoting: " + dump_value(unexported) );

  if( sz = map_sizeof( unexported ))
  \{

    ind = map_indices( unexported );

    for( i = 0; i \< sz; i++ )
      if( !freemoting[ind[i]] )
        freemoting += ([ ind[i] : unexported[ ind[i] ] ]);
  \}

  EmitTo( this, "map size of 'freemoting': " + map_sizeof(freemoting) );

  if( map_sizeof( freemoting ))
  \{
    string name;

    ind = map_indices( freemoting );
    sz = sizeof( ind );

    for( i = 0; i \< sz; i++ )
    \{
      name = "export:nip:behavior:" + ind[i];
      EmitTo( this, "new name for db: " + name );

      if( Get( this, name ))
      \{
        name += ":freemoting";
        Set( this, name + "_comment", "* warning: this property was named thusly, because the original name was already set *" );
      \}
      Set( this, name, freemoting[ ind[i] ] );
      Set( this, "nip:behavior:freemoting:" + ind[i], nil );
      Set( this, "export:nip:behavior:freemoting:" + ind[i], nil );
    \}
  \}

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:18">
         X[M] /*
  D=2004-03-23 Rev. 17-18: This update updates any CNPC's using the 'resource-control' library.

  This update applies to all NPC's using 'Lib:NIP:lib:resource-control'.

  The addition of 'witness-post:teleport%resource-control' deemed this necessary.
*/

if( this."nip-core:inherits"[ \$\{Lib:NIP:lib:resource-control\} ] ) \{

  Call( this, "core:merry_add", \$MERRY: "witness-post:teleport%resource-control", \$OBJ: \$\{Lib:NIP:lib:resource-control\} );

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:19">
         X[M] /*
  D=2004-03-30 Rev. 18-19: This update updates any CNPC's using the 'movement' library.

  This update applies to all NPC's using 'Lib:NIP:lib:movement'.

  The actual act of entering a random exit was extracted from the decide sig-hook, and
  placed in its own, separate script, for possible external use.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:movement\} ] )
\{
  Call( this, "core:merry_add", \$MERRY: "lib:core_movement_exit", \$OBJ: \$\{Lib:NIP:lib:movement\} );
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:2">
         X[M] /*
  D=2003-08-31 Rev. 1-2: NCS support implemented.

  This update will call the NCS initializer.
*/

NCS::load(\$NPC: this);
      </Core:Property>
      <Core:Property property="merry:lib:update:20">
         X[M] /*
  D=2004-03-30 Rev. 19-20: This update updates any CNPC's using the 'wounding' library.

  This update applies to all NPC's using 'Lib:NIP:lib:wounding'.

  The inheriting of the ::wound() function was missing.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:wounding\} ] )
\{
  Call( this, "core:merry_add", \$MERRY: "lib:wound", \$OBJ: \$\{Lib:NIP:lib:wounding\} );
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:21">
         X[M] /*
  D=2004-04-23 Rev. 20-21: Fail to inherit base script fix.

  This update applies to all NPC's.

  [update was invalid and dummified]
*/

/*
 Call( this, "core:merry_add", \$MERRY: "setprop-post:sigstream", \$OBJ: \$\{Lib:NIP:base:lib:stream\} );
 */
      </Core:Property>
      <Core:Property property="merry:lib:update:22">
         X[M] /*
  D=2004-04-23 Rev. 21-22: Previous update invalid.

  This update applies to all NPC's.
*/

Call( this, "core:merry_delete", \$MERRY: "setprop-post:sigstream" /*, \$OBJ: \$\{Lib:NIP:base:lib:stream\} */ );
      </Core:Property>
      <Core:Property property="merry:lib:update:23">
         X[M] /*
  D=2004-05-19 Rev. 22-23: This update updates any CNPC's using the 'freemoting' library.

  This update applies to all NPC's using 'Lib:NIP:lib:freemoting'.

  The inheriting of the ::handler_freemote() function was missing.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:freemoting\} ] )
\{
  Call( this, "core:merry_add", \$MERRY: "lib:handler_freemote", \$OBJ: \$\{Lib:NIP:lib:freemoting\} );
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:24">
         X[M] /*
  D=2004-08-07 Rev. 23-24: This update updates any CNPC's using the 'trading' library.

  This update applies to all NPC's using 'Lib:NIP:lib:trading'.

  The new Merry script "merry:lib:handler-post:ask" was added.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:trading\} ] )
\{
  Call( this, "core:merry_add", \$MERRY: "lib:handler-post:ask", \$OBJ: \$\{Lib:NIP:lib:trading\} );
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:25">
         X[M] /*
  D=2004-08-17 Rev. 24-25: This update applies to all nippers using the 'wearer' library.

  This update applies to all NPC's using 'Lib:NIP:lib:wearer'.

  Due to fundamental reconstruction of the library, any nipper using it presently will re-add it to its system.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:wearer\} ] )
\{
  this.add = "wearer";
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:26">
         X[M] /*
  D=2004-08-23 Rev. 25-26: This update is global.

  The new property type map system was implemented in every present (official) NIP library, and thus, each library must be scanned and the property map entries retrieved.
*/

int x, xs, i, sz;
object *libs;

libs = this."nip-core:libraries";

/*
 * Analyze libraries.
 */
xs = sizeof( libs );

for( x = 0; x \< xs; x++ )
\{
  \$PROPMAP = libs[x]."property:map";
  if( \$PROPMAP )
  \{
    string *prop;

    prop = map_indices( \$PROPMAP );
    sz   = sizeof( prop );

    for( i = 0; i \< sz; i++ )
    \{
      \$p = \$PROPMAP[ prop[i] ];
      \$p = typeof( \$p ) == T_INT ? (\{ \$p \}) : \$p;
      Set( this, "nip-core:prop:" + prop[i], arr_to_set( \$p ));
    \}
  \}
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:27">
         X[M] /*
  D=2004-10-13 Rev. 26-27: This update applies to all nippers using the 'musician' library.

  This update applies to all NPC's using 'Lib:NIP:lib:musician'.

  The hook needs be re-added.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:musician\} ] )
\{
  this.hook = "add musician";
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:28">
         X[M] /*
  D=2004-10-27 Rev. 27-28: This update applies to all nippers using the 'trash-taker' library.

  This update applies to all NPC's using 'Lib:NIP:lib:trash-taker'.

  The script "merry:lib:slay" was added, to enable a 'trashcan' feature for trashed items.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:trash-taker\} ] )
\{
  this."merry:inherit:lib:slay" = \$\{Lib:NIP:lib:trash-taker\};
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:29">
         X[M] /*
  D=2004-10-29 Rev. 28-29: This update applies to all nippers using the 'courier' library.

  This update applies to all NPC's using 'Lib:NIP:lib:courier'.

  The witness script "witness:teleport%nip:core" was added.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:courier\} ] )
\{
  this."merry:inherit:witness:teleport%nip:core" = \$\{Lib:NIP:lib:courier\};
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:3">
         X[M] /*
  D=2003-09-23 Rev. 2-3: NCS support dummy.

  Dummy update required to fix NCS support.
*/

NCS::load(\$NPC: this);
      </Core:Property>
      <Core:Property property="merry:lib:update:30">
         X[M] /*
  D=2004-11-01 Rev. 29-30: This update applies to all nippers using the 'resource-control' library.

  This update applies to all NPC's using 'Lib:NIP:lib:resource-control'.

  Due to a bug in the witness signal, the "post" signals were moved to the std signals, and due to a bug in yours truly, the "teleport" script is now properly inherited when the library is loaded.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:resource-control\} ] )
\{
  this."merry:inherit:witness-post:teleport%resource-control" = nil;
  this."merry:inherit:witness-post:login%resource-control" = nil;
  this."merry:inherit:witness-post:enter-from%resource-control" = nil;
  this."merry:inherit:witness:teleport%resource-control" = \$\{Lib:NIP:lib:resource-control\};
  this."merry:inherit:witness:login%resource-control" = \$\{Lib:NIP:lib:resource-control\};
  this."merry:inherit:witness:enter-from%resource-control" = \$\{Lib:NIP:lib:resource-control\};
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:31">
         X[M] /*
  D=2004-11-16 Rev. 30-31: This update applies to all nippers using the 'resource-control' library.

  This update applies to all NPC's using 'Lib:NIP:lib:resource-control'.

  Previous update was invalid. This update addresses the issues it caused.
*/

if( arr_to_set( this."nip-core:libraries" )[ \$\{Lib:NIP:lib:resource-control\} ] )
\{
  this."merry:inherit:witness:login%resource-control" = nil;
  this."merry:inherit:witness:enter-from%resource-control" = nil;

  this."merry:inherit:witness:login%nip:resource-control" = \$\{Lib:NIP:lib:resource-control\};
  this."merry:inherit:witness:enter-from%nip:resource-control" = \$\{Lib:NIP:lib:resource-control\};
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:32">
         X[M] /*
 * D=2005-05-12 Rev. 31-32: This update applies to all nippers using the 'emoting' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:emoting'.
 *
 * The "nip:trait:hints:" property map setting was missing.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:emoting\}]) \{
  this."nip-core:prop:nip:trait:hints:" = ([ 4:1 ]);
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:33">
         X[M] /*
 * D=2005-05-15 Rev. 32-33: This update applies to all nippers using the 'emoting' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:emoting'.
 *
 * The "nip:trait:titles:default" property was introduced.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:emoting\}]) \{
  this."nip-core:prop:nip:trait:titles:default" = ([ 5:1 ]);
\}

this."nip:trait:titles:default" = \$\{Data:NIP:system\}."titles:default";
      </Core:Property>
      <Core:Property property="merry:lib:update:34">
         X[M] /*
 * D=2006-02-03 Rev. 33-34: This update applies to all nippers using the 'emoting' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:emoting'.
 *
 * The title, name, etc. stuff was moved into a new function, called "handler:emoting:preparse".
 * This so that overrides can be implemented for what, exactly, is defined there.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:emoting\}]) \{
    if (!this."merry:inherit:lib:handler:emoting:preparse")
        this."merry:inherit:lib:handler:emoting:preparse" = \$\{Lib:NIP:lib:emoting\};
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:35">
         X[M] /*
 * D=2006-02-14 Rev. 34-35: This update applies to all nippers using the 'prey' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:prey'.
 *
 * The "eaten" handler was added, as well as the "descripts" property relating to the aforementioned.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:prey\}]) \{
    if (!this."merry:inherit:lib:handler:prey:eaten")
        Call(this, "core:merry_add", \$MERRY: "lib:handler:prey:eaten", \$OBJ: \$\{Lib:NIP:lib:prey\});
    Set(this, "nip-core:prop:nip:trait:prey:dead-chunks", ([ 1 : 1 ]));
    Set(this, "nip-core:prop:nip:trait:prey:descripts", ([ 1 : 1 ]));
    if (typeof(this."nip:trait:prey:descripts") == T_NIL)
        this."nip:trait:prey:descripts" = 3;
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:36">
         X[M] /*
 * D=2006-02-20 Rev. 35-36: This update applies to all nippers using the 'resource-control' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:resource-control'.
 *
 * The "witness:login" hook was detected to not be functional; renaming to "witness-post:login" solves.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:resource-control\}]) \{
    Call(this, "core:merry_add", \$MERRY: "witness-post:login%nip:resource-control", \$OBJ: \$\{Lib:NIP:lib:resource-control\});
    Call(this, "core:merry_delete", \$MERRY: "witness:login%nip:resource-control");
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:37">
         X[M] /*
 * D=2006-03-06 Rev. 36-37: This update applies to all nippers using the 'guarding' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:guarding'.
 *
 * "base:scriptrunner" was not set, as it should be, when the library was loaded.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:guarding\}]) \{
    this."base:scriptrunner" = TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:38">
         X[M] /*
 * D=2006-04-25 Rev. 37-38: This update applies to all nippers using the 'emoting' library.
 *
 * This is a copy of update #34.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:emoting\}]) \{
    if (!this."merry:inherit:lib:handler:emoting:preparse")
        this."merry:inherit:lib:handler:emoting:preparse" = \$\{Lib:NIP:lib:emoting\};
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:39">
         X[M] /*
 * D=2006-04-26 Rev. 38-39: This update applies to all nippers using the 'freemoting' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:freemoting'.
 *
 * The new property "nip:trait:freemoting:steal-frequency" was added.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:freemoting\}]) \{
    this."nip:trait:freemoting:steal-frequency" = 10;
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:4">
         X[M] /*
  D=2003-09-23 Rev. 3-4: Default error handler added.
*/

this."merry:inherit:setprop-post:error" = \$\{Lib:NIP:core\};
      </Core:Property>
      <Core:Property property="merry:lib:update:40">
         X[M] /*
 * D=2006-08-03 Rev. 39-40: This update applies to all nippers using the 'prey' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:prey'.
 *
 * The "die" handler was moved out of the "prey" library into the new "death" library. The "prey" library now uses a
 * much slimmed-down version of the former, but supports the death library.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:prey\}]) \{
    Call(this, "core:merry_add", \$MERRY: "act:nip/die", \$OBJ: \$\{Lib:NIP:lib:prey\});
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:41">
         X[M] /*
 * D=2006-08-03 Rev. 40-41: This update applies to all nippers using the 'prey' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:prey'.
 *
 * The "die" handler was moved out of the "prey" library into the new "death" library. The "prey" library now uses a
 * much slimmed-down version of the former, but supports the death library.
 *
 * This update adds the 'death' library to all nippers using the 'prey' library.
 * It also does some rerouting of properties that were renamed.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:prey\}]) \{
    this.add = "death";
    this."nip:trait:death:dead" = this."nip:trait:prey:dead";
    this."nip:trait:prey:dead" = nil;
    this."nip:trait:death:rot_time" = this."nip:trait:prey:rot_time";
    this."nip:trait:prey:rot_time" = nil;
    this."nip:trait:death:skeleton_time" = this."nip:trait:prey:skeleton_time";
    this."nip:trait:prey:skeleton_time" = nil;
    this."nip:trait:death:disintegrate_time" = this."nip:trait:prey:disintegrate_time";
    this."nip:trait:prey:disintegrate_time" = nil;
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:42">
         X[M] /*
 * D=2006-08-03 Rev. 41-42: This update applies to all nippers using the 'fighting-fake' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:fighting-fake'.
 *
 * The "die" handler was moved out of the "prey" library into the new "death" library. The "prey" library now uses a
 * much slimmed-down version of the former, but supports the death library. The fighting-fake library now supports
 * the "death" library, but this requires an additional merry script in all objects using fighting-fake.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:fighting-fake\}]) \{
    Call(this, "core:merry_add", \$MERRY: "act:nip/die", \$OBJ: \$\{Lib:NIP:lib:fighting-fake\});
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:43">
         X[M] /*
 * D=2006-10-25 Rev. 42-43: This update applies to all nippers using the 'death' library.
 *
 * This update applies to all NPC's using 'Lib:NIP:lib:death'.
 *
 * The spawn handler 'handler:start:death' was added. The master now has volition unset,
 * and spawns has it enabled at spawn time.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:death\}]) \{
        Call(this, "core:merry_add", \$MERRY: "lib:handler:start:death", \$OBJ: \$\{Lib:NIP:lib:death\});
        this."nip:start" = common::arr_attach(\$arr: this."nip:start", \$add: "handler:start:death");
        if (this."core:ur:firstchild") \{
                \$which = this;
                while (\$ob = common::query_objects()) \{
                        \$ob."base:volition" = TRUE;
                        \$delay(0.1, FALSE, "aaaa");
                \}
                this."base:volition" = FALSE;
        \} else \{
                if (name(this)[0] == '[') this."base:volition" = TRUE;
                else this."base:volition" = FALSE;
                if (this."core:ur:parent" \&\&
                    this."core:ur:parent"."nip-core:libraries" \&\&
                    arr_to_set(this."core:ur:parent"."nip-core:libraries")[\$\{Lib:NIP:lib:death\}]) \{
                        this."core:ur:parent"."base:volition" = FALSE;
                \}
        \}
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:44">
         X[M] /*
 * D=2006-10-25 Rev. 43-44: Copycat.
 *
 * This update "patches" the 43 release.
 */
if (arr_to_set(this."nip-core:libraries")[\$\{Lib:NIP:lib:death\}]) \{
        if (this."core:ur:firstchild") \{
                \$which = this;
                while (\$ob = common::query_objects()) \{
                        \$ob."base:volition" = TRUE;
                        \$delay(0.1, FALSE, "aaaa");
                \}
                this."base:volition" = FALSE;
        \} else \{
                if (name(this)[0] == '[') this."base:volition" = TRUE;
                else this."base:volition" = FALSE;
                if (this."core:ur:parent" \&\&
                    this."core:ur:parent"."nip-core:libraries" \&\&
                    arr_to_set(this."core:ur:parent"."nip-core:libraries")[\$\{Lib:NIP:lib:death\}]) \{
                        this."core:ur:parent"."base:volition" = FALSE;
                \}
        \}
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:5">
         X[M] /*
  D=2003-09-23 Rev. 4-5: react-post:offer-to -=\> react-post:offer-who change.

    This update only applies to scripts of r1-4, using the 'offers' library.
*/

if( this."nip-core:inherits"[ \$\{Lib:NIP:lib:offers\} ] ) \{

  Call( this, "core:merry_add",
    \$MERRY: "react-post:offer-who", \$OBJ: \$\{Lib:NIP:lib:offers\} );

  Call( this, "core:merry_delete",
    \$MERRY: "react-post:offer-to" );

\}
      </Core:Property>
      <Core:Property property="merry:lib:update:6">
         X[M] /*
  D=2003-10-28 Rev. 5-6: This update implements the new this.npc feature (set in the parent NPC). The new feature implements a more efficient way of dealing with spawns of NPC's, where instead of brutally copying the properties down to the child, the NPC now has two layers, the property NPC and the spawn NPC.

  This update applies to all NPC's.

*/

this.npc = this;
      </Core:Property>
      <Core:Property property="merry:lib:update:7">
         X[M] /*
  D=2003-11-01 Rev. 6-7: This update replaces the this.npc feature with the nip and nip-core namespace setprop-triggers.

  This update applies to all NPC's.

*/

this.npc = nil;
this."merry:inherit:setprop-post:nip" = \$\{Lib:NIP:core\};
this."merry:inherit:setprop-post:nip-core" = \$\{Lib:NIP:core\};
      </Core:Property>
      <Core:Property property="merry:lib:update:8">
         X[M] /*
  D=2003-11-01 Rev. 7-8: This update removes and re-adds all libraries in the NPC. This is necessary due to the extensive amount of modifications to the system.

  This update applies to all NPC's.
*/

\$libs = this."nip-core:libraries";
\$hooks = this."nip-core:hooks";

/*
 * Remove hooks.
 */
\$ind = map_indices( \$hooks );
for( \$i = sizeof( \$ind ) -1; \$i \>= 0; \$i-- ) \{
  this.hook = "sub "+\$ind[\$i];
\}

/*
 * Remove libs.
 */
for( \$i = sizeof( \$libs )-1; \$i \>= 0; \$i-- ) \{
  this.delete = name(\$libs[\$i]);
\}

/*
 * Re-add libs.
 */
for( \$i = 0; \$i \< sizeof( \$libs ); \$i++ ) \{
  this.add = name(\$libs[\$i]);
\}

/*
 * Re-add hooks.
 */
for( \$i = 0; \$i \< sizeof( \$ind ); \$i++ ) \{
  this.hook = "add " + \$ind[\$i];
\}
      </Core:Property>
      <Core:Property property="merry:lib:update:9">
         X[M] /*
  D=2003-11-01 Rev. 8-9: This update refreshes all NIP and NIP-CORE properties in the NPC.

  This update applies to all NPC's.
*/

\$all = Get( this, "*" );

\$nip = prefixed_map( \$all, "nip:" );
\$ind = map_indices( \$nip );
\$val = map_values( \$nip );

for( \$i = 0; \$i \< sizeof( \$ind ); \$i++ )
  Set( this, \$ind[\$i], \$val[\$i] );

\$nip = prefixed_map( \$all, "nip-core:" );
\$ind = map_indices( \$nip );
\$val = map_values( \$nip );

for( \$i = 0; \$i \< sizeof( \$ind ); \$i++ )
  Set( this, \$ind[\$i], \$val[\$i] );
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1064289423, "zwoc", "E", 1064290632, "zwoc", "E", 1064291045, "zwoc", "E", 1065793711, "zwoc", "E", 1065793900, "zwoc", "E", 1067357807, "zwoc", "E", 1067704030, "zwoc", "E", 1067704049, "zwoc", "E", 1069087800, "zwoc", "P", 1069087934, "zwoc", "P", 1069091209, "zwoc", "E", 1069183084, "zwoc", "P", 1069441625, "zwoc", "P", 1069804081, "zwoc", "P", 1069931445, "zwoc", "P", 1071943648, "zwoc", "E", 1072043634, "zwoc", "E", 1072044279, "zwoc", "E", 1076980627, "zwoc", "P", 1076980715, "zwoc", "P", 1076981679, "zwoc", "P", 1076982768, "zwoc", "P", 1076982823, "zwoc", "P", 1076983175, "zwoc", "P", 1080082269, "zwoc", "E", 1080621091, "zwoc", "P", 1080621104, "zwoc", "P", 1080656790, "zwoc", "P", 1080657594, "zwoc", "P", 1082694489, "zwoc", "P", 1082719119, "zwoc", "P", 1084996734, "zwoc", "P", 1084996922, "zwoc", "X", 1084996967, "zwoc", "E", 1091459550, "zwoc", "P", 1091460452, "zwoc", "E", 1091460984, "zwoc", "E", 1091891876, "zwoc", "P", 1091891958, "zwoc", "P", 1092803386, "zwoc", "P", 1092803408, "zwoc", "P", 1093282658, "zwoc", "P", 1093282679, "zwoc", "P", 1093290412, "zwoc", "P", 1093290482, "zwoc", "P", 1093308128, "zwoc", "P", 1093308265, "zwoc", "P", 1093308501, "zwoc", "P", 1093308538, "zwoc", "P", 1093308583, "zwoc", "S", 1094648205, "zwoc", "P", 1094648219, "zwoc", "P", 1094648320, "zwoc", "P", 1097637853, "zwoc", "P", 1097637953, "zwoc", "P", 1098849446, "zwoc", "P", 1098849469, "zwoc", "P", 1099147710, "zwoc", "P", 1099147723, "zwoc", "P", 1099370759, "zwoc", "P", 1099370806, "zwoc", "P", 1100599745, "zwoc", "P", 1100599755, "zwoc", "P", 1115913190, "zwoc", "P", 1115913212, "zwoc", "P", 1116186015, "zwoc", "P", 1116186063, "zwoc", "P", 1138931606, "???", "P", 1138931680, "???", "P", 1139936596, "???", "P", 1139936635, "???", "P", 1139936650, "???", "P", 1140464431, "???", "P", 1140464442, "???", "P", 1141675867, "zwoc", "P", 1141675898, "zwoc", "P", 1145988092, "zwoc", "E", 1145988104, "zwoc", "E", 1146048140, "zwoc", "P", 1146048158, "zwoc", "P", 1154612863, "zwoc", "EED", 1154612876, "zwoc", "E", 1154613159, "zwoc", "EED", 1154613402, "zwoc", "EED", 1154613847, "zwoc", "E", 1154614482, "zwoc", "EED", 1154614516, "zwoc", "E", 1161784610, "zwoc", "EED", 1161784627, "zwoc", "E", 1161785532, "zwoc", "EED", 1161785569, "zwoc", "EED", 1161785623, "zwoc", "EED", 1161785634, "zwoc", "EED" \})
      </Core:Property>
      <Core:Property property="system:revision">44</Core:Property>
      <Core:Property property="{email}">
         "kalle@mortalis.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">11</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1161785634
      </Core:Property>
      <Core:Property property="{sub_rev}">33</Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
