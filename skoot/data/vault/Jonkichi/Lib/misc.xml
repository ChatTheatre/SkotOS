<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        Jonkichi:Lib:misc
 Maintainer:    Kalle Alm
 Email:         kalle@mortalis.skotos.net
 Revision:      1.2
 Generated:     Sun Sep 25 01:45:16 2011 on Jonkichi
 Last revision: Thu Aug 10 09:41:32 2006 by zwoc (EED)



(Do not modify #list# -- it is automatically constructed.)


-------------------------------------------------------------------------------------------------------
 lib:login:first-time (M) Say hello.
 lib:parse_period     (M) Convert a string expression (e.g. "an hour", "Wednesday", "the 12th", "the
                          twelfth", "the 12th of January", etc.) into a timestamp.
-------------------------------------------------------------------------------------------------------

*/
      </Core:Property>
      <Core:Property property="merry:lib:login:first-time">
         X[M] /*
 * D=Say hello.
 */
\$delay(5, TRUE, "aaaa");
if (\$actor."base:environment" == \$\{Mansion:rooms:Vestibule\} \&\& !\$actor."sys:gables:not-first-time") \{
    \$actor."sys:gables:not-first-time" = TRUE;
    EmitTo(\$actor, TAG("You are at the vestibule. To proceed, please do: " + LINK("go north", "go north", "command"), "imp"));
\}
      </Core:Property>
      <Core:Property property="merry:lib:parse_period">
         X[M] /*
 * D=Convert a string expression (e.g. "an hour", "Wednesday", "the 12th", "the twelfth", "the 12th of January", etc.) into a timestamp.
 *
 * Author: Kalle Alm
 * Email:  kalle@mortalis.skotos.net
 * Since:  Jan 12 06:48, 2006
 * State:  EXPERIMENTAL
 */
mapping weeks, months, rels;
string expr, *s, suff;
int i, ix, num, len;

weeks = this.weeks;
months = this.months;
rels = this.rels;

/* We start by ripping out redundant characters. Dots, exclamation marks, etc. */
expr = lower_case(\$period);
ix   = strlen(expr);
for (i = 0; i \< ix; i++)
    if ((expr[i] \< 'a' \|\| expr[i] \> 'z') \&\&
        (expr[i] \< '0' \|\| expr[i] \> '9') \&\&
        expr[i] != ' ' \&\& expr[i] != '/' \&\& expr[i] != '-') \{
        expr = expr[..i-1] + expr[i+1..];
        ix--;
        i--;
    \}

/* If relative, replace common phrases (e.g. "a few", "a couple", "an") with numericals (2, 3, 1) */
if (\$relative)
    expr = replace_strings(" " + expr + " ", this.relative_phrases...);

/*
 * Then we replace textual ordinals (first) into numericals (1), and rip out redundancy,
 * like 'and', 'the' and 'of'.
 * We also remove redundant suffixes, such as 'st', 'nd', 'rd', 'th'.
 * We also replace weekdays and month names with expressions.
 */
s  = explode(expr, " ");
ix = sizeof(s);
for (i = 0; i \< ix; i++) \{
    if (s[i] == "" \|\| s[i] == "and" \|\| s[i] == "the" \|\| s[i] == "of") \{
        s[i] = nil;
    \} else if (rels[s[i]]) s[i] = rels[s[i]];
      else if (\$relative) \{
        if ((num = cardinal(s[i])) != -1) \{
            s[i] = Str(num);
        \}
    \} else if (sscanf(s[i], "%d/%d", \$d, \$m) == 2) \{
        s[i] = "d" + \$d;
        s += (\{ "m" + \$m \});
    \} else if (s[i][0] == '-' \&\& strlen(s[i]) == 3) \{
        s[i] = "y" + "20" + s[i][1..];
    \} else if (cardinal(s[i]) != -1 \&\& Int(s[i]) \> 2000 \&\& Int(s[i]) \< 2030) \{
        s[i] = "y" + s[i];
    \} else if (s[i] == "next") s[i] = "+";
      else \{
        len = strlen(s[i]);
        if ((num = ordinal(s[i])) != -1) \{
            /* Found an ordinal. */
            s[i] = "d" + num;
        \} else if (weeks[s[i]]) \{
            s[i] = weeks[s[i]];
        \} else if (months[s[i]]) \{
            s[i] = months[s[i]];
        \}
    \}
\}
s -= (\{ nil \});

if (\$relative) \{
    /* Construct along the lines of (\{ "1", "h", "30", "m" \}) (for 1h30m) or similar. */
    mixed m;
    mapping x;
    string *v;
    float *mul;
    int *stamp, now, indic;
    now   = time();
            /* year,          month,          week,    day,          hour,          minute */
    mul   = (\{ 30.4166667,    4.285714286,    7.0,     24.0,         60.0,          60.0 \});
    x     = ([ "y" : 0,       "m" : 1,        "w" : 2, "d" : 3,      "h" : 4,       "m" : 5 ]);
    v     = (\{ "y",           "m",            "w",     "d",          "h",           "m" \});
    stamp = (\{ get_year(now), get_month(now), 0,       get_day(now), get_hour(now), get_minute(now) \});

    ix = sizeof(s);
    for (i = 0; i \< ix; i++) \{
        m = ascii_to_mixed(s[i]);
        if (typeof(m) == T_INT) m = (float)m;
        if (typeof(m) == T_FLOAT) \{
            /* We've got a number. Let's see what indication we have for that number. */
            i++;
            if (i \< ix) \{
                if (x[s[i]] != nil) \{
                    indic = x[s[i]];
                    if (m \< 1.0) \{
                        m *= mul[x[s[i]]];
                        indic++;
                    \}
                    if (indic \< sizeof(v)) \{

                    \}
                \}
            \} else return nil; /* Return failure. */
        \}
    \}
\} else \{
    /* Construct along the lines of (\{ "w2", "+", "w" \}) (until wednesday next week) or similar. */
\}

return s;
/*
 * ChangeLog [
 *    Change(Jan 12 06:48, 2006; Zwoc)=Added script to codebase.
 * ]
 */
      </Core:Property>
      <Core:Property property="months">
         ([ "apr":"m4", "april":"m4", "aug":"m8", "august":"m8", "dec":"m12", "december":"m12", "feb":"m2", "february":"m2", "jan":"m1", "january":"m1", "jul":"m7", "july":"m7", "jun":"m6", "june":"m6", "mar":"m3", "march":"m3", "may":"m5", "nov":"m11", "november":"m11", "oct":"m10", "october":"m10", "sep":"m9", "sept":"m9", "september":"m9" ])
      </Core:Property>
      <Core:Property property="relative_phrases">
         (\{ "a few", "2", "a couple", "3", "several", "4", "a cpl", "3", "half an", ".5", "a half", ".5", " an ", " 1 " \})
      </Core:Property>
      <Core:Property property="rels">
         ([ "hour":"h", "hours":"h", "hrs":"h", "min":"m", "mins":"m", "minute":"m", "minutes":"m", "mnth":"M", "month":"M", "months":"M", "week":"w", "weeks":"w", "wk":"w", "wks":"w" ])
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1137067007, "???", "P", 1137067195, "???", "P", 1137067221, "???", "P", 1137067411, "zwoc", "S", 1137067495, "zwoc", "S", 1137067721, "zwoc", "S", 1137067784, "zwoc", "S", 1137067868, "???", "P", 1137067896, "???", "P", 1137067910, "???", "P", 1137067926, "???", "P", 1137067942, "???", "P", 1137068006, "???", "P", 1137068444, "???", "P", 1137068756, "???", "P", 1137069205, "???", "P", 1137069457, "zwoc", "S", 1137069583, "???", "P", 1137069639, "???", "P", 1137069851, "zwoc", "S", 1137069858, "zwoc", "S", 1137069889, "???", "P", 1137069969, "???", "P", 1137070139, "zwoc", "S", 1137070144, "zwoc", "S", 1137070154, "???", "P", 1137083510, "???", "P", 1137083554, "???", "P", 1137083864, "???", "P", 1137084054, "???", "P", 1137084088, "???", "P", 1137084316, "???", "P", 1137084820, "???", "P", 1137085967, "???", "P", 1155217292, "zwoc", "EED" \})
      </Core:Property>
      <Core:Property property="weeks">
         ([ "fri":"w4", "friday":"w4", "mon":"w0", "monday":"w0", "sat":"w5", "saturday":"w5", "sun":"w6", "sunday":"w6", "thu":"w3", "thur":"w3", "thursday":"w3", "tue":"w1", "tues":"w1", "tuesday":"w1", "wed":"w2", "wednesday":"w2" ])
      </Core:Property>
      <Core:Property property="{author}">"Kalle Alm"</Core:Property>
      <Core:Property property="{email}">
         "kalle@mortalis.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1155217292
      </Core:Property>
      <Core:Property property="{sub_rev}">2</Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
