<object clone="/usr/SkotOS/obj/verb" owner="TextIF">
  <Socials:Verb imp="@ooc" second="say" third="says" evoke="required" audible="false" private="false" secret="false" obscured="false" target-abstracts="false" disabled="false" ooc="false" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects>
      <Socials:SocialObject role="iob" direct="false" single="false" raw="false" requirement="optional" distance="far">
        <Socials:SocObPreps>
          <Socials:SocObPrep prep="to"/>
        </Socials:SocObPreps>
        <Socials:SocObFilters/>
      </Socials:SocialObject>
    </Socials:SocialObjects>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="merry:global:command">
         X[M] string advspc;
NRef target;

/* (Kalle) Evoke is required; commenting away this useless check.
if (!\$evoke) \{
  return TRUE;
\}
*/

/* (Kalle) Removed silly OOC usage statistics crap, since it was CM only, and moved this to Neoct for x-game purposes. */
/* Silly OOC Usage Statistic Code -- Aziel */
/* \$gamedb = \$\{Marrach:Data:GameDB\};
\$usage  = \$gamedb."mapping:oocusage";
\$acct   = \$actor."udat:name";

if (!\$usage[\$acct]) \{
  \$usage += ([ \$acct:1 ]);
  \$gamedb."mapping:oocusage" = \$usage;
\} else \{
  \$total = \$usage[\$acct];
  \$total++;
  \$usage[\$acct] = nil;
  \$usage += ([ \$acct:\$total ]);
  \$gamedb."mapping:oocusage" = \$usage;
\} */

/* All Done */


advspc = "";

if (\$adverb) \{
  if (\$adverb == "importantly")
    \$override = TRUE;
  else
    advspc = \$adverb + " ";
\}

if (!sizeof(\$roles)) \{
  int i, sz;
  object *inv;
  string msg;

  inv  = \$actor."base:environment"."base:inventory";
  inv -= (\{ \$actor \});
  sz   = sizeof(inv);
  msg  = "OOC -- " + Describe(\$actor) + " " + advspc + "says, " + \$evoke + "\\n";

  EmitTo(\$actor, "OOC -- You " + advspc + "say, " + \$evoke + "\\n");
  for (i = 0; i \< sz; i++)
    if (inv[i]."udat:possessed" \&\&
         (!inv[i]."skotos:ignore-ooc" \|\|
          \$override))
      EmitTo( inv[i], msg );
  if (\$override)
    \$actor."audit:last_ooc_override" = (\{ \$actor."base:environment", time(), \$evoke \});
  return FALSE;
\}

if (sizeof(\$iob) \> 1) \{
  EmitTo(\$actor, "Please OOC only to one object at a time.\\n");
  return FALSE;
\}

target = \$iob[0];
EmitTo(\$actor, "OOC -- You " + advspc + "say to " +
       Describe(target, \$actor, \$actor) + ", " + \$evoke + "\\n");
if (\$actor != NRefOb(target)) \{
  EmitTo(NRefOb(target), "OOC -- " +
         Describe(\$actor, nil, NRefOb(target)) + " " + advspc +
         " says to " + Describe(target, \$actor, NRefOb(target)) +
         ", " + \$evoke + "\\n");
\}

\{
  int i, sz;
  object *inv;
  string msg;

  inv  = \$actor."base:environment"."base:inventory";
  inv -= (\{ \$actor, NRefOb( target ) \});
  sz   = sizeof(inv);
  msg  = "OOC -- " + Describe(\$actor) + " " + advspc + "says to " + Describe(target, \$actor, nil, STYLE_PRONOUN) + ", " + \$evoke + "\\n";

  for (i = 0; i \< sz; i++)
    if (inv[i]."udat:possessed" \&\&
         (!inv[i]."skotos:ignore-ooc" \|\|
          \$override))
      EmitTo( inv[i], msg );
\}
/* EmitIn(Get(\$actor, "base:environment"), "OOC -- " +
       Describe(\$actor, nil, nil) + " " + advspc + "says to " +
       Describe(target, \$actor, nil, STYLE_PRONOUN) + ", " +
       \$evoke + "\\n", NRefOb(target), \$actor); */

/*
 * Log override, if set.
 */
if (\$override)
  \$actor."audit:last_ooc_override" = (\{ \$actor."base:environment", time(), \$evoke \});
      </Core:Property>
      <Core:Property property="merry:lib:toggle">
         X[M] /*

  D=Toggle OOC visibility.

*/

\$ignore_ooc                = !\$actor."skotos:ignore-ooc";
\$actor."skotos:ignore-ooc" = \$ignore_ooc;

EmitTo(\$actor, PRE("OOC " + (\$ignore_ooc ? "DISABLED" : "ENABLED")));
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1073608699, "sorcha", "E", 1073608950, "sorcha", "E", 1080310591, "tangerine", "E", 1081002085, "kargh", "E", 1081743436, "kargh", "E", 1081743449, "kargh", "X", 1081743942, "kargh", "P", 1081743950, "kargh", "P", 1081744020, "kargh", "P", 1081791248, "kargh", "P", 1081791457, "kargh", "P", 1097538557, "zwoc", "P", 1097538609, "zwoc", "P", 1097539176, "zwoc", "P", 1097539340, "zwoc", "P", 1097539663, "zwoc", "P", 1097539781, "zwoc", "P", 1097539800, "zwoc", "P", 1097551701, "zwoc", "P", 1097564002, "zwoc", "P", 1097564031, "zwoc", "P", 1097564410, "zwoc", "P", 1097564427, "zwoc", "P" \})
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
