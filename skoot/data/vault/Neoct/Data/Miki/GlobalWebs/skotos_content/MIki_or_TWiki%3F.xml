<object clone="/obj/properties" owner="TextIF">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="diff:1">
         (\{ (\{ "+\<h1 style=\\"text-align: center;\\"\>MIki or TWiki?\</h1\> ", "+ \<span style=\\"font-style: italic;\\"\>(This page is expected to change as time moves on. But I am human (surprise!) and will forget about it, so \&lt;a href=\\"mailto:kalle@mortalis.skotos.net\\"\&gt;remind me\&lt;/a\&gt; if it looks sadly outdated.)\</span\>", "+ ", "+ A very important decision to make is whether to use MIki or TWiki. I say \\"whether\\", because I do \<span style=\\"font-weight: bold;\\"\>not\</span\> recommend using both. A lot of games out there already have all their content on TWiki. These people might want to stay that way, or convert into using MIki. However, if you have been using TWiki extensively, my recommendation at this point is \<span style=\\"font-weight: bold;\\"\>to keep using TWiki!\</span\>", "+ \<h2\>Good is in the integration.\</h2\> MIki is intended as a replacement for TWiki. It is integrated into Skotos, while TWiki is a separated system. By being integrated, it supports inline SAM and, inherently thus, Merry; its support is confirmed by my presence and activity in Skotos, a fact that is unlikely to change anytime soon. This means that by using MIki, you can suggest improvements or, if you are Merrywise, you can even \<span style=\\"font-weight: bold;\\"\>make these improvements yourself\</span\>. Since MIki is 100% SAM/Merry, it is ultimately up to us to define how great a system it is, and by contributing effort into its development, you can speed up the process of making it a no-brainer decision whether games use MIki or TWiki. (We want them to use MIki .. neh?)", "+ ", "+ What MIki needs most urgently right now is:", "+ \<ol\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Portability.\</span\> Games need to be able to port their TWiki documents into MIki, converting UglyWords into !pretty_words. Preferably, people should be able to port entire webs into MIki but individual pages is a start. ", "+   \</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Raw-Edit-Mode.\</span\> A non-WYSIWYG mode for editing complex pages with lots of HSM (\<span style=\\"font-weight: bold;\\"\>H\</span\>TML/\<span style=\\"font-weight: bold;\\"\>S\</span\>AM/\<span style=\\"font-weight: bold;\\"\>M\</span\>erry). Right now, it IS possible to inject HSM in the WYSIWYG-mode, but this is by no means recommended.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Preview.\</span\> A preview-feature is needed to see if a doc looks OK before saving.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Page or web templates.\</span\> When I wrote the NIP documentation, I seriously needed a set of templates that I could use, efficiently, to define a page. MIki needs a way to create templates and define a page as using a particular template. Templates would be a programmatic description of a web form. See [I want templates] for more information.", "+   \</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Table-of-contents feature.\</span\> The one and only feature in TWiki that I remotely approved of was the %TOC% which, while buggy like a rhino on dream-snow, would fairly efficiently create a table of contents that gave a great overview, with \\"auto-links\\" to the various headers in the doc.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Cascading style sheets per page/web.\</span\> It should be possible to create a CSS section for a web or a page which redefined various variables to the web owners' taste. Nice if it was an actual tool but a simple write-your-CSS-clauses-here would be better than nothing.", "+   \</li\> \</ol\> \<h2\>Why would I use MIki?\</h2\> A few reasons why you would use MIki over anything else:", "+ \<ul\>   \<li\>MIki is integrated into Skotos. You don't need to go somewhere else to access your pages, nor do you need to keep track of yet another set of logins/passes. Being logged into Skotos is enough to access any MIki web you have access to.", "+   \</li\>   \<li\>MIki is your friend. Some like the slew of quirky Wiki-codes, some don't. Regardless, they pose yet another thing people need to learn in a world where WYSIWYG is a feature. The whole concept is, IMNSHO, outdated and needs to be replaced. The only Wiki-code thing that I have chosen to keep in MIki is the only useful one, which is \\"linking to another page\\".\</li\>   \<li\>MIki speaks HSM (\<span style=\\"font-weight: bold;\\"\>H\</span\>TML/\<span style=\\"font-weight: bold;\\"\>S\</span\>AM/\<span style=\\"font-weight: bold;\\"\>M\</span\>erry). You can inject SAM or Merry directly into any page anywhere. You can make a MIki page bring up an auto-generated status report of people's individual projects. Some in-game command (such as +myproject) could be used to easily describe what you are currently working on, and this could then be prettily displayed in a MIki page somewhere. Compare that to manually editing a \\"EveryonesIndividualProjects\\" page on TWiki every time you move on to something else.", "+  \</li\> \</ul\> ", "+ ", "+ ", "+ " \}), 1135012406, "zwoc" \})
      </Core:Property>
      <Core:Property property="diff:2">
         (\{ (\{ "=11", "- \<ul\>   \<li\>MIki is integrated into Skotos. You don't need to go somewhere else to access your pages, nor do you need to keep track of yet another set of logins/passes. Being logged into Skotos is enough to access any MIki web you have access to.", "+ \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is integrated into Skotos. \</span\>You don't need to go somewhere else to access your pages, nor do you need to keep track of yet another set of logins/passes. Being logged into Skotos is enough to access any MIki web you have access to.", "-   \</li\>   \<li\>MIki is your friend. Some like the slew of quirky Wiki-codes, some don't. Regardless, they pose yet another thing people need to learn in a world where WYSIWYG is a feature. The whole concept is, IMNSHO, outdated and needs to be replaced. The only Wiki-code thing that I have chosen to keep in MIki is the only useful one, which is \\"linking to another page\\".\</li\>   \<li\>MIki speaks HSM (\<span style=\\"font-weight: bold;\\"\>H\</span\>TML/\<span style=\\"font-weight: bold;\\"\>S\</span\>AM/\<span style=\\"font-weight: bold;\\"\>M\</span\>erry). You can inject SAM or Merry directly into any page anywhere. You can make a MIki page bring up an auto-generated status report of people's individual projects. Some in-game command (such as +myproject) could be used to easily describe what you are currently working on, and this could then be prettily displayed in a MIki page somewhere. Compare that to manually editing a \\"EveryonesIndividualProjects\\" page on TWiki every time you move on to something else.", "+   \</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is your friend. \</span\>Some like the slew of quirky Wiki-codes, some don't. Regardless, they pose yet another thing people need to learn in a world where WYSIWYG is a feature. The whole concept is, IMNSHO, outdated and needs to be replaced. The only Wiki-code thing that I have chosen to keep in MIki is the only useful one, which is \\"linking to another page\\".\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki speaks HSM\</span\> (\<span style=\\"font-weight: bold;\\"\>H\</span\>TML/\<span style=\\"font-weight: bold;\\"\>S\</span\>AM/\<span style=\\"font-weight: bold;\\"\>M\</span\>erry). You can inject SAM or Merry directly into any page anywhere. You can make a MIki page bring up an auto-generated status report of people's individual projects. Some in-game command (such as +myproject) could be used to easily describe what you are currently working on, and this could then be prettily displayed in a MIki page somewhere. Compare that to manually editing a \\"EveryonesIndividualProjects\\" page on TWiki every time you move on to something new.\</li\>\<li\>\<span style=\\"font-weight: bold;\\"\>MIki is maintained locally.\</span\> While TWiki has oodles and bunches of plugins that no doubt make MIki pale in comparison, it is that issue of 1) consuming Skotos eng-time (Nino, Shannon, etc.) in putting those into the TWiki, and 2) finding those plugins that we need. MIki is and will always remain simple and fast, rather than featureful and slow-going, but this doesn't mean we can't make the simpleness as useful as can be imagined. Since MIki is local, however, it gives you and me the ability to write code for MIki. By putting inline SAM into a MIki page, you are, technically, writing code for MIki, but you can do more than that, such as modifying the code itself, or adding code to the existing codebase (just be careful not to put anything where it will be sync-wiped!). If you want to work on it, talk to me.", "-  \</li\> \</ul\> ", "+   \</li\>  \</ul\> Some further examples of what MIki can do are:", "+ \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Word copy-paste. \</span\>You can write a doc up in Word and then copy-paste the whole thing into MIki directly. There are some bugs with this that are being sorted out but they are \<span style=\\"font-weight: bold;\\"\>very\</span\> minor.\</li\> \</ul\> \<h2\>Enough of that. Why SHOULDN'T I use MIki?\</h2\>  Alas, there are instances where you shouldn't use MIki. Here's a list of things where MIki goes wrong:", "+ \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is integrated.\</span\> This is good and bad. It's mostly good, but it does mean that, whenever someone uses MIki on your game, a small portion of the resources (hardware, software) on your server go into processing MIki stuff. These resources could instead be used to making your game run smoother, and is as such a factor to consider. MIki is, as previously stated, aimed to be simple and fast, and it is. It will never consume more than a tiny fraction of those same resources, unless you do crazy stuff like making \<span style=\\"font-weight: bold;\\"\>huge\</span\> pages or injecting insane/complicated SAM/Merry into those pages. In short, you do run the risk of clogging your game down with Yet Another System. I am confident that this, in fact, is not the case, but I feel it has to be said anyway. In the long run, MIki will not make your game lag, no.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIkimation wants to be free.\</span\> And it is. It's very free, in fact, as anyone with +-powers automatically has access to every single MIki page on your server. If you want a plotters-web with protected data -- protected from your fellow staffers that is -- then MIki will not be good. Of course, you do have the alternative of saying \\"don't visit the plotters web, non-plotters\\", and trusting your team not to (or, alternatively, checking the MIki logs to find any offenders; but the logs in turn can be tampered with), but if you feel ultimately that you need more security than that, MIki will never be a viable alternative for you.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is new. New is fun, but buggy.\</span\> MIki is \\"as is\\", with no warranties. And MIki is untested and new and experimental and, while the chances are small, it might blow up in your face when you one day log in to read that Very Important Page that you need desperately. Over time, this will change, but for now, this is a reason not to use MIki seriously. If you think the system's superiority in usefulness is worth the risk, then by god, go for it. Without people like you, MIki will \<span style=\\"font-weight: bold;\\"\>never\</span\> leave that \\"experimental\\" stage.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Your game already has TWiki content.\</span\> At this point, there is no easy way to \\"port\\" TWiki\&amp;rarr;MIki. Thus, alas, if you have a lot of content on TWiki you should probably keep working on TWiki for now. Copy-pasting your TWiki-web into MIki is     \<span style=\\"font-weight: bold;\\"\>a bad idea!!!!!!\</span\> UglyWords, Wiki-tags, etc. will all screw it up majorly without heavy revising. Trust me on this.", "+   \</li\> \</ul\>  ", "=1", "- ", "- " \}), 1135014531, "zwoc" \})
      </Core:Property>
      <Core:Property property="diff:3">
         (\{ (\{ "=1", "- \<span style=\\"font-style: italic;\\"\>(This page is expected to change as time moves on. But I am human (surprise!) and will forget about it, so \&lt;a href=\\"mailto:kalle@mortalis.skotos.net\\"\&gt;remind me\&lt;/a\&gt; if it looks sadly outdated.)\</span\>", "+ \<span style=\\"font-style: italic;\\"\>(This page is expected to change as time moves on. But I am human (surprise!) and will forget about it, so \<a href=\\"mailto:kalle@mortalis.skotos.net\\"\>remind me\</a\> if it looks sadly outdated.)\</span\>", "=12", "- \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Word copy-paste. \</span\>You can write a doc up in Word and then copy-paste the whole thing into MIki directly. There are some bugs with this that are being sorted out but they are \<span style=\\"font-weight: bold;\\"\>very\</span\> minor.\</li\> \</ul\> \<h2\>Enough of that. Why SHOULDN'T I use MIki?\</h2\>  Alas, there are instances where you shouldn't use MIki. Here's a list of things where MIki goes wrong:", "+ \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Word copy-paste. \</span\>You can write a doc up in Word and then copy-paste the whole thing into MIki directly. There are some bugs with this that are being sorted out but they are \<span style=\\"font-weight: bold;\\"\>very\</span\> minor. \<span style=\\"font-style: italic;\\"\>Update: this has now been addressed but I'll leave this here for a while anyway.\</span\>", "- \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is integrated.\</span\> This is good and bad. It's mostly good, but it does mean that, whenever someone uses MIki on your game, a small portion of the resources (hardware, software) on your server go into processing MIki stuff. These resources could instead be used to making your game run smoother, and is as such a factor to consider. MIki is, as previously stated, aimed to be simple and fast, and it is. It will never consume more than a tiny fraction of those same resources, unless you do crazy stuff like making \<span style=\\"font-weight: bold;\\"\>huge\</span\> pages or injecting insane/complicated SAM/Merry into those pages. In short, you do run the risk of clogging your game down with Yet Another System. I am confident that this, in fact, is not the case, but I feel it has to be said anyway. In the long run, MIki will not make your game lag, no.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIkimation wants to be free.\</span\> And it is. It's very free, in fact, as anyone with +-powers automatically has access to every single MIki page on your server. If you want a plotters-web with protected data -- protected from your fellow staffers that is -- then MIki will not be good. Of course, you do have the alternative of saying \\"don't visit the plotters web, non-plotters\\", and trusting your team not to (or, alternatively, checking the MIki logs to find any offenders; but the logs in turn can be tampered with), but if you feel ultimately that you need more security than that, MIki will never be a viable alternative for you.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is new. New is fun, but buggy.\</span\> MIki is \\"as is\\", with no warranties. And MIki is untested and new and experimental and, while the chances are small, it might blow up in your face when you one day log in to read that Very Important Page that you need desperately. Over time, this will change, but for now, this is a reason not to use MIki seriously. If you think the system's superiority in usefulness is worth the risk, then by god, go for it. Without people like you, MIki will \<span style=\\"font-weight: bold;\\"\>never\</span\> leave that \\"experimental\\" stage.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Your game already has TWiki content.\</span\> At this point, there is no easy way to \\"port\\" TWiki\&amp;rarr;MIki. Thus, alas, if you have a lot of content on TWiki you should probably keep working on TWiki for now. Copy-pasting your TWiki-web into MIki is     \<span style=\\"font-weight: bold;\\"\>a bad idea!!!!!!\</span\> UglyWords, Wiki-tags, etc. will all screw it up majorly without heavy revising. Trust me on this.", "+\</li\> \</ul\> \<h2\>Enough of that. Why SHOULDN'T I use MIki?\</h2\>  Alas, there are instances where you shouldn't use MIki. Here's a list of things where MIki goes wrong:", "+ \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is integrated.\</span\> This is good and bad. It's mostly good, but it does mean that, whenever someone uses MIki on your game, a small portion of the resources (hardware, software) on your server go into processing MIki stuff. These resources could instead be used to making your game run smoother, and is as such a factor to consider. MIki is, as previously stated, aimed to be simple and fast, and it is. It will never consume more than a tiny fraction of those same resources, unless you do crazy stuff like making \<span style=\\"font-weight: bold;\\"\>huge\</span\> pages or injecting insane/complicated SAM/Merry into those pages. In short, you do run the risk of clogging your game down with Yet Another System. I am confident that this, in fact, is not the case, but I feel it has to be said anyway. In the long run, MIki will not make your game lag, no.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIkimation wants to be free.\</span\> And it is. It's very free, in fact, as anyone with +-powers automatically has access to every single MIki page on your server. If you want a plotters-web with protected data -- protected from your fellow staffers that is -- then MIki will not be good. Of course, you do have the alternative of saying \\"don't visit the plotters web, non-plotters\\", and trusting your team not to (or, alternatively, checking the MIki logs to find any offenders; but the logs in turn can be tampered with), but if you feel ultimately that you need more security than that, MIki will never be a viable alternative for you.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is new. New is fun, but buggy.\</span\> MIki is \\"as is\\", with no warranties. And MIki is untested and new and experimental and, while the chances are small, it might blow up in your face when you one day log in to read that Very Important Page that you need desperately. Over time, this will change, but for now, this is a reason not to use MIki seriously. If you think the system's superiority in usefulness is worth the risk, then by god, go for it. Without people like you, MIki will \<span style=\\"font-weight: bold;\\"\>never\</span\> leave that \\"experimental\\" stage.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Your game already has TWiki content.\</span\> At this point, there is no easy way to \\"port\\" TWiki\&rarr;MIki. Thus, alas, if you have a lot of content on TWiki you should probably keep working on TWiki for now. Copy-pasting your TWiki-web into MIki is     \<span style=\\"font-weight: bold;\\"\>a bad idea!!!!!!\</span\> UglyWords, Wiki-tags, etc. will all screw it up majorly without heavy revising. Trust me on this.", "=2" \}), 1142285805, "zwoc" \})
      </Core:Property>
      <Core:Property property="invref">
         ([ "I_want_templates":1 ])
      </Core:Property>
      <Core:Property property="page">
         "\<h1 style=\\"text-align: center;\\"\>MIki or TWiki?\</h1\> \<sbr/\> \<span style=\\"font-style: italic;\\"\>(This page is expected to change as time moves on. But I am human (surprise!) and will forget about it, so \<a href=\\"mailto:kalle@mortalis.skotos.net\\"\>remind me\</a\> if it looks sadly outdated.)\</span\>\<sbr/\> \<sbr/\> A very important decision to make is whether to use MIki or TWiki. I say \\"whether\\", because I do \<span style=\\"font-weight: bold;\\"\>not\</span\> recommend using both. A lot of games out there already have all their content on TWiki. These people might want to stay that way, or convert into using MIki. However, if you have been using TWiki extensively, my recommendation at this point is \<span style=\\"font-weight: bold;\\"\>to keep using TWiki!\</span\>\<sbr/\> \<h2\>Good is in the integration.\</h2\> MIki is intended as a replacement for TWiki. It is integrated into Skotos, while TWiki is a separated system. By being integrated, it supports inline SAM and, inherently thus, Merry; its support is confirmed by my presence and activity in Skotos, a fact that is unlikely to change anytime soon. This means that by using MIki, you can suggest improvements or, if you are Merrywise, you can even \<span style=\\"font-weight: bold;\\"\>make these improvements yourself\</span\>. Since MIki is 100% SAM/Merry, it is ultimately up to us to define how great a system it is, and by contributing effort into its development, you can speed up the process of making it a no-brainer decision whether games use MIki or TWiki. (We want them to use MIki .. neh?)\<sbr/\> \<sbr/\> What MIki needs most urgently right now is:\<sbr/\> \<ol\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Portability.\</span\> Games need to be able to port their TWiki documents into MIki, converting UglyWords into !pretty_words. Preferably, people should be able to port entire webs into MIki but individual pages is a start. \<sbr/\>   \</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Raw-Edit-Mode.\</span\> A non-WYSIWYG mode for editing complex pages with lots of HSM (\<span style=\\"font-weight: bold;\\"\>H\</span\>TML/\<span style=\\"font-weight: bold;\\"\>S\</span\>AM/\<span style=\\"font-weight: bold;\\"\>M\</span\>erry). Right now, it IS possible to inject HSM in the WYSIWYG-mode, but this is by no means recommended.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Preview.\</span\> A preview-feature is needed to see if a doc looks OK before saving.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Page or web templates.\</span\> When I wrote the NIP documentation, I seriously needed a set of templates that I could use, efficiently, to define a page. MIki needs a way to create templates and define a page as using a particular template. Templates would be a programmatic description of a web form. See [I want templates] for more information.\<sbr/\>   \</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Table-of-contents feature.\</span\> The one and only feature in TWiki that I remotely approved of was the %TOC% which, while buggy like a rhino on dream-snow, would fairly efficiently create a table of contents that gave a great overview, with \\"auto-links\\" to the various headers in the doc.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Cascading style sheets per page/web.\</span\> It should be possible to create a CSS section for a web or a page which redefined various variables to the web owners' taste. Nice if it was an actual tool but a simple write-your-CSS-clauses-here would be better than nothing.\<sbr/\>   \</li\> \</ol\> \<h2\>Why would I use MIki?\</h2\> A few reasons why you would use MIki over anything else:\<sbr/\> \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is integrated into Skotos. \</span\>You don't need to go somewhere else to access your pages, nor do you need to keep track of yet another set of logins/passes. Being logged into Skotos is enough to access any MIki web you have access to.\<sbr/\>   \</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is your friend. \</span\>Some like the slew of quirky Wiki-codes, some don't. Regardless, they pose yet another thing people need to learn in a world where WYSIWYG is a feature. The whole concept is, IMNSHO, outdated and needs to be replaced. The only Wiki-code thing that I have chosen to keep in MIki is the only useful one, which is \\"linking to another page\\".\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki speaks HSM\</span\> (\<span style=\\"font-weight: bold;\\"\>H\</span\>TML/\<span style=\\"font-weight: bold;\\"\>S\</span\>AM/\<span style=\\"font-weight: bold;\\"\>M\</span\>erry). You can inject SAM or Merry directly into any page anywhere. You can make a MIki page bring up an auto-generated status report of people's individual projects. Some in-game command (such as +myproject) could be used to easily describe what you are currently working on, and this could then be prettily displayed in a MIki page somewhere. Compare that to manually editing a \\"EveryonesIndividualProjects\\" page on TWiki every time you move on to something new.\</li\>\<li\>\<span style=\\"font-weight: bold;\\"\>MIki is maintained locally.\</span\> While TWiki has oodles and bunches of plugins that no doubt make MIki pale in comparison, it is that issue of 1) consuming Skotos eng-time (Nino, Shannon, etc.) in putting those into the TWiki, and 2) finding those plugins that we need. MIki is and will always remain simple and fast, rather than featureful and slow-going, but this doesn't mean we can't make the simpleness as useful as can be imagined. Since MIki is local, however, it gives you and me the ability to write code for MIki. By putting inline SAM into a MIki page, you are, technically, writing code for MIki, but you can do more than that, such as modifying the code itself, or adding code to the existing codebase (just be careful not to put anything where it will be sync-wiped!). If you want to work on it, talk to me.\<sbr/\>   \</li\>  \</ul\> Some further examples of what MIki can do are:\<sbr/\> \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Word copy-paste. \</span\>You can write a doc up in Word and then copy-paste the whole thing into MIki directly. There are some bugs with this that are being sorted out but they are \<span style=\\"font-weight: bold;\\"\>very\</span\> minor. \<span style=\\"font-style: italic;\\"\>Update: this has now been addressed but I'll leave this here for a while anyway.\</span\>\<sbr/\>\</li\> \</ul\> \<h2\>Enough of that. Why SHOULDN'T I use MIki?\</h2\>  Alas, there are instances where you shouldn't use MIki. Here's a list of things where MIki goes wrong:\<sbr/\> \<ul\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is integrated.\</span\> This is good and bad. It's mostly good, but it does mean that, whenever someone uses MIki on your game, a small portion of the resources (hardware, software) on your server go into processing MIki stuff. These resources could instead be used to making your game run smoother, and is as such a factor to consider. MIki is, as previously stated, aimed to be simple and fast, and it is. It will never consume more than a tiny fraction of those same resources, unless you do crazy stuff like making \<span style=\\"font-weight: bold;\\"\>huge\</span\> pages or injecting insane/complicated SAM/Merry into those pages. In short, you do run the risk of clogging your game down with Yet Another System. I am confident that this, in fact, is not the case, but I feel it has to be said anyway. In the long run, MIki will not make your game lag, no.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIkimation wants to be free.\</span\> And it is. It's very free, in fact, as anyone with +-powers automatically has access to every single MIki page on your server. If you want a plotters-web with protected data -- protected from your fellow staffers that is -- then MIki will not be good. Of course, you do have the alternative of saying \\"don't visit the plotters web, non-plotters\\", and trusting your team not to (or, alternatively, checking the MIki logs to find any offenders; but the logs in turn can be tampered with), but if you feel ultimately that you need more security than that, MIki will never be a viable alternative for you.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>MIki is new. New is fun, but buggy.\</span\> MIki is \\"as is\\", with no warranties. And MIki is untested and new and experimental and, while the chances are small, it might blow up in your face when you one day log in to read that Very Important Page that you need desperately. Over time, this will change, but for now, this is a reason not to use MIki seriously. If you think the system's superiority in usefulness is worth the risk, then by god, go for it. Without people like you, MIki will \<span style=\\"font-weight: bold;\\"\>never\</span\> leave that \\"experimental\\" stage.\</li\>   \<li\>\<span style=\\"font-weight: bold;\\"\>Your game already has TWiki content.\</span\> At this point, there is no easy way to \\"port\\" TWiki\&rarr;MIki. Thus, alas, if you have a lot of content on TWiki you should probably keep working on TWiki for now. Copy-pasting your TWiki-web into MIki is     \<span style=\\"font-weight: bold;\\"\>a bad idea!!!!!!\</span\> UglyWords, Wiki-tags, etc. will all screw it up majorly without heavy revising. Trust me on this.\<sbr/\>   \</li\> \</ul\>  \<sbr/\> "
      </Core:Property>
      <Core:Property property="reads">10</Core:Property>
      <Core:Property property="refback">
         ([ "index_":1 ])
      </Core:Property>
      <Core:Property property="rev">3</Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052066, "-", "SYNC" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
