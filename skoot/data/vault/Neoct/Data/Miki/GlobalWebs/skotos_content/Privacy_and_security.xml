<object clone="/obj/properties" owner="TextIF">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="page">
         "\<h1\>MIki Is Not Secure!\</h1\>\\r\\n\<p\>It isn't secure, because anyone with host powers on your game can\\r\\naccess all pages on it, and there is no secure way of stopping them\\r\\nfrom doing so. Functionality could be put in place to include by-user\\r\\npermissions, but this could easily be circumvented using WOE or Merry\\r\\nand as such, \<span style=\\"font-weight: bold;\\"\>MIki \</span\>is \<span style=\\"font-weight: bold;\\"\>not\</span\> secure. \<sbr/\>\\r\\n\</p\>\\r\\n\<p\>It is secure from your players, as it requires a person to be a host\\r\\nto enter it, but it is not secure, say, against nosy coders who visit\\r\\nthe game plotter web. If you need a secure, private web for\\r\\nplot-related things (or similar), you cannot use MIki.\<sbr/\>\\r\\n\</p\>\\r\\n\<p\>\<span style=\\"font-weight: bold;\\"\>MIki is good for:\<sbr/\>\\r\\n\</span\>\</p\>\\r\\n\<ul\>\\r\\n  \<li\>Creating Skotos-wide, server-wide or game-wide content, such as documenting systems or features, or creating project plans.\</li\>\\r\\n  \<li\>Maintaining a staff-wide/server-wide tab on things such as guide-tasks or system bugs or similar.\</li\>\\r\\n\</ul\>\\r\\n\<span style=\\"font-weight: bold;\\"\>MIki is NOT good for:\<sbr/\>\\r\\n\</span\>\\r\\n\<ul\>\\r\\n  \<li\>Maintaining data which is not supposed to be accessible by all members of staff.\</li\>\\r\\n\</ul\>\\r\\nMIki is a very powerful system, because it automatically includes SAM,\\r\\nwhich in turn includes Merry. For example, this is the value of\\r\\n\&lt;code\&gt;Data:info.server\&lt;/code\&gt;: \<span style=\\"font-weight: bold;\\"\>\$(Data:info.server)\</span\>\<sbr/\>\\r\\nAnd this is your username: \$(uname) and your UDat object is \$(udat).\<sbr/\>\\r\\n\<sbr/\>\\r\\nThe biggest drawback with using MIki is that it \<span style=\\"font-weight: bold;\\"\>consumes game resources\</span\>\\r\\nthat could otherwise be spent in running the game. I have intentionally\\r\\nwritten the code to be as \\"lightweight\\" as possible, excluding fancy\\r\\nstuff like dynamically loaded plugins and such. The result of this is a\\r\\nsimple but hopefully fast Wiki-tool. Maintaining large amounts of data\\r\\nwill inevitably, however, decrease the game performance.\<sbr/\>\\r\\n\<p\>\\r\\n\</p\>\\r\\n\\r\\n"
      </Core:Property>
      <Core:Property property="reads">2</Core:Property>
      <Core:Property property="refback">
         ([ "index_":1 ])
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052067, "-", "SYNC" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
