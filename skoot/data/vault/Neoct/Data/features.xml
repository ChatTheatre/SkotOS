<object clone="/obj/properties" owner="TextIF">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        Neoct:Data:features
 Maintainer:    Kalle Alm
 Email:         kalle@mortalis.skotos.net
 Revision:      1.7
 Generated:     Sun Mar 23 03:01:45 2008 on Castle Marrach
 Last revision: Thu Mar 20 10:47:28 2008 by zwoc (X)



(Do not modify #list# -- it is automatically constructed.)


-----------------------------------------------------------------------------------------------
 sam:host          (S) The staff host feature, used to customize staffer bodies.
 sam:trash         (S) Define how the destruction of trash in the game should be prioritized.
 sam:witness-hear  (S) Define what can be heard from a particular object's default detail.
 sam:witness-smell (S) Define what can be smelled from a particular object's default detail.
-----------------------------------------------------------------------------------------------

*/
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1123529245, "zwoc", "P", 1123529256, "zwoc", "P", 1123529278, "zwoc", "P", 1123529290, "zwoc", "P", 1123529846, "zwoc", "P", 1123529875, "zwoc", "P", 1123530180, "zwoc", "P", 1123530208, "zwoc", "P", 1123530278, "zwoc", "P", 1123530330, "zwoc", "P", 1123530356, "zwoc", "P", 1123530377, "zwoc", "P", 1123530399, "zwoc", "P", 1123530473, "zwoc", "P", 1123530495, "zwoc", "P", 1123530532, "zwoc", "P", 1123530552, "zwoc", "P", 1123530600, "zwoc", "P", 1123530634, "zwoc", "P", 1123532156, "zwoc", "P", 1123532220, "zwoc", "P", 1123532525, "zwoc", "P", 1123532603, "zwoc", "P", 1123532701, "zwoc", "P", 1123534654, "zwoc", "P", 1123534918, "zwoc", "P", 1123535556, "zwoc", "P", 1123536008, "zwoc", "P", 1123536030, "zwoc", "P", 1123536123, "zwoc", "P", 1123537381, "zwoc", "P", 1123538069, "zwoc", "P", 1123538248, "zwoc", "P", 1123538292, "zwoc", "P", 1123538395, "zwoc", "P", 1123539553, "zwoc", "P", 1123546323, "zwoc", "P", 1123547932, "christophera", "X", 1123548206, "christophera", "X", 1123548583, "christophera", "X", 1123548653, "christophera", "X", 1123548809, "christophera", "X", 1123549234, "christophera", "X", 1123549343, "christophera", "X", 1123549479, "christophera", "X", 1123549645, "christophera", "X", 1123549731, "christophera", "X", 1123550966, "christophera", "X", 1123550994, "christophera", "X", 1123551153, "zwoc", "P", 1125953206, "zwoc", "P", 1127425700, "zwoc", "P", 1127425721, "zwoc", "P", 1127425731, "zwoc", "P", 1127425740, "zwoc", "P", 1127425759, "zwoc", "P", 1127425795, "zwoc", "P", 1127425861, "zwoc", "P", 1127499808, "zwoc", "P", 1127499829, "zwoc", "P", 1127499835, "zwoc", "P", 1127505907, "zwoc", "P", 1127506269, "zwoc", "P", 1127506320, "zwoc", "P", 1127509477, "zwoc", "P", 1127509673, "zwoc", "P", 1127509861, "zwoc", "P", 1127509894, "zwoc", "P", 1127509926, "zwoc", "P", 1127510047, "zwoc", "P", 1127510309, "zwoc", "P", 1127760495, "zwoc", "P", 1128986356, "zwoc", "P", 1128991377, "zwoc", "P", 1203093600, "zwoc", "P", 1206022418, "zwoc", "P", 1206022456, "zwoc", "P", 1206023283, "zwoc", "P", 1206023310, "zwoc", "P", 1206023585, "zwoc", "P", 1206023646, "zwoc", "P", 1206023668, "zwoc", "P", 1206024448, "zwoc", "X" \})
      </Core:Property>
      <Core:Property property="sam:host">
         X[S] \<skotos:page description="The staff host feature, used to customize staffer bodies."/\>
\<h1\>Host!\</h1\>
\<h2\>\$(object-woename)\</h2\>
\<hr\>\</hr\>
\<em\>+feature host\</em\> is used to set various host-related properties in a character body, such as teleport messages, MGeneric-alteration overrides, etc.\<br/\>\<br/\>
\<hr/\>
\<feature-form\>
  \<table style="border: solid #000000 1px;"\>
    \<tr\>\<td colspan="2"\>
      \<b\>Miscellaneous:\</b\>\<br\>\</br\>
      These are some flags that can be set (or unset) to define how SkotOS, MGeneric, etc. behave in the character body:
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>StoryHost\</b\> -- if set, the body is regarded as a storyhost\<sbr/\>
      \<i\>(this prevent maker's mark in MGeneric, for example)\</i\>
    \</td\>
    \<td\>
      \<feature name="storyhost" noexport="1" property="storyhost" type="boolean"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Ignore alteration checks\</b\> -- if set, MGeneric will ignore alteration checks when crafting things
    \</td\>
    \<td\>
      \<feature name="ignorealterationchecks" noexport="1" property="alteration:ignorealterationchecks" type="boolean"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Room-entry message\</b\> -- if set, when you enter a room, the woename will be emitted to you
    \</td\>\<td\>
      \<feature name="roomentry" noexport="1" type="boolean-onset" value="\&lt;Lib:common\&gt;" property="merry:inherit:act-post:enter%host"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Room-teleport message\</b\> -- if set, when you teleport to a room, the woename will be emitted to you
    \</td\>\<td\>
      \<feature name="roomteleport" noexport="1" type="boolean-onset" value="\&lt;Lib:common\&gt;" property="merry:inherit:act-post:teleport%host"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Morpher\</b\> -- if set, your MGeneric morpher skill will be Grand Master
    \</td\>\<td\>
      \<feature name="morpher" noexport="1" type="boolean-onset" value="10" property="skill:morpher"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Sees magic\</b\> -- if set, certain magical items will provide additional descriptions
    \</td\>\<td\>
      \<feature name="seesmagic" noexport="1" type="boolean" property="skill:seesmagic"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Dark\</b\> -- if set, you will be invisible on the who list (same as using +dark)
    \</td\>\<td\>
      \<feature name="dark" noexport="1" type="boolean" property="theatre:notwhobody"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Rotter\</b\> -- if set, your body will rot foods and make drinks go stale rapidly\<sbr/\>
      What normally takes 24 hours will take you 1 minute (30 seconds from fresh to\<sbr/\>
      regular, then 30 seconds from regular to aged)
    \</td\>\<td\>
      \<feature name="rotter" noexport="1" type="boolean" property="sys:debug:food"/\>
    \</td\>\</tr\>
    \<tr\>\<td colspan="2"\>
      \<hr/\>
      \<b\>Appearance:\</b\>\<br\>\</br\>
      The appearance section contains titles, examine/look overrides and similar:
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Title\</b\> -- this is your character body's title
    \</td\>\<td\>
      \<feature name="title" noexport="1" type="string" property="trait:title"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Gait\</b\> -- this is your character body's gait (e.g. "scurries")
    \</td\>\<td\>
      \<feature name="gait" noexport="1" type="string" property="base:gait"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Look\</b\> -- if set to anything, this is the look description for your character
    \</td\>\<td\>
      \<feature void="none" layout="multiline" name="look" noexport="1" type="string" property="trait:override:look"/\>
    \</td\>\</tr\>
    \<tr\>\<td\>
      \<b\>Examine\</b\> -- if set to anything, this is the examine description for your character
    \</td\>\<td\>
      \<feature void="none" layout="multiline" name="examine" noexport="1" type="string" property="trait:override:examine"/\>
    \</td\>\</tr\>
    \<tr\>\<td colspan="2"\>
      \<hr/\>
      \<b\>Teleport message:\</b\>\<br\>\</br\>
      The teleport messages are special emits in characters that are displayed when they teleport around. It is divided into four separate strings of text:
    \</td\>\</tr\>
    \<tr\>\<td colspan="2"\>
      For you:
    \</td\>\</tr\>
    \<tr\>\<td\>\\\&middot; When you enter a room:\</td\>\<td\>\<feature noexport="1" name="teleportfirstin" property="msg:teleportinfirst"/\>\</td\>\</tr\>
    \<tr\>\<td\>\\\&middot; When you leave a room:\</td\>\<td\>\<feature noexport="1" name="teleportfirstout" property="msg:teleportoutfirst"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>
      For everyone else:
    \</td\>\</tr\>
    \<tr\>\<td\>\\\&middot; When you enter a room:\</td\>\<td\>\<feature noexport="1" name="teleportthirdin" property="msg:teleportinthird"/\>\</td\>\</tr\>
    \<tr\>\<td\>\\\&middot; When you leave a room:\</td\>\<td\>\<feature noexport="1" name="teleportthirdout" property="msg:teleportoutthird"/\>\</td\>\</tr\>
  \</table\>
\</feature-form\>\<br\>\</br\>\<br\>\</br\>
      </Core:Property>
      <Core:Property property="sam:trash">
         X[S] \<skotos:page description="Define how the destruction of trash in the game should be prioritized."/\>
\<h1\>Trash!\</h1\>
\<h2\>\$(object-woename)\</h2\>
\<hr\>\</hr\>
The "trash" feature is used to define how the Skotos \<a href="http://troll.skotos.net/twiki/bin/view/Builders/TrashSystem" target="_blank"\>TrashSystem\</a\> should prioritize the destruction of the various objects in-game.\<br/\>
\<feature-form\>
  \<table\>
    \<tr\>
      \<td\>\<b\>trash:now\</b\>\</td\>
      \<td\>\<feature name="trash_now" type="boolean" property="trash:now"/\>\</td\>
      \<td\> If trashed, these items are prioritized to be slayed in 7 days (good for blank scrolls, empty mugs, towels, etc.), otherwise 90 days (everything else)\</td\>
    \</tr\>
    \<tr\>
      \<td\>\<b\>trash:never\</b\>\</td\>
      \<td\>\<feature name="trash_never" type="boolean" property="trash:never"/\>\</td\>
      \<td\> Living trash-takers (janitors, servants) will not pick up these items, and they will not be moved or slayed if put in chutes, trashcans or refuse piles (good for plot objects, storypoint items, etc.) \</td\>
    \</tr\>
    \<tr\>
      \<td\>\<b\>trash:refuse\</b\>\</td\>
      \<td\>\<feature name="trash_refuse" type="boolean" property="trash:refuse"/\>\</td\>
      \<td\> Living trash-takers (janitors, servants) will refuse to accept this item, but chutes and trash cans and refuse piles, etc., will treat them regularly (good for player written objects like scrolls, books, signs, etc.) \</td\>
    \</tr\>
    \<tr\>
      \<td\>\<b\>trash:home\</b\>\</td\>
      \<td\>\<feature name="trash_home" type="object" property="trash:home"/\>\</td\>
      \<td\> When trashed, item will be teleported to woename instead (good for magic items, plot objects, etc.)\</td\>
    \</tr\>
    \<tr\>
      \<td colspan="3"\>\<i/\>\</td\>
    \</tr\>
  \</table\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sam:witness-hear">
         X[S] \<skotos:page description="Define what can be heard from a particular object's default detail."/\>
\<h1\>Witness-Hear!\</h1\>
\<h2\>\$(object-woename)\</h2\>
\<hr\>\</hr\>
\<em\>+feature witness-hear\</em\> is used to give the default detail of an object a SAM emit, after someone listens to or hears or uses another sense/hear action in the room where the object (or any spawn) is located. This also sets the sense/hear SAM emit if you sense/hear the object itself. \<br/\>\<strong\>NOTE:\</strong\>This witness-hear feature works only for objects inside a room -- if you set witness-hear on a room's default detail, it will not work, as in SkotOS rooms can't witness events inside themselves. In addition, if the item is in the inventory of a character, this witness-hear feature will not work either. Thus this feature works best on integrated/immobile objects.
\<feature-form\>
  \<table style="border: solid #000000 1px;"\>
  \<tr\>
    \<td colspan="2"\>\<b\>Emit (SAM)\</b\>\</td\>
    \<td\>\<feature noexport="1" name="hear_string_dob" property="details:default:description:react-post:sense/hear-dob" layout="multiline"\>X[S]\</feature\>\</td\>
  \</tr\>
  \</table\>
  \<feature noexport="1" force="1" name="hear_string_iob" property="details:default:description:react-post:sense/hear-iob" type="copy-feature" copy="hear_string_dob"/\>
  \<feature noexport="1" force="1" name="hear_string_iob_far" property="details:default:description:react-post:sense/hear-iob-far" type="copy-feature" copy="hear_string_dob"/\>
  \<feature void="0" force="1" noexport="1" name="scriptrunner" property="base:scriptrunner" type="data"\>1\</feature\>
  \<feature noexport="1" name="witness_inherit" property="merry:inherit:witness:sense/hear" type="data"\>\\\<Lib:common\\\>\</feature\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sam:witness-smell">
         X[S] \<skotos:page description="Define what can be smelled from a particular object's default detail."/\>
\<h1\>Witness-Smell!\</h1\>
\<h2\>\$(object-woename)\</h2\>
\<hr\>\</hr\>
\<em\>+feature witness-smell\</em\> is used to give the default detail of an object a SAM emit, after someone smells or sniffs or uses another sense/smell action in the room where the object (or any spawn) is located. This also sets the sense/smell SAM emit if you sense/smell the object itself. \<br/\>\<strong\>NOTE:\</strong\>This witness-smell feature works only for objects inside a room -- if you set witness-smell on a room's default detail, it will not work, as in SkotOS rooms can't witness events inside themselves. In addition, if the item is in the inventory of a character, this witness-smell feature will not work either. Thus this feature works best on integrated/immobile objects.
\<feature-form\>
  \<table style="border: solid #000000 1px;"\>
  \<tr\>
    \<td colspan="2"\>\<b\>Emit (SAM)\</b\>\</td\>
    \<td\>\<feature noexport="1" name="smell_string_dob" property="details:default:description:react-post:sense/smell-dob" layout="multiline"\>X[S]\</feature\>\</td\>
  \</tr\>
  \</table\>
  \<feature noexport="1" force="1" name="smell_string_iob" property="details:default:description:react-post:sense/smell-iob" type="copy-feature" copy="smell_string_dob"/\>
  \<feature noexport="1" force="1" name="smell_string_iob_far" property="details:default:description:react-post:sense/smell-iob-far" type="copy-feature" copy="smell_string_dob"/\>
  \<feature void="0" force="1" noexport="1" name="scriptrunner" property="base:scriptrunner" type="data"\>1\</feature\>
  \<feature noexport="1" name="witness_inherit" property="merry:inherit:witness:sense/smell" type="data"\>\\\<Lib:common\\\>\</feature\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:alteration">
         X[S] \$[\$applicable = \$body."sys:storyapi:option:alteration:applicable"; return "";]
\<script\>
    var subparts = new Array();
    var subnames = new Array();
    \$[/* \$applicable == ([ "part" : ([ "descriptive" : "property", ... ]), ... ]) --
         subparts \<---- ([ "part (description)" : "current-value" ])
         subnames \<---- ([ "part (description)" : "property" ]) */
        string p, *parts, *subparts, r;
        int i, ix, j, jx;

        \$plist = (\{ \});
        r      = "";
        parts  = map_indices(\$applicable);
        ix     = sizeof(parts);
        for (i = 0; i \< ix; i++) \{
            subparts = map_indices(\$applicable[parts[i]]);
            jx       = sizeof(subparts);
            for (j = 0; j \< jx; j++) \{
                p       = parts[i] + " (" + subparts[j] + ")";
                \$plist += (\{ p \});
                r += "subparts['" + p + "'] = '" + Str(Get(\$body, \$applicable[parts[i]][subparts[j]])) + "';";
                r += "subnames['" + p + "'] = '" + \$applicable[parts[i]][subparts[j]] + "';";
            \}
        \}
    return r;]
    function bpu(s)
    \\\{
        document.getElementById('bodypart').value = subnames[s];
        document.getElementById('alteration').value = subparts[s];
    \\\}
\</script\>
\<h1\>Alteration purchase\</h1\>
\<hr\>\</hr\>
In \$(Data:info.server), you can purchase \<b\>trait alterations\</b\>. A trait alteration is a change to an existing adjective, such as "blue" or "bright" or "dark" etc. to a given body-part of your selected character (\$(body.name)).\\\<p/\\\>
Trait alterations should adhere to a few rules, or they risk being declined by staff:
\<ul\>
    \<li\>You should not submit "tasteless" traits that include swear words or modern "slang"\</li\>
    \<li\>You should try to show your fellow players, not tell them. "Beautiful hair" is unacceptable. "Autumn hair" is better.\</li\>
\</ul\>
As a parenthesis, different games will treat these differently. If you are unsure of an alteration, you can either simply submit it (and if it is declined, then that's that), or you can file an assist, asking to speak with a staff member about your trait.\\\<p/\\\>
\<feature-form\>
    \<b\>You want to change \<describe what="\$(body)"/\>'s \<feature type="data" name="bodypart" property="bodypart"/\> \<select onchange="javascript:if (this.value) bpu(this.value);"\>
\<option value=""\>--choose a part--\</option\>
\$[string r;
int i, ix;

r     = "";
ix    = sizeof(\$plist);
for (i = 0; i \< ix; i++) \{
    r += "\<option value=\\"" + \$plist[i] + "\\"\>" + \$plist[i] + "\</option\>";
\}
return r;]
\</select\> to \<feature name="alteration" property="alteration"/\>.\</b\>\\\<p/\\\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="sp:nickname">
         X[S] \<h1\>Nickname purchase\</h1\>
\<hr\>\</hr\>
In \$(Data:info.server), you can purchase \<b\>nicknames\</b\>. A nickname is basically a secondary reference that other players can use to interact with your character.
\<ul\>
    \<li\>You can purchase multiple nicknames for the same character.\</li\>
    \<li\>The nickname you purchase is for \<b\>the character\</b\> with which you make the purchase (\$(body.name))\</li\>
    \<li\>As with all other StoryPoint purchases, nicknames bought are non-refundable.\</li\>
    \<li\>Inappropriate nicknames will be removed by staff, and StoryPoints used in the purchase will not be refunded.\</li\>
\</ul\>
\<b\>Appropriate nicknames:\</b\>
What is and isn't an appropriate nickname depends on a number of things. A nickname, just as a regular name, must:\<ol\>
\<li\>- be in-theme,\</li\>
\<li\>- not be offensive,\</li\>
\<li\>- be 2 or more letters long\</li\>
\<li\>- not be misleading or confusing ("you" is a good example of a confusing name)\</li\>
\</ol\>
If you pick a nickname that does not abide by the above four rules, chances are high that you will lose it. If you feel hesitant about the appropriateness of a nickname, do not hesitant to consult game staff about it.\\\<p/\\\>
\<feature-form\>
    \<b\>The nickname of your choice:\</b\> \<feature name="nickname" property="nickname"\>\</feature\>\<p\>\</p\>
\</feature-form\>
      </Core:Property>
      <Core:Property property="{author}">"Kalle Alm"</Core:Property>
      <Core:Property property="{email}">
         "kalle@mortalis.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1206024448
      </Core:Property>
      <Core:Property property="{sub_rev}">7</Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
