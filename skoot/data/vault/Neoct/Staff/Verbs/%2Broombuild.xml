<object clone="/usr/SkotOS/obj/verb" owner="TextIF">
  <Socials:Verb imp="+roombuild" evoke="forbidden" audible="false" private="false" secret="true" obscured="false" target-abstracts="false" disabled="false" ooc="false" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects>
      <Socials:SocialObject role="dob" direct="true" single="false" raw="true" requirement="forbidden" distance="far">
        <Socials:SocObPreps/>
        <Socials:SocObFilters/>
      </Socials:SocialObject>
    </Socials:SocialObjects>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="html:detail">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Choose a room to add a detail to\</title\>
\</head\>
\<body\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>
\<zform nactor="\$(nactor)" this="\$(this)"\>
\<sbr/\>
\<div align="center"\>\<br/\>\<br/\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
 \<tr\>
  \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
   \<tr\>
    \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
     \<tr\>
      \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: CHOOSE A ROOM TO ADD A DETAIL TO\</div\>\</td\>
     \</tr\>
    \</table\>
     \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
      \<tr\>
       \<td width="630"\>
        \<p\>Please enter the woe name of the room you wish to add a detail to:\<sbr/\>
        \<input name="woe" type="text" value="Marrach:Coders:brenson:rooms:UrRooms:UrBuildTest" size="75"/\>\<sbr/\>\$(error)\</p\>
            \<p align="center"\>
        \<input type="submit" name="Submit" value="Work on Room!"/\>
\</p\>
       \</td\>
      \</tr\>
     \</table\>\</td\>
   \</tr\>
  \</table\>\</td\>
 \</tr\>
\</table\>
\</div\>
\<action\>
   \$[\$"\<redirect propob=\\"\$(this)\\" prop=\\"details\\" room=\\"\$(woe)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>"]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:details">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Add a New Detail!\</title\>
\</head\>
\<body\>
\<zsession room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>
\<zform room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>
\<div align="center"\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td width="677" height="900"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
      \<tr\>
        \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
          \<tr\>
            \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: ADD A NEW
                DETAIL\</div\>\</td\>
          \</tr\>
        \</table\>
          \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
            \<tr\>
              \<td width="630"\>
              \<p\>Current room: \<font color="#CC0000"\>\$(room)\</font\>\<sbr/\>
                \<sbr/\>
                \<input name="id" type="text" id="id" size="15"/\>
                id --  This is the developers name of the detail, used when referencing
                it.\<sbr/\>
                \<input type="checkbox" name="def" value="def"/\>
                    def. -- False, it will add article to brief. True for definate
                    nouns.\<sbr/\>
                    \<input type="checkbox" name="ab" value="ab"/\>
                    abstract --  True for things that can't be pointed at, i.e.
                 smell.\<sbr/\>
                 \<input type="checkbox" name="hid" value="hid"/\>
                 hidden --  True if this detail should not be visible.\<sbr/\>
                 even in a dark environment.\<sbr/\>
                 \<input type="checkbox" name="plu" value="plu"/\>
                 plural --  True if this detail is plural.\<sbr/\>
                      \<input name="lum" type="text" id="lum" size="10"/\>
                      Luminosity --  How much light this detail contributes
                   to the total light in the room. \</p\>
              \<table width="530" border="0" cellspacing="0" cellpadding="10"\>
                \<tr\>
                  \<td width="276" height="134"\>Prepositions.\<sbr/\>
                    \<input type="checkbox" name="close" value="close"/\>
close -- close to, close by, close beside\<sbr/\>
\<input type="checkbox" name="ag" value="ag"/\>
against -- against\<sbr/\>
\<input type="checkbox" name="under" value="under"/\>
under -- under, beneath, below\<sbr/\>
\<input type="checkbox" name="on" value="on"/\>
on -- on, upon, on top of, across, atop\<sbr/\>
\<input type="checkbox" name="in" value="in"/\>
inside -- inside, in, within\<sbr/\>
\</td\>
                  \<td width="214"\>\<sbr/\>\<input type="checkbox" name="near" value="near"/\>
near -- near, by, nearby, at\<sbr/\>
\<input type="checkbox" name="over" value="over"/\>
over -- over, above\<sbr/\>
\<input type="checkbox" name="beh" value="beh"/\>
behind -- behind\<sbr/\>
\<input type="checkbox" name="bef" value="bef"/\>
before -- before, in front of\<sbr/\>
\<input type="checkbox" name="bes" value="bes"/\>
beside -- beside, next to\</td\>
                \</tr\>
              \</table\>
              \<p\>Names. First box is the SName and second is the PName. e.g.
                \<input name="textfield34" type="text" value="hall" size="10"/\>
                \<input name="textfield35" type="text" value="halls" size="10"/\>
                \<sbr/\>
                N1:
                \<input name="sn1" type="text" id="sn1" size="10"/\>
                \<input name="pn1" type="text" id="pn1" size="10"/\>
N2:
\<input name="sn2" type="text" id="sn2" size="10"/\>
\<input name="pn2" type="text" id="pn2" size="10"/\>
N3:
\<input name="sn3" type="text" id="sn3" size="10"/\>
\<input name="pn3" type="text" id="pn3" size="10"/\>
\<sbr/\>
N4:
\<input name="sn4" type="text" id="sn4" size="10"/\>
\<input name="pn4" type="text" id="pn4" size="10"/\>
N5:
\<input name="sn5" type="text" id="sn5" size="10"/\>
\<input name="pn5" type="text" id="pn5" size="10"/\>
N6:
\<input name="sn6" type="text" id="sn6" size="10"/\>
\<input name="pn6" type="text" id="pn6" size="10"/\>
\<sbr/\>
N7:
\<input name="sn7" type="text" id="sn7" size="10"/\>
\<input name="pn7" type="text" id="pn7" size="10"/\>
N8:
\<input name="sn8" type="text" id="sn8" size="10"/\>
\<input name="pn8" type="text" id="pn8" size="10"/\>
N9:
\<input name="sn9" type="text" id="sn9" size="10"/\>
\<input name="pn9" type="text" id="pn9" size="10"/\>
              \</p\>
              \<p\>Adjectives. (Not all boxes need to be filled in, same with names)\<sbr/\>
                \<input name="a1" type="text" id="a1" size="15"/\>
                \<input name="a2" type="text" id="a2" size="15"/\>
                \<input name="a3" type="text" id="a3" size="15"/\>
                \<input name="a4" type="text" id="a4" size="15"/\>
                \<input name="a5" type="text" id="a5" size="15"/\>
                \<input name="a6" type="text" id="a6" size="15"/\>
                \<sbr/\>
                \<input name="a7" type="text" id="a7" size="15"/\>
                \<input name="a8" type="text" id="a8" size="15"/\>
                \<input name="a9" type="text" id="a9" size="15"/\>
                \<input name="a10" type="text" id="a10" size="15"/\>
                \<input name="a11" type="text" id="a11" size="15"/\>
                \<input name="a12" type="text" id="a12" size="15"/\>
\</p\>
              \<p\>Brief:
                    \<input name="brief" type="text" id="brief" size="75"/\>
                      \<sbr/\>
                      Look:\<sbr/\>
                      \<textarea name="look" id="look" cols="75" rows="3"/\>
                      \<sbr/\>
                      Examine:\<sbr/\>
        \<textarea name="ex" id="id" cols="75" rows="5"/\>
                    \</p\>
              \<p align="center"\>
                \<input type="submit" name="Submit" value="Create New Detail!"/\>
\</p\>
                \<p\>\\\&nbsp;\</p\>
                \</td\>
            \</tr\>
          \</table\>\</td\>
      \</tr\>
    \</table\>\</td\>
  \</tr\>
\</table\>
\</div\>
\<action\>
   \$[if( !\$id ) \{ \$"\<redirect propob=\\"\$(this)\\" prop=\\"noid\\" room=\\"\$(room)\\" nactor=\\"\$(actor)\\" this=\\"\$(this)\\"/\>"; \}
   \$actor = Obj( \$nactor );
   \$room = Obj( \$room );


/* Set the Look, Examine, and Brief of new detail */

   if(\$brief != "" ) \{ Set( \$room, "details:" + \$id + ":description:brief", \$brief ); \}
   if(\$look != "" ) \{ Set( \$room, "details:" + \$id + ":description:look", \$look ); \}
   if(\$ex != "" ) \{ Set( \$room, "details:" + \$id + ":description:examine", \$ex ); \}

/* Make sure the def will be set properly */

    if( \$def == "on" ) \{ \$def = 1; \}

/* Set the Prepositions of the new detail */

   Set( \$room, "details:" + \$id + ":preposition:close to", \$close );
   Set( \$room, "details:" + \$id + ":preposition:against", \$ag );
   Set( \$room, "details:" + \$id + ":preposition:under", \$under );
   Set( \$room, "details:" + \$id + ":preposition:on", \$on );
   Set( \$room, "details:" + \$id + ":preposition:inside", \$in );
   Set( \$room, "details:" + \$id + ":preposition:near", \$near );
   Set( \$room, "details:" + \$id + ":preposition:over", \$over );
   Set( \$room, "details:" + \$id + ":preposition:behind", \$beh );
   Set( \$room, "details:" + \$id + ":preposition:before", \$bef );
   Set( \$room, "details:" + \$id + ":preposition:beside", \$bes );

/* Set a few properties, if checked */

   Set( \$room, "details:" + \$id + ":definite:local", \$def );
   Set( \$room, "details:" + \$id + ":luminosity:local", (float) \$lum );
   Set( \$room, "details:" + \$id + ":abstract", \$ab );
   Set( \$room, "details:" + \$id + ":hidden", \$hid );
   Set( \$room, "details:" + \$id + ":plural", \$plu );

/* The names and adjectives are set in the \$actor's room, if they exist. */

   if(\$sn1 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn1, \$pn1 ); \}
   if(\$sn2 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn2, \$pn2 ); \}
   if(\$sn3 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn3, \$pn3 ); \}
   if(\$sn4 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn4, \$pn4 ); \}
   if(\$sn5 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn5, \$pn5 ); \}
   if(\$sn6 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn6, \$pn6 ); \}
   if(\$sn7 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn7, \$pn7 ); \}
   if(\$sn8 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn8, \$pn8 ); \}
   if(\$sn9 != "" ) \{ Set( \$room, "details:" + \$id + ":sname:" + \$sn9, \$pn9 ); \}

   if(\$a1 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a1, 1 ); \}
   if(\$a2 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a2, 1 ); \}
   if(\$a3 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a3, 1 ); \}
   if(\$a4 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a4, 1 ); \}
   if(\$a5 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a5, 1 ); \}
   if(\$a6 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a6, 1 ); \}
   if(\$a7 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a7, 1 ); \}
   if(\$a8 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a8, 1 ); \}
   if(\$a9 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a9, 1 ); \}
   if(\$a10 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a10, 1 ); \}
   if(\$a11 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a11, 1 ); \}
   if(\$a12 != "" ) \{ Set( \$room, "details:" + \$id + ":adjective:" + \$a12, 1 ); \}

   \$done = "You have just added the \\"" + \$id + "\\" detail to: " + Str( \$room );

   return \$"\<redirect propob=\\"\$(this)\\" prop=\\"roommenu\\" room=\\"\$(room)\\" done=\\"\$(done)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>";]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:different">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Choose a room to work on\</title\>
\</head\>
\<body\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>
\<zform nactor="\$(nactor)" this="\$(this)"\>
\<sbr/\>
\<div align="center"\>\<br/\>\<br/\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
 \<tr\>
  \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
   \<tr\>
    \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
     \<tr\>
      \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: CHOOSE A ROOM TO WORK ON\</div\>\</td\>
     \</tr\>
    \</table\>
     \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
      \<tr\>
       \<td width="630"\>
        \<p\>Please enter the woe name of the room you wish to work on:\<sbr/\>
        \<input name="woe" type="text" value="Marrach:Coders:brenson:rooms:UrRooms:UrBuildTest" size="75"/\>\<sbr/\>\$(error)\</p\>
            \<p align="center"\>
        \<input type="submit" name="Submit" value="Work on Room!"/\>
\</p\>
       \</td\>
      \</tr\>
     \</table\>\</td\>
   \</tr\>
  \</table\>\</td\>
 \</tr\>
\</table\>
\</div\>
\<action\>
   \$[\$"\<redirect propob=\\"\$(this)\\" prop=\\"roommenu\\" room=\\"\$(woe)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>"]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:edit_detail">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] EDIT A DETAIL\</title\>
\</head\>
\<body\>
\<zsession room="\$(room)" nactor="\$(nactor)" this="\$(this)" detail="\$(detail)"\>
\<zform this="\$(this)" nactor="\$(nactor)" room="\$(room)" detail="\$(detail)"\>
\$["";

      \$room2 = Obj( \$room );
      \$ref = NewNRef(\$room2, \$detail);

      if( !\$ref."detail:description:look" ) \$look = ""; else \$look  = \$ref."detail:description:look";
      if( !\$ref."detail:description:examine" ) \$exam= ""; else \$exam = \$ref."detail:description:examine";
      if( !\$ref."detail:description:brief" ) \$brief = ""; else \$brief = \$ref."detail:description:brief";
      if( !\$ref."detail:description:glance" ) \$glance = ""; else \$glance = \$ref."detail:description:glance";

      \$def = \$ref."detail:definite:local"; if( \$def != 1 ) \$def = nil;
      \$prime = \$ref."detail:prime"; if( \$prime != 1 ) \$prime = nil;
      \$lum = \$ref."detail:luminosity:local";
      \$close = \$ref."detail:preposition:close to"; if( \$close != 1 ) \$close = nil;
      \$ag = \$ref."detail:preposition:against"; if( \$ag != 1 ) \$ag = nil;
      \$under = \$ref."detail:preposition:under"; if( \$under != 1 ) \$under = nil;
      \$on = \$ref."detail:preposition:on"; if( \$on != 1 ) \$on = nil;
      \$in = \$ref."detail:preposition:inside"; if( \$in != 1 ) \$in = nil;
      \$near = \$ref."detail:preposition:near"; if( \$near != 1 ) \$near = nil;
      \$over = \$ref."detail:preposition:over"; if( \$over != 1 ) \$over = nil;
      \$beh = \$ref."detail:preposition:behind"; if( \$beh != 1 ) \$beh = nil;
      \$bef = \$ref."detail:preposition:hefore"; if( \$bef != 1 ) \$bef = nil;
      \$bes = \$ref."detail:preposition:beside"; if( \$bes != 1 ) \$bes = nil;
      \$north = \$ref."detail:exit:direction:north"; if( \$north != 1 ) \$north = nil;
      \$south = \$ref."detail:exit:direction:south"; if( \$south != 1 ) \$south = nil;
      \$east = \$ref."detail:exit:direction:east"; if( \$east != 1 ) \$east = nil;
      \$west = \$ref."detail:exit:direction:west"; if( \$west != 1 ) \$west = nil;
      \$ne = \$ref."detail:exit:direction:northeast"; if( \$ne != 1 ) \$ne = nil;
      \$nw = \$ref."detail:exit:direction:northwest"; if( \$nw != 1 ) \$nw = nil;
      \$se = \$ref."detail:exit:direction:southeast"; if( \$se != 1 ) \$se = nil;
      \$sw = \$ref."detail:exit:direction:southwest"; if( \$sw != 1 ) \$sw = nil;
      \$up = \$ref."detail:exit:direction:up"; if( \$up != 1 ) \$up = nil;
      \$down = \$ref."detail:exit:direction:down"; if( \$down != 1 ) \$down = nil;
      \$dest = \$ref."detail:exit:dest";
      \$ab = \$ref."detail:abstract"; if( \$ab != 1 ) \$ab = nil;
      \$hid = \$ref."detail:hidden"; if( \$hid != 1 ) \$hid = nil;
      \$plu = \$ref."detail:plural"; if( \$plu != 1 ) \$plu = nil;

      \$door = \$ref."detail:exit:door"; if( \$door != 1 ) \$door = nil;
      \$nevob = \$ref."detail:exit:never-obvious"; if( \$nevob != 1 ) \$nevob = nil;
      \$obop = \$ref."detail:exit:obvious-when-open"; if( \$obop != 1 ) \$obop = nil;
      \$hidcl = \$ref."detail:exit:hidden-when-closed"; if( \$hidcl != 1 ) \$hidcl = nil;
      \$sep = \$ref."detail:exit:separate"; if( \$sep != 1 ) \$sep = nil;
      \$lock = \$ref."detail:exit:self-locking"; if( \$lock != 1 ) \$lock = nil;
      \$deadb = \$ref."detail:exit:deadbolt"; if( \$deadb != 1 ) \$deadb = nil;
      \$key = \$ref."detail:exit:keycode";
      \$climb = \$ref."detail:exit:climable";

      \$adjs = \$ref."detail:adjectives";
      while (sizeof(\$adjs) \< 13) \$adjs += (\{ "" \});

      \$snames = \$ref."detail:snames";
      while (sizeof(\$snames) \< 10) \$snames += (\{ "" \});

      \$pnames = \$ref."detail:pnames";
      while (sizeof(\$pnames) \< 10) \$pnames += (\{ "" \});

      if( \$look ) \{
        if( typeof( \$look ) != T_STRING )
          /* It's sam. */
          \$look = mixed_to_ascii( \$look )[4..];
       \}

      if( \$exam ) \{
        if( typeof( \$exam ) != T_STRING )
          /* It's sam. */
          \$exam = mixed_to_ascii( \$exam )[4..];
       \}

      if( \$brief ) \{
        if( typeof( \$brief ) != T_STRING )
          /* It's sam. */
          \$brief = mixed_to_ascii( \$brief )[4..];
       \}]
\<div align="center"\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td width="677" height="900"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
      \<tr\>
        \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
          \<tr\>
            \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: EDIT A DETAIL\</div\>\</td\>
          \</tr\>
        \</table\>
          \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
            \<tr\>
              \<td width="630"\>
              \<p\>Current room: \<font color="#CC0000"\>\$(room)\</font\> Current Detail: \<font color="#CC0000"\>\$(detail)\</font\>\<sbr/\>
                \<sbr/\>
                [NOTE] Some properties cannot be edited using this tool.\<br/\>
                \<input type="checkbox" name="def" value="def" checked="\$(def)"/\>
                 def. -- False, it will add article to brief. True for definate nouns.\<sbr/\>
                \<input type="checkbox" name="ab" value="ab" checked="\$(ab)"/\>
                 abstract -- True for things that can't be pointed at, i.e. smell.\<sbr/\>
                \<input type="checkbox" name="hid" value="hid" checked="\$(hid)"/\>
                 hidden -- True if this detail should not be visible.\<sbr/\>
                \<input type="checkbox" name="tid" value="tid"/\>
                 targetable_in_dark -- True if this detail can be referenced
                 even in a dark environment.\<sbr/\>
                \<input type="checkbox" name="plu" value="plu" checked="\$(plu)"/\>
                 plural -- True if this detail is plural.\<sbr/\>
                \<input name="lum" type="text" id="lum" size="10" value="\$(lum)"/\>
                 Luminosity -- How much light this detail contributes to the total light in the room. \</p\>
                          \<p\>If this detail is an exit please select the direction you wish your exit to go if it is not already selected. You may select more than one (e.g. north \\\& northwest).\<sbr/\>\</p\>
                            \<table width="600" border="0" cellspacing="0" cellpadding="10"\>
                             \<tr\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="north" value="1" checked="\$(north)"/\>
                                   North\<sbr/\>
                                  \<input type="checkbox" name="south" value="1" checked="\$(south)"/\>
                                   South\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="east" value="1" checked="\$(east)"/\>
                                   East\<sbr/\>
                                  \<input type="checkbox" name="west" value="1" checked="\$(west)"/\>
                                   West\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="northeast" value="1" checked="\$(ne)"/\>
                                   Northeast\<sbr/\>
                                  \<input type="checkbox" name="southeast" value="1" checked="\$(se)"/\>
                                   Southeast\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="northwest" value="1" checked="\$(nw)"/\>
                                   Northwest\<sbr/\>
                                  \<input type="checkbox" name="southwest" value="1" checked="\$(sw)"/\>
                                   Southwest\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="up" value="1" checked="\$(up)"/\>
                                   Up\<sbr/\>
                                  \<input type="checkbox" name="down" value="1" checked="\$(down)"/\>
                                   Down\<sbr/\>\</p\>\</td\>
                             \</tr\>
                            \</table\>
                       \<p\>\<input type="checkbox" name="door" value="door" checked="\$(door)"/\>
                           Door -- If true, this detail can be opened and closed.\<sbr/\>
                          \<input type="checkbox" name="nevob" value="nevob" checked="\$(nevob)"/\>
                           Never_obvious -- True for invisible exits.\<sbr/\>
                          \<input type="checkbox" name="obop" value="obop" checked="\$(obop)"/\>
                           Obvious_if_open -- True for exits visible when open.\<sbr/\>
                          \<input type="checkbox" name="hidcl" value="hidcl" checked="\$(hidcl)"/\>
                           Hidden_when_closed -- True for exits that disappear when closed.\<sbr/\>
                          \<input type="checkbox" name="sep" value="sep" checked="\$(sep)"/\>
                           Separate -- True for doors where closing or locking one side doesn't affect the other.\<sbr/\>
                           Keycode -- Can be any text string (used to Connect Key to door).\<sbr/\>
                          \<input type="text" name="key" id="key" value="\$(key)" size="75"/\>\<sbr/\>
                          \<input type="checkbox" name="lock" value="lock" checked="\$(lock)"/\>
                           Self-locking -- True for doors that should lock when they close.\<sbr/\>
                          \<input type="checkbox" name="deadb" value="deadb" checked="\$(deadb)"/\>
                           Deadbolt -- True for doors that should be lockable without a key.\<sbr/\>
                           Climbable -- Provide NREF(Woe name\\\|detail) for climbing destination.\<sbr/\>
                          \<input type="text" name="climb" id="climb" value="\$(climb)" size="75"/\>\</p\>
              \<table width="530" border="0" cellspacing="0" cellpadding="10"\>
                \<tr\>
                  \<td width="276" height="134"\>Prepositions.\<sbr/\>
                    \<input type="checkbox" name="close" value="close" checked="\$(close)"/\>
                     close -- close to, close by, close beside\<sbr/\>
                    \<input type="checkbox" name="ag" value="ag" checked="\$(ag)"/\>
                     against -- against\<sbr/\>
                    \<input type="checkbox" name="under" value="under" checked="\$(under)"/\>
                     under -- under, beneath, below\<sbr/\>
                    \<input type="checkbox" name="on" value="on" checked="\$(on)"/\>
                     on -- on, upon, on top of, across, atop\<sbr/\>
                    \<input type="checkbox" name="in" value="in" checked="\$(in)"/\>
                     inside -- inside, in, within\<sbr/\>
                   \</td\>
                  \<td width="214"\>\<sbr/\>
                   \<input type="checkbox" name="near" value="near" checked="\$(near)"/\>
                    near -- near, by, nearby, at\<sbr/\>
                   \<input type="checkbox" name="over" value="over" checked="\$(over)"/\>
                    over -- over, above\<sbr/\>
                   \<input type="checkbox" name="beh" value="beh" checked="\$(beh)"/\>
                    behind -- behind\<sbr/\>
                   \<input type="checkbox" name="bef" value="bef" checked="\$(bef)"/\>
                    before -- before, in front of\<sbr/\>
                   \<input type="checkbox" name="bes" value="bes" checked="\$(bes)"/\>
                    beside -- beside, next to\</td\>
                \</tr\>
              \</table\>
              \<p\>Names. First box is the SName and second is the PName. e.g.
                \<input name="textfield34" type="text" value="hall" size="10"/\>
                \<input name="textfield35" type="text" value="halls" size="10"/\>
                \<sbr/\>
N1:
\<input name="sn1" value="\$(snames.0)" type="text" id="sn1" size="10"/\>
\<input name="pn1" value="\$(pnames.0)" type="text" id="pn1" size="10"/\>
N2:
\<input name="sn2" value="\$(snames.1)" type="text" id="sn2" size="10"/\>
\<input name="pn2" value="\$(pnames.1)" type="text" id="pn2" size="10"/\>
N3:
\<input name="sn3" value="\$(snames.2)" type="text" id="sn3" size="10"/\>
\<input name="pn3" value="\$(pnames.2)" type="text" id="pn3" size="10"/\>
\<sbr/\>
N4:
\<input name="sn4" value="\$(snames.3)" type="text" id="sn4" size="10"/\>
\<input name="pn4" value="\$(pnames.3)" type="text" id="pn4" size="10"/\>
N5:
\<input name="sn5" value="\$(snames.4)" type="text" id="sn5" size="10"/\>
\<input name="pn5" value="\$(pnames.4)" type="text" id="pn5" size="10"/\>
N6:
\<input name="sn6" value="\$(snames.5)" type="text" id="sn6" size="10"/\>
\<input name="pn6" value="\$(pnames.5)" type="text" id="pn6" size="10"/\>
\<sbr/\>
N7:
\<input name="sn7" value="\$(snames.6)" type="text" id="sn7" size="10"/\>
\<input name="pn7" value="\$(pnames.6)" type="text" id="pn7" size="10"/\>
N8:
\<input name="sn8" value="\$(snames.7)" type="text" id="sn8" size="10"/\>
\<input name="pn8" value="\$(pnames.7)" type="text" id="pn8" size="10"/\>
N9:
\<input name="sn9" value="\$(snames.8)" type="text" id="sn9" size="10"/\>
\<input name="pn9" value="\$(pnames.8)" type="text" id="pn9" size="10"/\>
              \</p\>
              \<p\>Adjectives. (Not all boxes need to be filled in, same with names)\<sbr/\>
                \<input name="a1" value="\$(adjs.0)" type="text" id="a1" size="15"/\>
                \<input name="a2" value="\$(adjs.1)" type="text" id="a2" size="15"/\>
                \<input name="a3" value="\$(adjs.2)" type="text" id="a3" size="15"/\>
                \<input name="a4" value="\$(adjs.3)" type="text" id="a4" size="15"/\>
                \<input name="a5" value="\$(adjs.4)" type="text" id="a5" size="15"/\>
                \<input name="a6" value="\$(adjs.5)" type="text" id="a6" size="15"/\>
                \<sbr/\>
                \<input name="a7" value="\$(adjs.6)" type="text" id="a7" size="15"/\>
                \<input name="a8" value="\$(adjs.7)" type="text" id="a8" size="15"/\>
                \<input name="a9" value="\$(adjs.8)" type="text" id="a9" size="15"/\>
                \<input name="a10" value="\$(adjs.9)" type="text" id="a10" size="15"/\>
                \<input name="a11" value="\$(adjs.10)" type="text" id="a11" size="15"/\>
                \<input name="a12" value="\$(adjs.11)" type="text" id="a12" size="15"/\>
\</p\>
                  \<p\>Brief:
                    \<input name="brief" type="text" value="\$(brief)" size="75"/\>\<sbr/\>
                     Look:\<sbr/\>
                    \<textarea name="look" type="text" cols="75" rows="3"\>\$(look)\</textarea\>\<sbr/\>
                     Examine:\<sbr/\>
                    \<textarea name="exam" type="text" cols="75" rows="5"\>\$(exam)\</textarea\>\<sbr/\>
                     Glance:\<sbr/\>
                    \<textarea name="glance" cols="75" rows="3"\>\$(glance)\</textarea\>\</p\>
                  \<p align="center"\>\<input type="submit" name="Submit" value="Create New Detail!"/\>\</p\>
                \</td\>
            \</tr\>
          \</table\>\</td\>
      \</tr\>
    \</table\>\</td\>
  \</tr\>
\</table\>
\</div\>
\<action\>
  \$[/*
     * This sets or resets all of the indicated properties
     */

      \$room2 = Obj( \$room );
      \$ref = NewNRef(\$room2, \$detail);

      if( !\$ref."detail:description:look" ) \$look = ""; else \$look  = \$ref."detail:description:look";
      if( !\$ref."detail:description:examine" ) \$exam= ""; else \$exam = \$ref."detail:description:examine";
      if( !\$ref."detail:description:brief" ) \$brief = ""; else \$brief = \$ref."detail:description:brief";
      if( !\$ref."detail:description:glance" ) \$glance = ""; else \$glance = \$ref."detail:description:glance";

      \$ref."detail:definite:local" = \$def;
      \$ref."detail:prime" = \$prime;
      \$ref."detail:luminosity:local" = \$lum;
      \$ref."detail:preposition:close to" = \$close;
      \$ref."detail:preposition:against" = \$ag;
      \$ref."detail:preposition:under" = \$under;
      \$ref."detail:preposition:on" = \$on;
      \$ref."detail:preposition:inside" = \$in;
      \$ref."detail:preposition:near" = \$near;
      \$ref."detail:preposition:over" = \$over;
      \$ref."detail:preposition:behind" = \$beh;
      \$ref."detail:preposition:hefore" = \$bef;
      \$ref."detail:preposition:beside" = \$bes;
      \$ref."detail:exit:direction:north" = \$north;
      \$ref."detail:exit:direction:south" = \$south;
      \$ref."detail:exit:direction:east" = \$east;
      \$ref."detail:exit:direction:west" = \$west;
      \$ref."detail:exit:direction:northeast" = \$ne;
      \$ref."detail:exit:direction:northwest" = \$sw;
      \$ref."detail:exit:direction:southeast" = \$se;
      \$ref."detail:exit:direction:southwest" = \$sw;
      \$ref."detail:exit:direction:up" = \$up;
      \$ref."detail:exit:direction:down" = \$down;
      \$ref."detail:exit:dest" = \$dest;
      \$ref."detail:abstract" = \$ab;
      \$ref."detail:hidden" = \$hid;
      \$ref."detail:plural" = \$plu;

      \$ref."detail:exit:door" = \$door;
      \$ref."detail:exit:never-obvious" = \$nevob;
      \$ref."detail:exit:obvious-when-open" = \$obop;
      \$ref."detail:exit:hidden-when-closed" = \$hidcl;
      \$ref."detail:exit:separate" = \$sep;
      \$ref."detail:exit:self-locking" = \$lock;
      \$ref."detail:exit:deadbolt" = \$deadb;
      \$ref."detail:exit:keycode" = \$key;
      \$ref."detail:exit:climable" = \$climb;

      \$adjs = \$ref."detail:adjectives";
      while (sizeof(\$adjs) \< 13) \$adjs += (\{ "" \});

      \$snames = \$ref."detail:snames";
      while (sizeof(\$snames) \< 10) \$snames += (\{ "" \});

      \$pnames = \$ref."detail:pnames";
      while (sizeof(\$pnames) \< 10) \$pnames += (\{ "" \});

      if( \$look ) \{
        if( typeof( \$look ) != T_STRING )
          /* It's sam. */
          \$look = mixed_to_ascii( \$look )[4..];
       \}

      if( \$exam ) \{
        if( typeof( \$exam ) != T_STRING )
          /* It's sam. */
          \$exam = mixed_to_ascii( \$exam )[4..];
       \}

      if( \$brief ) \{
        if( typeof( \$brief ) != T_STRING )
          /* It's sam. */
          \$brief = mixed_to_ascii( \$brief )[4..];
       \}]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:eexitpick">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Choose a room for a new exit (to a new room)\</title\>
\</head\>
\<body\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>
\<zform nactor="\$(nactor)" this="\$(this)"\>
\<sbr/\>
\<div align="center"\>\<br/\>\<br/\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
 \<tr\>
  \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
   \<tr\>
    \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
     \<tr\>
      \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: CHOOSE A ROOM FOR A NEW EXIT (TO AN EXISTING ROOM)\</div\>\</td\>
     \</tr\>
    \</table\>
     \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
      \<tr\>
       \<td width="630"\>
        \<p\>Please enter the woe name of the room you wish to create a new exit in (that leads to an existing room):\<sbr/\>
        \<input name="woe" type="text" value="Marrach:Coders:brenson:rooms:UrRooms:UrBuildTest" size="75"/\>\</p\>
            \<p align="center"\>
        \<input type="submit" name="Submit" value="Work on Room!"/\>
\</p\>
       \</td\>
      \</tr\>
     \</table\>\</td\>
   \</tr\>
  \</table\>\</td\>
 \</tr\>
\</table\>
\</div\>
\<action\>
   \$[\$"\<redirect propob=\\"\$(this)\\" prop=\\"exiexit\\" room=\\"\$(woe)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>"]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:exiexit">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Exit to an Existing Room!\</title\>
\</head\>
\<body\>
\<zsession room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>
\<zform room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>
\<div align="center"\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td width="677" height="900"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
      \<tr\>
        \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
          \<tr\>
            \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: EXIT TO AN EXISTING ROOM\</div\>\</td\>
          \</tr\>
        \</table\>
          \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
            \<tr\>
              \<td width="630"\>
              \<p\>Current room: \<font color="#CC0000"\>\$(room)\</font\>\<sbr/\>
                \<sbr/\>
                [NOTE]Exit will appear in the current room above as entered into this form.\<sbr/\>
                Conversely, all directions in the detail will be reversed for the other side (west=east).\<br/\>
                 What is the main direction for this exit?
                \<input name="dir" type="text" id="dir" size="10"/\>\<sbr/\>
                 Woe name of the room you wish the exit to go to:\<sbr/\>
                \<input name="othroom" type="text" id="othroom" size="75"/\>\<sbr/\>
                \<input type="checkbox" name="def" value="def"/\>
                 def. -- False, it will add article to brief. True for definate nouns.\<sbr/\>
                \<input type="checkbox" name="ab" value="ab"/\>
                 abstract --  True for things that can't be pointed at, i.e. smell.\<sbr/\>
                \<input type="checkbox" name="hid" value="hid"/\>
                 hidden --  True if this detail should not be visible.\<sbr/\>
                \<input type="checkbox" name="plu" value="plu"/\>
                 plural --  True if this detail is plural.\<sbr/\>
                \<input name="lum" type="text" id="lum" size="10"/\>
                 Luminosity --  How much light this detail contributes to the total light in the room. \</p\>
                          \<p\>Please select the direction you wish your exit to go. You may select more than one (e.g. north \\\& northwest). Know that every direction you select, the new room will have the opposite direction (e.g. south \\\& southeast).\<sbr/\>\</p\>
                            \<table width="600" border="0" cellspacing="0" cellpadding="10"\>
                             \<tr\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="north" value="1"/\>
                                   North\<sbr/\>
                                  \<input type="checkbox" name="south" value="1"/\>
                                   South\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="east" value="1"/\>
                                   East\<sbr/\>
                                  \<input type="checkbox" name="west" value="1"/\>
                                   West\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="northeast" value="1"/\>
                                   Northeast\<sbr/\>
                                  \<input type="checkbox" name="southeast" value="1"/\>
                                   Southeast\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="northwest" value="1"/\>
                                   Northwest\<sbr/\>
                                  \<input type="checkbox" name="southwest" value="1"/\>
                                   Southwest\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="up" value="1"/\>
                                   Up\<sbr/\>
                                  \<input type="checkbox" name="down" value="1"/\>
                                   Down\<sbr/\>\</p\>\</td\>
                             \</tr\>
                            \</table\>
                       \<p\>\<input type="checkbox" name="door" value="door"/\>
                           Door -- If true, this detail can be opened and closed.\<sbr/\>
                          \<input type="checkbox" name="nevob" value="TRUE"/\>
                           Never_obvious -- True for invisible exits.\<sbr/\>
                          \<input type="checkbox" name="obop" value="TRUE"/\>
                           Obvious_if_open -- True for exits visible when open.\<sbr/\>
                          \<input type="checkbox" name="hidcl" value="TRUE"/\>
                           Hidden_when_closed -- True for exits that disappear when closed.\<sbr/\>
                          \<input type="checkbox" name="sep" value="TRUE"/\>
                           Separate -- True for doors where closing or locking one side doesn't affect the other.\<sbr/\>
                           Keycode --  Can be any text string (used to Connect Key to door).\<sbr/\>
                          \<input type="text" name="key" id="key" size="75"/\>\<sbr/\>
                          \<input type="checkbox" name="lock" value="TRUE"/\>
                           Self-locking -- True for doors that should lock when they close.\<sbr/\>
                          \<input type="checkbox" name="deadb" value="TRUE"/\>
                           Deadbolt -- True for doors that should be lockable without a key.\<sbr/\>
                           Climbable -- Provide the room [woe name] and the detail [id] for climbing destination.\<sbr/\>
                          WOE\<input type="text" name="climb" id="climb" size="60"/\>ID\<input type="text" name="det" id="det" size="20"/\>\</p\>
              \<table width="530" border="0" cellspacing="0" cellpadding="10"\>
                \<tr\>
                  \<td width="276" height="134"\>Prepositions.\<sbr/\>
                    \<input type="checkbox" name="close" value="close"/\>
                     close -- close to, close by, close beside\<sbr/\>
                    \<input type="checkbox" name="ag" value="ag"/\>
                     against -- against\<sbr/\>
                    \<input type="checkbox" name="under" value="under"/\>
                     under -- under, beneath, below\<sbr/\>
                    \<input type="checkbox" name="on" value="on"/\>
                     on -- on, upon, on top of, across, atop\<sbr/\>
                    \<input type="checkbox" name="in" value="in"/\>
                     inside -- inside, in, within\<sbr/\>
                   \</td\>
                  \<td width="214"\>\<sbr/\>
                   \<input type="checkbox" name="near" value="near"/\>
                    near -- near, by, nearby, at\<sbr/\>
                   \<input type="checkbox" name="over" value="over"/\>
                    over -- over, above\<sbr/\>
                   \<input type="checkbox" name="beh" value="beh"/\>
                    behind -- behind\<sbr/\>
                   \<input type="checkbox" name="bef" value="bef"/\>
                    before -- before, in front of\<sbr/\>
                   \<input type="checkbox" name="bes" value="bes"/\>
                    beside -- beside, next to\</td\>
                \</tr\>
              \</table\>
              \<p\>Names. First box is the SName and second is the PName. e.g.
                \<input name="textfield34" type="text" value="hall" size="10"/\>
                \<input name="textfield35" type="text" value="halls" size="10"/\>
                \<sbr/\>
N1:
\<input name="sn1" type="text" id="sn1" size="10"/\>
\<input name="pn1" type="text" id="pn1" size="10"/\>
N2:
\<input name="sn2" type="text" id="sn2" size="10"/\>
\<input name="pn2" type="text" id="pn2" size="10"/\>
N3:
\<input name="sn3" type="text" id="sn3" size="10"/\>
\<input name="pn3" type="text" id="pn3" size="10"/\>
\<sbr/\>
N4:
\<input name="sn4" type="text" id="sn4" size="10"/\>
\<input name="pn4" type="text" id="pn4" size="10"/\>
N5:
\<input name="sn5" type="text" id="sn5" size="10"/\>
\<input name="pn5" type="text" id="pn5" size="10"/\>
N6:
\<input name="sn6" type="text" id="sn6" size="10"/\>
\<input name="pn6" type="text" id="pn6" size="10"/\>
\<sbr/\>
N7:
\<input name="sn7" type="text" id="sn7" size="10"/\>
\<input name="pn7" type="text" id="pn7" size="10"/\>
N8:
\<input name="sn8" type="text" id="sn8" size="10"/\>
\<input name="pn8" type="text" id="pn8" size="10"/\>
N9:
\<input name="sn9" type="text" id="sn9" size="10"/\>
\<input name="pn9" type="text" id="pn9" size="10"/\>
              \</p\>
              \<p\>Adjectives. (Not all boxes need to be filled in, same with names)\<sbr/\>
                \<input name="a1" type="text" id="a1" size="15"/\>
                \<input name="a2" type="text" id="a2" size="15"/\>
                \<input name="a3" type="text" id="a3" size="15"/\>
                \<input name="a4" type="text" id="a4" size="15"/\>
                \<input name="a5" type="text" id="a5" size="15"/\>
                \<input name="a6" type="text" id="a6" size="15"/\>
                \<sbr/\>
                \<input name="a7" type="text" id="a7" size="15"/\>
                \<input name="a8" type="text" id="a8" size="15"/\>
                \<input name="a9" type="text" id="a9" size="15"/\>
                \<input name="a10" type="text" id="a10" size="15"/\>
                \<input name="a11" type="text" id="a11" size="15"/\>
                \<input name="a12" type="text" id="a12" size="15"/\>
\</p\>
                  \<p\>Brief:
                    \<input name="brief" type="text" id="brief" size="75"/\>\<sbr/\>
                     Look:\<sbr/\>
                    \<textarea name="look" id="look" cols="75" rows="3"/\>\<sbr/\>
                     Examine:\<sbr/\>
                    \<textarea name="ex" id="id" cols="75" rows="5"/\>\</p\>
                  \<p align="center"\>\<input type="submit" name="Submit" value="Create New Detail!"/\>\</p\>
                \</td\>
            \</tr\>
          \</table\>\</td\>
      \</tr\>
    \</table\>\</td\>
  \</tr\>
\</table\>
\</div\>
\<action\>
   \$[NRef roomExit, hereExit, climbExit;
   \$actor = Obj( \$nactor );
   \$room = Obj( \$room );
   \$dest = Obj( \$othroom );

/* Change directions, if a direction was specified, for the new room */

   if( \$dir == "" ) \{ \$dir = \$brief; \}
   if( \$dir == "north" ) \{ \$ndir = "south"; \}
   if( \$dir == "south" ) \{ \$ndir = "north"; \}
   if( \$dir == "east" ) \{ \$ndir = "west"; \}
   if( \$dir == "west" ) \{ \$ndir = "east"; \}
   if( \$dir == "northwest" ) \{ \$ndir = "southeast"; \}
   if( \$dir == "southwest" ) \{ \$ndir = "northeast"; \}
   if( \$dir == "northeast" ) \{ \$ndir = "southwest"; \}
   if( \$dir == "southeast" ) \{ \$ndir = "northwest"; \}
   if( \$dir == "up" ) \{ \$ndir = "down"; \}
   if( \$dir == "down" ) \{ \$ndir = "up"; \}

/* Set the Look, Examine, and Brief of new detail */

   if(\$brief != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":description:brief", \$brief ); \}
   if(\$look != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":description:look", \$look ); \}
   if(\$ex != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":description:examine", \$ex ); \}

/* Set the Prepositions of the new detail */

   Set( \$room, "details:exit-" + \$dir + ":preposition:close to", \$close );
   Set( \$room, "details:exit-" + \$dir + ":preposition:against", \$ag );
   Set( \$room, "details:exit-" + \$dir + ":preposition:under", \$under );
   Set( \$room, "details:exit-" + \$dir + ":preposition:on", \$on );
   Set( \$room, "details:exit-" + \$dir + ":preposition:inside", \$in );
   Set( \$room, "details:exit-" + \$dir + ":preposition:near", \$near );
   Set( \$room, "details:exit-" + \$dir + ":preposition:over", \$over );
   Set( \$room, "details:exit-" + \$dir + ":preposition:behind", \$beh );
   Set( \$room, "details:exit-" + \$dir + ":preposition:before", \$bef );
   Set( \$room, "details:exit-" + \$dir + ":preposition:beside", \$bes );

/* Set a few properties, if checked */
/* Make sure the def will be set properly */

    if( \$def == "on" ) \{ \$def = 1; \}

   Set( \$room, "details:exit-" + \$dir + ":definite:local", \$def );
   Set( \$room, "details:exit-" + \$dir + ":luminosity:local", (float) \$lum );
   Set( \$room, "details:exit-" + \$dir + ":abstract", \$ab );
   Set( \$room, "details:exit-" + \$dir + ":hidden", \$hid );
   Set( \$room, "details:exit-" + \$dir + ":plural", \$plu );

/* The names and adjectives are set in the \$actor's room, if they exist. */

   if(\$sn1 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn1, \$pn1 ); \}
   if(\$sn2 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn2, \$pn2 ); \}
   if(\$sn3 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn3, \$pn3 ); \}
   if(\$sn4 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn4, \$pn4 ); \}
   if(\$sn5 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn5, \$pn5 ); \}
   if(\$sn6 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn6, \$pn6 ); \}
   if(\$sn7 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn7, \$pn7 ); \}
   if(\$sn8 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn8, \$pn8 ); \}
   if(\$sn9 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn9, \$pn9 ); \}

   if(\$a1 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a1, 1 ); \}
   if(\$a2 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a2, 1 ); \}
   if(\$a3 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a3, 1 ); \}
   if(\$a4 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a4, 1 ); \}
   if(\$a5 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a5, 1 ); \}
   if(\$a6 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a6, 1 ); \}
   if(\$a7 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a7, 1 ); \}
   if(\$a8 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a8, 1 ); \}
   if(\$a9 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a9, 1 ); \}
   if(\$a10 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a10, 1 ); \}
   if(\$a11 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a11, 1 ); \}
   if(\$a12 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a12, 1 ); \}

/* Set the door/exit details, if present, in the current room */

   \$climb = Obj( \$climb );
   climbExit = NewNRef( \$climb, \$det );

   Set( \$room, "details:exit-" + \$dir + ":exit:door", \$door );
   Set( \$room, "details:exit-" + \$dir + ":exit:never_obvious", \$nevob );
   Set( \$room, "details:exit-" + \$dir + ":exit:obvious_when_open", \$obop );
   Set( \$room, "details:exit-" + \$dir + ":exit:hidden_when_closed", \$hidcl );
   Set( \$room, "details:exit-" + \$dir + ":exit:separate", \$sep );
   Set( \$room, "details:exit-" + \$dir + ":exit:self-locking", \$lock );
   Set( \$room, "details:exit-" + \$dir + ":exit:deadbolt", \$deadb );
   if(\$keycode != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":exit:keycode", \$key ); \}
   if(\$climb != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":exit:climable", climbExit ); \}

/* Set the direction(s) for the exit in the current room */

   Set( \$room, "details:exit-" + \$dir + ":exit:direction:north", \$north );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:south", \$south );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:east", \$east );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:west", \$west );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:northeast", \$northeast );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:southeast", \$southeast );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:northwest", \$northwest );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:southwest", \$southwest );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:up", \$up );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:down", \$down );

/* NEW ROOM */

/* Change the directions in the description so in the new room they will mirror the directions in the \$actor's room */

if( \$look != "" ) \{ replace_strings( \$look, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$ex != "" ) \{ replace_strings( \$ex, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$brief != "" ) \{ replace_strings( \$brief, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a1 != "" ) \{ replace_strings( \$a1, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a2 != "" ) \{ replace_strings( \$a2, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a3 != "" ) \{ replace_strings( \$a3, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a4 != "" ) \{ replace_strings( \$a4, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a5 != "" ) \{ replace_strings( \$a5, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a6 != "" ) \{ replace_strings( \$a6, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a7 != "" ) \{ replace_strings( \$a7, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a8 != "" ) \{ replace_strings( \$a8, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a9 != "" ) \{ replace_strings( \$a9, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a10 != "" ) \{ replace_strings( \$a10, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a11 != "" ) \{ replace_strings( \$a11, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a12 != "" ) \{ replace_strings( \$a12, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

/* Makes sure there is an identifier for the detail ID */

if( !\$ndir ) \{ \$ndir = \$brief; \}

/* Set the door/exit details, if present, in the new room */

   Set( \$dest, "details:exit-" + \$ndir + ":exit:door", \$door );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:never-obvious", \$never );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:obvious-when-open", \$obvious );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:hidden-when-closed", \$closed );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:separate", \$sep );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:self-locking", \$self );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:deadbolt", \$deadbolt );
   if(\$keycode != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":exit:keycode", \$keycode ); \}
   if(\$climb != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":exit:climbable", \$climb ); \}

/* Set the glance, brief, look and examine in the new room */

   if(\$brief != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":description:brief", \$brief ); \}
   if(\$look != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":description:look", \$look ); \}
   if(\$ex != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":description:examine", \$ex ); \}

/* Set all of the checked prepositions in the new room */

   Set( \$dest, "details:exit-" + \$ndir + ":preposition:close to", \$close );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:against", \$ag );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:under", \$under );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:on", \$on );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:inside", \$in );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:near", \$near );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:over", \$over );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:behind", \$beh );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:before", \$bef );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:beside", \$bes );

/* Set a few more attributes, if checked, in the new room */

   Set( \$dest, "details:exit-" + \$ndir + ":definite:local", \$def );
   Set( \$dest, "details:exit-" + \$ndir + ":luminosity:local", (float) \$lum );
   Set( \$dest, "details:exit-" + \$ndir + ":abstract", \$ab );
   Set( \$dest, "details:exit-" + \$ndir + ":hidden", \$hid );
   Set( \$dest, "details:" + \$ndir + ":targetableindark", \$tid );
   Set( \$dest, "details:" + \$ndir + ":plural", \$plu );

/* The names and adjectives are set in the \$actor's room, if they exist. */

   if(\$sn1 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn1, \$pn1 ); \}
   if(\$sn2 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn2, \$pn2 ); \}
   if(\$sn3 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn3, \$pn3 ); \}
   if(\$sn4 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn4, \$pn4 ); \}
   if(\$sn5 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn5, \$pn5 ); \}
   if(\$sn6 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn6, \$pn6 ); \}
   if(\$sn7 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn7, \$pn7 ); \}
   if(\$sn8 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn8, \$pn8 ); \}
   if(\$sn9 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn9, \$pn9 ); \}

   if(\$a1 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a1, 1 ); \}
   if(\$a2 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a2, 1 ); \}
   if(\$a3 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a3, 1 ); \}
   if(\$a4 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a4, 1 ); \}
   if(\$a5 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a5, 1 ); \}
   if(\$a6 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a6, 1 ); \}
   if(\$a7 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a7, 1 ); \}
   if(\$a8 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a8, 1 ); \}
   if(\$a9 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a9, 1 ); \}
   if(\$a10 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a10, 1 ); \}
   if(\$a11 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a11, 1 ); \}
   if(\$a12 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a12, 1 ); \}

/* Set the direction(s) for the exit in the current room */

   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:north", \$north );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:south", \$south );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:east", \$east );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:west", \$west );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:northeast", \$northeast );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:southeast", \$southeast );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:northwest", \$northwest );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:southwest", \$southwest );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:up", \$up );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:down", \$down );

/* Make the exits point to each other */

   roomExit = NewNRef( \$dest, "exit-" + \$ndir );
   hereExit = NewNRef( \$room, "exit-" + \$dir );

   Set(\$room, "details:exit-" + \$dir + ":exit:dest", roomExit );
   Set(\$dest, "details:exit-" + \$ndir + ":exit:dest", hereExit );

   \$done = "You have just added the exit \\"exit-" + \$dir + "\\" to: " + Str(\$room) + ", which leads to the exit \\"exit-" + \$ndir + "\\" in: " + Str( \$dest );

   return \$"\<redirect propob=\\"\$(this)\\" prop=\\"roommenu\\" done=\\"\$(done)\\" room=\\"\$(room)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>";]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:exitnew">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Exit to a New Room\</title\>
\</head\>
\<body\>
\<zsession room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>
\<zform room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>
\<div align="center"\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td width="677" height="900"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
      \<tr\>
        \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
          \<tr\>
            \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: EXIT TO A NEW ROOM\</div\>\</td\>
          \</tr\>
        \</table\>
          \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
            \<tr\>
              \<td width="630"\>
              \<p\>Current room: \<font color="#CC0000"\>\$(room)\</font\>\<sbr/\>
                \<sbr/\>
                [NOTE]Exit will appear in the current room above as entered into this form.\<sbr/\>
                Conversely, all directions in the detail will be reversed for the other side (west=east).\<br/\>
                 What is the main direction for this exit?
                \<input name="dir" type="text" id="dir" size="10"/\>\<sbr/\>
                 Woe name of UrRoom for new room:\<sbr/\>
                \<input name="urroom" type="text" id="urroom" size="75"/\>\<sbr/\>
                 Woe name you wish the new room to have:\<sbr/\>
                \<input name="newwoe" type="text" id="newwoe" size="75"/\>\<sbr/\>
                \<input type="checkbox" name="def" value="def"/\>
                 def. -- False, it will add article to brief. True for definate nouns.\<sbr/\>
                \<input type="checkbox" name="ab" value="ab"/\>
                 abstract --  True for things that can't be pointed at, i.e. smell.\<sbr/\>
                \<input type="checkbox" name="hid" value="hid"/\>
                 hidden --  True if this detail should not be visible.\<sbr/\>
                \<input type="checkbox" name="tid" value="tid"/\>
                 targetable_in_dark --  True if this detail can be referenced
                 even in a dark environment.\<sbr/\>
                \<input type="checkbox" name="plu" value="plu"/\>
                 plural --  True if this detail is plural.\<sbr/\>
                \<input name="lum" type="text" id="lum" size="10"/\>
                 Luminosity --  How much light this detail contributes to the total light in the room. \</p\>
                          \<p\>Please select the direction you wish your exit to go. You may select more than one (e.g. north \\\& northwest). Know that every direction you select, the new room will have the opposite direction (e.g. south \\\& southeast).\<sbr/\>\</p\>
                            \<table width="600" border="0" cellspacing="0" cellpadding="10"\>
                             \<tr\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="north" value="1"/\>
                                   North\<sbr/\>
                                  \<input type="checkbox" name="south" value="1"/\>
                                   South\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="east" value="1"/\>
                                   East\<sbr/\>
                                  \<input type="checkbox" name="west" value="1"/\>
                                   West\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="northeast" value="1"/\>
                                   Northeast\<sbr/\>
                                  \<input type="checkbox" name="southeast" value="1"/\>
                                   Southeast\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="northwest" value="1"/\>
                                   Northwest\<sbr/\>
                                  \<input type="checkbox" name="southwest" value="1"/\>
                                   Southwest\<sbr/\>\</p\>\</td\>
                              \<td width="120" height="40"\>
                               \<p\>\<input type="checkbox" name="up" value="1"/\>
                                   Up\<sbr/\>
                                  \<input type="checkbox" name="down" value="1"/\>
                                   Down\<sbr/\>\</p\>\</td\>
                             \</tr\>
                            \</table\>
                       \<p\>\<input type="checkbox" name="door" value="door"/\>
                           Door -- If true, this detail can be opened and closed.\<sbr/\>
                          \<input type="checkbox" name="nevob" value="nevob"/\>
                           Never_obvious -- True for invisible exits.\<sbr/\>
                          \<input type="checkbox" name="obop" value="obop"/\>
                           Obvious_if_open -- True for exits visible when open.\<sbr/\>
                          \<input type="checkbox" name="hidcl" value="hidcl"/\>
                           Hidden_when_closed -- True for exits that disappear when closed.\<sbr/\>
                          \<input type="checkbox" name="sep" value="sep"/\>
                           Separate -- True for doors where closing or locking one side doesn't affect the other.\<sbr/\>
                           Keycode --  Can be any text string (used to Connect Key to door).\<sbr/\>
                          \<input type="text" name="key" id="key" size="75"/\>\<sbr/\>
                          \<input type="checkbox" name="lock" value="lock"/\>
                           Self-locking -- True for doors that should lock when they close.\<sbr/\>
                          \<input type="checkbox" name="deadb" value="deadb"/\>
                           Deadbolt -- True for doors that should be lockable without a key.\<sbr/\>
                           Climbable -- Provide NREF(Woe name\\\|detail) for climbing destination.\<sbr/\>
                          \<input type="text" name="climb" id="climb" size="75"/\>\</p\>
              \<table width="530" border="0" cellspacing="0" cellpadding="10"\>
                \<tr\>
                  \<td width="276" height="134"\>Prepositions.\<sbr/\>
                    \<input type="checkbox" name="close" value="close"/\>
                     close -- close to, close by, close beside\<sbr/\>
                    \<input type="checkbox" name="ag" value="ag"/\>
                     against -- against\<sbr/\>
                    \<input type="checkbox" name="under" value="under"/\>
                     under -- under, beneath, below\<sbr/\>
                    \<input type="checkbox" name="on" value="on"/\>
                     on -- on, upon, on top of, across, atop\<sbr/\>
                    \<input type="checkbox" name="in" value="in"/\>
                     inside -- inside, in, within\<sbr/\>
                   \</td\>
                  \<td width="214"\>\<sbr/\>
                   \<input type="checkbox" name="near" value="near"/\>
                    near -- near, by, nearby, at\<sbr/\>
                   \<input type="checkbox" name="over" value="over"/\>
                    over -- over, above\<sbr/\>
                   \<input type="checkbox" name="beh" value="beh"/\>
                    behind -- behind\<sbr/\>
                   \<input type="checkbox" name="bef" value="bef"/\>
                    before -- before, in front of\<sbr/\>
                   \<input type="checkbox" name="bes" value="bes"/\>
                    beside -- beside, next to\</td\>
                \</tr\>
              \</table\>
              \<p\>Names. First box is the SName and second is the PName. e.g.
                \<input name="textfield34" type="text" value="hall" size="10"/\>
                \<input name="textfield35" type="text" value="halls" size="10"/\>
                \<sbr/\>
N1:
\<input name="sn1" type="text" id="sn1" size="10"/\>
\<input name="pn1" type="text" id="pn1" size="10"/\>
N2:
\<input name="sn2" type="text" id="sn2" size="10"/\>
\<input name="pn2" type="text" id="pn2" size="10"/\>
N3:
\<input name="sn3" type="text" id="sn3" size="10"/\>
\<input name="pn3" type="text" id="pn3" size="10"/\>
\<sbr/\>
N4:
\<input name="sn4" type="text" id="sn4" size="10"/\>
\<input name="pn4" type="text" id="pn4" size="10"/\>
N5:
\<input name="sn5" type="text" id="sn5" size="10"/\>
\<input name="pn5" type="text" id="pn5" size="10"/\>
N6:
\<input name="sn6" type="text" id="sn6" size="10"/\>
\<input name="pn6" type="text" id="pn6" size="10"/\>
\<sbr/\>
N7:
\<input name="sn7" type="text" id="sn7" size="10"/\>
\<input name="pn7" type="text" id="pn7" size="10"/\>
N8:
\<input name="sn8" type="text" id="sn8" size="10"/\>
\<input name="pn8" type="text" id="pn8" size="10"/\>
N9:
\<input name="sn9" type="text" id="sn9" size="10"/\>
\<input name="pn9" type="text" id="pn9" size="10"/\>
              \</p\>
              \<p\>Adjectives. (Not all boxes need to be filled in, same with names)\<sbr/\>
                \<input name="a1" type="text" id="a1" size="15"/\>
                \<input name="a2" type="text" id="a2" size="15"/\>
                \<input name="a3" type="text" id="a3" size="15"/\>
                \<input name="a4" type="text" id="a4" size="15"/\>
                \<input name="a5" type="text" id="a5" size="15"/\>
                \<input name="a6" type="text" id="a6" size="15"/\>
                \<sbr/\>
                \<input name="a7" type="text" id="a7" size="15"/\>
                \<input name="a8" type="text" id="a8" size="15"/\>
                \<input name="a9" type="text" id="a9" size="15"/\>
                \<input name="a10" type="text" id="a10" size="15"/\>
                \<input name="a11" type="text" id="a11" size="15"/\>
                \<input name="a12" type="text" id="a12" size="15"/\>
\</p\>
                  \<p\>Brief:
                    \<input name="brief" type="text" id="brief" size="75"/\>\<sbr/\>
                     Look:\<sbr/\>
                    \<textarea name="look" id="look" cols="75" rows="3"/\>\<sbr/\>
                     Examine:\<sbr/\>
                    \<textarea name="ex" id="id" cols="75" rows="5"/\>\</p\>
                  \<p align="center"\>\<input type="submit" name="Submit" value="Create New Detail!"/\>\</p\>
                \</td\>
            \</tr\>
          \</table\>\</td\>
      \</tr\>
    \</table\>\</td\>
  \</tr\>
\</table\>
\</div\>
\<action\>
   \$[NRef roomExit, hereExit;
   \$actor = Obj( \$nactor );
   \$room = Obj( \$room );
   \$ur = Obj( \$urroom );
   \$dest = Spawn( \$ur );
   \$dest."base:objectname" = \$newwoe;

/* Change directions, if a direction was specified, for the new room */

   if( \$dir == "" ) \{ \$dir = \$brief; \}
   if( \$dir == "north" ) \{ \$ndir = "south"; \}
   if( \$dir == "south" ) \{ \$ndir = "north"; \}
   if( \$dir == "east" ) \{ \$ndir = "west"; \}
   if( \$dir == "west" ) \{ \$ndir = "east"; \}
   if( \$dir == "northwest" ) \{ \$ndir = "southeast"; \}
   if( \$dir == "southwest" ) \{ \$ndir = "northeast"; \}
   if( \$dir == "northeast" ) \{ \$ndir = "southwest"; \}
   if( \$dir == "southeast" ) \{ \$ndir = "northwest"; \}
   if( \$dir == "up" ) \{ \$ndir = "down"; \}
   if( \$dir == "down" ) \{ \$ndir = "up"; \}

/* Set the Look, Examine, and Brief of new detail */

   if(\$brief != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":description:brief", \$brief ); \}
   if(\$look != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":description:look", \$look ); \}
   if(\$ex != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":description:examine", \$ex ); \}

/* Set the Prepositions of the new detail */

   Set( \$room, "details:exit-" + \$dir + ":preposition:close to", \$close );
   Set( \$room, "details:exit-" + \$dir + ":preposition:against", \$ag );
   Set( \$room, "details:exit-" + \$dir + ":preposition:under", \$under );
   Set( \$room, "details:exit-" + \$dir + ":preposition:on", \$on );
   Set( \$room, "details:exit-" + \$dir + ":preposition:inside", \$in );
   Set( \$room, "details:exit-" + \$dir + ":preposition:near", \$near );
   Set( \$room, "details:exit-" + \$dir + ":preposition:over", \$over );
   Set( \$room, "details:exit-" + \$dir + ":preposition:behind", \$beh );
   Set( \$room, "details:exit-" + \$dir + ":preposition:before", \$bef );
   Set( \$room, "details:exit-" + \$dir + ":preposition:beside", \$bes );

/* Set a few properties, if checked */
/* Make sure the def will be set properly */

    if( \$def == "on" ) \{ \$def = 1; \}

   Set( \$room, "details:exit-" + \$dir + ":definite:local", \$def );
   Set( \$room, "details:exit-" + \$dir + ":luminosity:local", (float) \$lum );
   Set( \$room, "details:exit-" + \$dir + ":abstract", \$ab );
   Set( \$room, "details:exit-" + \$dir + ":hidden", \$hid );
   Set( \$room, "details:exit-" + \$dir + ":targetable-in-dark", \$tid );
   Set( \$room, "details:exit-" + \$dir + ":plural", \$plu );

/* The names and adjectives are set in the \$actor's room, if they exist. */

   if(\$sn1 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn1, \$pn1 ); \}
   if(\$sn2 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn2, \$pn2 ); \}
   if(\$sn3 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn3, \$pn3 ); \}
   if(\$sn4 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn4, \$pn4 ); \}
   if(\$sn5 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn5, \$pn5 ); \}
   if(\$sn6 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn6, \$pn6 ); \}
   if(\$sn7 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn7, \$pn7 ); \}
   if(\$sn8 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn8, \$pn8 ); \}
   if(\$sn9 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":sname:" + \$sn9, \$pn9 ); \}

   if(\$a1 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a1, 1 ); \}
   if(\$a2 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a2, 1 ); \}
   if(\$a3 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a3, 1 ); \}
   if(\$a4 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a4, 1 ); \}
   if(\$a5 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a5, 1 ); \}
   if(\$a6 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a6, 1 ); \}
   if(\$a7 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a7, 1 ); \}
   if(\$a8 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a8, 1 ); \}
   if(\$a9 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a9, 1 ); \}
   if(\$a10 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a10, 1 ); \}
   if(\$a11 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a11, 1 ); \}
   if(\$a12 != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":adjective:" + \$a12, 1 ); \}

/* Set the door/exit details, if present, in the current room */

   Set( \$room, "details:exit-" + \$dir + ":exit:door", \$door );
   Set( \$room, "details:exit-" + \$dir + ":exit:never obvious", \$never );
   Set( \$room, "details:exit-" + \$dir + ":exit:obvious_when_open", \$obvious );
   Set( \$room, "details:exit-" + \$dir + ":exit:hidden when closed", \$closed );
   Set( \$room, "details:exit-" + \$dir + ":exit:separate", \$sep );
   Set( \$room, "details:exit-" + \$dir + ":exit:self_locking", \$self );
   Set( \$room, "details:exit-" + \$dir + ":exit:deadbolt", \$deadbolt );
   if(\$keycode != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":exit:keycode", \$keycode ); \}
   if(\$climb != "" ) \{ Set( \$room, "details:exit-" + \$dir + ":exit:climbable", \$climb ); \}

/* Set the direction(s) for the exit in the current room */

   Set( \$room, "details:exit-" + \$dir + ":exit:direction:north", \$north );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:south", \$south );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:east", \$east );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:west", \$west );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:northeast", \$northeast );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:southeast", \$southeast );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:northwest", \$northwest );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:southwest", \$southwest );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:up", \$up );
   Set( \$room, "details:exit-" + \$dir + ":exit:direction:down", \$down );

/* NEW ROOM */

/* Change the directions in the description so in the new room they will mirror the directions in the \$actor's room */

if( \$look != "" ) \{ replace_strings( \$look, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$ex != "" ) \{ replace_strings( \$ex, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$brief != "" ) \{ replace_strings( \$brief, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a1 != "" ) \{ replace_strings( \$a1, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a2 != "" ) \{ replace_strings( \$a2, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a3 != "" ) \{ replace_strings( \$a3, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a4 != "" ) \{ replace_strings( \$a4, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a5 != "" ) \{ replace_strings( \$a5, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a6 != "" ) \{ replace_strings( \$a6, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a7 != "" ) \{ replace_strings( \$a7, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a8 != "" ) \{ replace_strings( \$a8, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a9 != "" ) \{ replace_strings( \$a9, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a10 != "" ) \{ replace_strings( \$a10, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a11 != "" ) \{ replace_strings( \$a11, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

if( \$a12 != "" ) \{ replace_strings( \$a12, "east", "west", "west", "east", "north", "south", "south", "north", "northwest", "northeast", "northeast", "northwest", "southeast", "southwest", "southwest", "southeast" ); \}

/* Makes sure there is an identifier for the detail ID */

if( !\$ndir ) \{ \$ndir = \$brief; \}

/* Set the door/exit details, if present, in the new room */

   Set( \$dest, "details:exit-" + \$ndir + ":exit:door", \$door );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:never-obvious", \$never );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:obvious-when-open", \$obvious );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:hidden-when-closed", \$closed );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:separate", \$sep );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:self-locking", \$self );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:deadbolt", \$deadbolt );
   if(\$keycode != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":exit:keycode", \$keycode ); \}
   if(\$climb != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":exit:climbable", \$climb ); \}

/* Set the glance, brief, look and examine in the new room */

   if(\$brief != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":description:brief", \$brief ); \}
   if(\$look != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":description:look", \$look ); \}
   if(\$ex != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":description:examine", \$ex ); \}

/* Set all of the checked prepositions in the new room */

   Set( \$dest, "details:exit-" + \$ndir + ":preposition:close to", \$close );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:against", \$ag );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:under", \$under );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:on", \$on );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:inside", \$in );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:near", \$near );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:over", \$over );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:behind", \$beh );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:before", \$bef );
   Set( \$dest, "details:exit-" + \$ndir + ":preposition:beside", \$bes );

/* Set a few more attributes, if checked, in the new room */

   Set( \$dest, "details:exit-" + \$ndir + ":definite:local", \$def );
   Set( \$dest, "details:exit-" + \$ndir + ":luminosity:local", (float) \$lum );
   Set( \$dest, "details:exit-" + \$ndir + ":abstract", \$ab );
   Set( \$dest, "details:exit-" + \$ndir + ":hidden", \$hid );
   Set( \$dest, "details:exit-" + \$ndir + ":targetableindark", \$tid );
   Set( \$dest, "details:exit-" + \$ndir + ":plural", \$plu );

/* The names and adjectives are set in the \$actor's room, if they exist. */

   if(\$sn1 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn1, \$pn1 ); \}
   if(\$sn2 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn2, \$pn2 ); \}
   if(\$sn3 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn3, \$pn3 ); \}
   if(\$sn4 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn4, \$pn4 ); \}
   if(\$sn5 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn5, \$pn5 ); \}
   if(\$sn6 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn6, \$pn6 ); \}
   if(\$sn7 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn7, \$pn7 ); \}
   if(\$sn8 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn8, \$pn8 ); \}
   if(\$sn9 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":sname:" + \$sn9, \$pn9 ); \}

   if(\$a1 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a1, 1 ); \}
   if(\$a2 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a2, 1 ); \}
   if(\$a3 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a3, 1 ); \}
   if(\$a4 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a4, 1 ); \}
   if(\$a5 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a5, 1 ); \}
   if(\$a6 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a6, 1 ); \}
   if(\$a7 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a7, 1 ); \}
   if(\$a8 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a8, 1 ); \}
   if(\$a9 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a9, 1 ); \}
   if(\$a10 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a10, 1 ); \}
   if(\$a11 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a11, 1 ); \}
   if(\$a12 != "" ) \{ Set( \$dest, "details:exit-" + \$ndir + ":adjective:" + \$a12, 1 ); \}

/* Set the direction(s) for the exit in the current room */

   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:north", \$north );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:south", \$south );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:east", \$east );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:west", \$west );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:northeast", \$northeast );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:southeast", \$southeast );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:northwest", \$northwest );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:southwest", \$southwest );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:up", \$up );
   Set( \$dest, "details:exit-" + \$ndir + ":exit:direction:down", \$down );

/* Make the exits point to each other */

   roomExit = NewNRef( \$dest, "exit-" + \$ndir );
   hereExit = NewNRef( \$room, "exit-" + \$dir );

   Set(\$room, "details:exit-" + \$dir + ":exit:dest", roomExit );
   Set(\$dest, "details:exit-" + \$ndir + ":exit:dest", hereExit );

   \$done = "You have just added the exit \\"exit-" + \$dir + "\\" to: " + Str(\$room) + ", which leads to the exit \\"exit-" + \$ndir + "\\" in the newly created: " + Str( \$dest );

   return \$"\<redirect propob=\\"\$(this)\\" prop=\\"roommenu\\" room=\\"\$(room)\\" done=\\"\$(done)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>";]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:menu">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>Room Builder Menu\</title\>
\</head\>
\<body\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>\<br/\>\<br/\>
\<div align="center"\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td height="80"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
        \<tr\>
          \<td\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
              \<tr\>
                \<td\>\<div align="center"\>ROOM BUILDING MENU\</div\>\</td\>
              \</tr\>
            \</table\>
            \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
              \<tr\>
                \<td width="325"\>\<p\>\<blockquote\>
                     \<zlink base="newroom" nactor="\$(nactor)" this="\$(this)"\>Create a room using an UrRoom\</zlink\>\<sbr/\>
                     \<zlink base="urroom" nactor="\$(nactor)" this="\$(this)"\>Create a new UrRoom\</zlink\>\<sbr/\>
                     \<zlink base="different" nactor="\$(nactor)" this="\$(this)"\>Work on an Existing Room\</zlink\>\</blockquote\>
                  \</p\>
                \</td\>
                \<td width="325"\>\<blockquote\>
                     \<zlink base="detail" nactor="\$(nactor)" this="\$(this)"\>Add a detail to a room\</zlink\>\<sbr/\>
                     \<zlink base="nexitpick" nactor="\$(nactor)" this="\$(this)"\>Create an exit to a new room\</zlink\>\<sbr/\>
                     \<zlink base="eexitpick" nactor="\$(nactor)" this="\$(this)"\>Create an exit to an existing room\</zlink\>\</blockquote\>\</td\>
              \</tr\>
          \</table\>\</td\>
        \</tr\>
      \</table\>
    \</td\>
  \</tr\>
\</table\>
\</div\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:newroom">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Room Creation - Have your UrRoom ready!\</title\>
\</head\>
\<body\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>
\<zform nactor="\$(nactor)" this="\$(this)"\>
\<sbr/\>
\<div align="center"\>\<br/\>\<br/\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
 \<tr\>
  \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
   \<tr\>
    \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
     \<tr\>
      \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: NEW ROOM
                CREATION\</div\>\</td\>
     \</tr\>
    \</table\>
     \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
      \<tr\>
       \<td width="630"\>
        \<p\>UrRoom:
        \<input name="urroom" type="text" size="75"/\>
          \<sbr/\>
                Woe Name:
        \<input name="woe" type="text" size="75"/\>
(for new room)\</p\>
            \<p align="center"\>
        \<input type="submit" name="Submit" value="Create Room!"/\>
\</p\>
       \</td\>
      \</tr\>
     \</table\>\</td\>
   \</tr\>
  \</table\>\</td\>
 \</tr\>
\</table\>
\</div\>
\<action\>
   \$[\$ur = Obj( \$urroom );
   \$room = Spawn( \$ur );
   \$room."base:objectname" = \$woe;

   \$done = "You have just created the room: " + Str(\$room);

   return \$"\<redirect propob=\\"\$(this)\\" prop=\\"roommenu\\" done=\\"\$(done)\\" room=\\"\$(woe)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>";]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:nexitpick">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Choose a room for a new exit (to a new room)\</title\>
\</head\>
\<body\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>
\<zform nactor="\$(nactor)" this="\$(this)"\>
\<sbr/\>
\<div align="center"\>\<br/\>\<br/\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
 \<tr\>
  \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
   \<tr\>
    \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
     \<tr\>
      \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: CHOOSE A ROOM FOR A NEW EXIT (TO A NEW ROOM)\</div\>\</td\>
     \</tr\>
    \</table\>
     \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
      \<tr\>
       \<td width="630"\>
        \<p\>Please enter the woe name of the room you wish to create a new exit in (that leads to a new room):\<sbr/\>
        \<input name="woe" type="text" value="Marrach:Coders:brenson:rooms:UrRooms:UrBuildTest" size="75"/\>\</p\>
            \<p align="center"\>
        \<input type="submit" name="Submit" value="Work on Room!"/\>
\</p\>
       \</td\>
      \</tr\>
     \</table\>\</td\>
   \</tr\>
  \</table\>\</td\>
 \</tr\>
\</table\>
\</div\>
\<action\>
   \$[\$"\<redirect propob=\\"\$(this)\\" prop=\\"exitnew\\" room=\\"\$(woe)\\" nactor=\\"\$(nactor)\\" this=\\"\$(this)\\"/\>"]
\</action\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:roommenu">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] Room Menu\</title\>
\</head\>
\<body\>
\<zsession room="\$(room)" nactor="\$(nactor)" this="\$(this)" done="\$(done)"\>
\<zform room="\$(room)" nactor="\$(nactor)" this="\$(this)" done="\$(done)"\>
\<div align="center"\>
\<br/\>
\<br/\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
      \<tr\>
        \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
          \<tr\>
            \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: ROOM MENU\</div\>\</td\>
          \</tr\>
        \</table\>
          \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
            \<tr\>
              \<td width="630"\>\<p\>\<font color="#336600"\>\<em\>\$(done)\</em\>\</font\>\<sbr/\>Current Room: \<font color="#CC0000"\> \$(room)\</font\>\<sbr/\>
                If you wish to work on a different room, click here:
                   \<zlink base="different" nactor="\$(nactor)" this="\$(this)"\>DIFFERENT ROOM\</zlink\>\</p\>
               \<table width="610" border="0" cellpadding="10" cellspacing="0"\>
                \<tr\>
                 \<td width="420" valign="top"\>\<p\>Please choose one option:\</p\>
                  \<p\>\<zlink base="details" room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>Add a detail to this room\</zlink\>\<sbr/\>
                   \<zlink base="exitnew" room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>Add an exit to this room, leading to a new room\</zlink\>\<sbr/\>
                   \<zlink base="exiexit" room="\$(room)" nactor="\$(nactor)" this="\$(this)"\>Add an exit to this room, leading to an existing room\</zlink\>\</p\>\</td\>
                 \<td width="190" valign="top" bgcolor="#FFFFFF"\>\<p\>Details in the current room:\<br/\>
\$[string result, *details;
  int i, sz;

  \$ob = Obj( \$room );
  result = "";
  details = \$ob."base:details";
  sz      = sizeof(details);
  for (i = 0; i \< sz; i++)
    result += "\<zlink base=\\"edit_detail\\" room=\$(ob) this=\\"\$(this)\\" nactor=\\"\$(nactor)\\" detail=\\"" + details[i] + "\\"\>edit " + details[i] + "\</zlink\>\<sbr/\>";
  return ParseXML(result);]\\\>\</p\>\</td\>
                  \</tr\>
                 \</table\>
               \</td\>
            \</tr\>
          \</table\>\</td\>
      \</tr\>
    \</table\>\</td\>
  \</tr\>
\</table\>
\</div\>
\</zform\>
\</zsession\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="html:urroom">
         X[S] \{? \| \$(UDat.Host) \|
\<html\>
\<head\>
\<title\>[Room Building Tool] UrRoom Creation\</title\>
\</head\>
\<body\>
\<div align="center"\>
\<zsession nactor="\$(nactor)" this="\$(this)"\>
\<zform nactor="\$(nactor)" this="\$(this)"\>
\<table width="700" border="1" cellpadding="10" cellspacing="0" bgcolor="#000033"\>
  \<tr\>
    \<td width="677"\>\<table width="675" border="0" cellpadding="10" cellspacing="0" bgcolor="#003366"\>
      \<tr\>
        \<td width="657"\>\<table width="650" border="1" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF"\>
          \<tr\>
            \<td width="650"\>\<div align="center"\>ROOM BUILDING TOOL: URROOM CREATION\</div\>\</td\>
          \</tr\>
        \</table\>
          \<table width="650" border="0" cellpadding="10" cellspacing="0" bgcolor="#AFD5FE"\>
            \<tr\>
              \<td width="630"\>
              \<p\>Please input the woe name you wish your UrRoom to have:\<sbr/\>
                  \<input name="woe" type="text" size="75"/\>
                  \</p\>
              \<p\>\<u\>Below corresponds to the [default] detail for your new UrRoom:\</u\>\<sbr/\>
                \<sbr/\>
                \<input type="checkbox" name="checkbox" value="def"/\>
                    def. -- False, it will add article to brief. True for definate
                    nouns.\<sbr/\>
                    \<input name="lum" type="text" id="lum" size="10"/\>
                    Luminosity --  How much light this detail contributes to
                 the total light in the room\<sbr/\>
                    \<input name="cap" type="text" id="cap" size="10"/\>
                    Capacity -- How much volume can this container hold? Values are in cubic meters (m^3) \<sbr/\>
                    \<input name="maxw" type="text" id="maxw" size="10"/\>
                    Max Weight -- What is max mass that the container can hold? Values are in kilograms (kg) \</p\>
              \<p\>Names. First box is the SName and second is the PName. e.g.
                \<input name="textfield34" type="text" value="hall" size="10"/\>
                \<input name="textfield35" type="text" value="halls" size="10"/\>
                \<sbr/\>
N1:
\<input name="sn1" type="text" id="sn1" size="10"/\>
\<input name="pn1" type="text" id="pn1" size="10"/\>
N2:
\<input name="sn2" type="text" id="sn2" size="10"/\>
\<input name="pn2" type="text" id="pn2" size="10"/\>
N3:
\<input name="sn3" type="text" id="sn3" size="10"/\>
\<input name="pn3" type="text" id="pn3" size="10"/\>
\<sbr/\>
N4:
\<input name="sn4" type="text" id="sn4" size="10"/\>
\<input name="pn4" type="text" id="pn4" size="10"/\>
N5:
\<input name="sn5" type="text" id="sn5" size="10"/\>
\<input name="pn5" type="text" id="pn5" size="10"/\>
N6:
\<input name="sn6" type="text" id="sn6" size="10"/\>
\<input name="pn6" type="text" id="pn6" size="10"/\>
\<sbr/\>
N7:
\<input name="sn7" type="text" id="sn7" size="10"/\>
\<input name="pn7" type="text" id="pn7" size="10"/\>
N8:
\<input name="sn8" type="text" id="sn8" size="10"/\>
\<input name="pn8" type="text" id="pn8" size="10"/\>
N9:
\<input name="sn9" type="text" id="sn9" size="10"/\>
\<input name="pn9" type="text" id="pn9" size="10"/\>
              \</p\>
              \<p\>Adjectives. (Not all boxes need to be filled in)\<sbr/\>
                \<input name="a1" type="text" id="a1" size="15"/\>
                \<input name="a2" type="text" id="a2" size="15"/\>
                \<input name="a3" type="text" id="a3" size="15"/\>
                \<input name="a4" type="text" id="a4" size="15"/\>
                \<input name="a5" type="text" id="a5" size="15"/\>
                \<input name="a6" type="text" id="a6" size="15"/\>
                \<sbr/\>
                \<input name="a7" type="text" id="a7" size="15"/\>
                \<input name="a8" type="text" id="a8" size="15"/\>
                \<input name="a9" type="text" id="a9" size="15"/\>
                \<input name="a10" type="text" id="a10" size="15"/\>
                \<input name="a11" type="text" id="a11" size="15"/\>
                \<input name="a12" type="text" id="a12" size="15"/\>
\</p\>
              \<p\>Brief:
                    \<input name="brief" type="text" size="75"/\>
                      \<sbr/\>
                      Glance \<sbr/\>
                      \<textarea name="glance" cols="75" rows="3"/\>
                      \<sbr/\>
                      Look:\<sbr/\>
                      \<textarea name="look" cols="75" rows="3"/\>
                      \<sbr/\>
                      Examine:\<sbr/\>
                      \<textarea name="examine" cols="75" rows="5"/\>
                    \</p\>
              \<p align="center"\>
                \<input type="submit" name="Submit" value="Create New UrRoom!"/\>
\</p\>
                \<p\>\\\&nbsp;\</p\>
                \</td\>
            \</tr\>
          \</table\>\</td\>
      \</tr\>
    \</table\>\</td\>
  \</tr\>
\</table\>
\<action\>
   \$[\$actor = Obj( \$nactor );
   \$room = Duplicate( \$\{Neoct:Data:Types:Object\} );
   \$room."base:objectname" = \$woe;

/* Make sure the def will be set properly */

    if( \$def == "on" )
     \{
       \$def = 1;
     \}


/* Set the glance, brief, look and examine for the exit of the \$actor's current room */

   if(\$brief != "" ) \{ Set( \$room, "details:default:description:brief", \$brief ); \}
   if(\$look != "" ) \{ Set( \$room, "details:default:description:look", \$look ); \}
   if(\$ex != "" ) \{ Set( \$room, "details:default:description:examine", \$ex ); \}
   if(\$glance != "" ) \{ Set( \$room, "details:default:description:glance", \$glance ); \}


/* Set a few things, if they are checked, in the \$actor's room */

   Set( \$room, "details:default:definite:local", \$def );
   Set( \$room, "details:default:prime", 1 );
   if( \$lum != "" ) \{ Set( \$room, "details:default:luminosity:local", (float) \$lum ); \}
   if( \$cap != "" ) \{ Set( \$room, "base:intrinsiccapacity", (float) \$cap ); \}
   if( \$maxw != "" ) \{ Set( \$room, "base:maxweight", (float) \$maxw ); \}

/* The names and adjectives are set in the \$actor's room, if they exist. */

   if(\$sn1 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn1, \$pn1 ); \}
   if(\$sn2 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn2, \$pn2 ); \}
   if(\$sn3 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn3, \$pn3 ); \}
   if(\$sn4 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn4, \$pn4 ); \}
   if(\$sn5 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn5, \$pn5 ); \}
   if(\$sn6 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn6, \$pn6 ); \}
   if(\$sn7 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn7, \$pn7 ); \}
   if(\$sn8 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn8, \$pn8 ); \}
   if(\$sn9 != "" ) \{ Set( \$room, "details:default:sname:" + \$sn9, \$pn9 ); \}

   if(\$a1 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a1, 1 ); \}
   if(\$a2 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a2, 1 ); \}
   if(\$a3 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a3, 1 ); \}
   if(\$a4 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a4, 1 ); \}
   if(\$a5 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a5, 1 ); \}
   if(\$a6 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a6, 1 ); \}
   if(\$a7 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a7, 1 ); \}
   if(\$a8 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a8, 1 ); \}
   if(\$a9 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a9, 1 ); \}
   if(\$a10 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a10, 1 ); \}
   if(\$a11 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a11, 1 ); \}
   if(\$a12 != "" ) \{ Set( \$room, "details:default:adjective:" + \$a12, 1 ); \}

   \$done = "You have just recreate the UrRoom: " + Str(\$room);

   return \$"\<redirect propob=\\"\$(this)\\" prop=\\"roommenu\\" room=\\"\$(woe)\\" done=\\"\$(done)\\" nactor=\\"\$(actor)\\" this=\\"\$(this)\\"/\>";]
\</action\>
\</zform\>
\</zsession\>
\</div\>
\</body\>
\</html\>
 \| \<h1\>Access denied!\</h1\> \}
      </Core:Property>
      <Core:Property property="merry:global:command">
         X[M] constant HELP = "Usage: +roombuild\\n\\nThis brings up a popup window which will direct you. The popup window is only supported on Skotos clients. If you do not use a Skotos supported client (Alice, Zealous, or Java) then you are urged to switch if possible.\\n\\nFor more instructions type: +man roombuild\\n";

if (!\$(dob:words))\{
  EmitTo( \$actor, " " );
  EmitTo( \$actor, "[Room Building] Bringing up the Room Building menu. If you are not using a skotos supported client, I fear you are out of luck." );
  Popup( \$actor, this, "html:menu", \$nactor: \$actor, \$this: this );
  return FALSE;
\}

EmitTo( \$actor, HELP );
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1063684541, "kylass", "E", 1065110208, "kylass", "E", 1065110226, "kylass", "E", 1065110303, "kylass", "E", 1065113554, "kylass", "E", 1065113620, "kylass", "E", 1065114103, "kylass", "E", 1065152771, "kylass", "P", 1065153453, "kylass", "P", 1065153514, "kylass", "P", 1065153536, "kylass", "P", 1065153541, "kylass", "P", 1065153631, "kylass", "P", 1065153662, "kylass", "P", 1065154291, "kylass", "E", 1065154347, "kylass", "E", 1065154927, "kylass", "P", 1065155001, "kylass", "E", 1065156458, "kylass", "P", 1065283210, "kylass", "E", 1065283318, "kylass", "P", 1065283604, "kylass", "P", 1065284107, "kylass", "P", 1065285080, "kylass", "P", 1065285259, "kylass", "P", 1065285367, "kylass", "P", 1065285681, "kylass", "P", 1065286173, "kylass", "P", 1065286218, "kylass", "P", 1065286319, "kylass", "P", 1065286327, "kylass", "P", 1065286419, "kylass", "P", 1065286430, "kylass", "P", 1065286439, "kylass", "P", 1065286450, "kylass", "P", 1065286777, "kylass", "P", 1065287640, "kylass", "P", 1065288290, "kylass", "P", 1065288366, "kylass", "P", 1065288467, "kylass", "P", 1065289055, "kylass", "P", 1065289427, "kylass", "P", 1065289816, "kylass", "E", 1065302743, "kylass", "P", 1065303022, "kylass", "P", 1065303328, "kylass", "P", 1065303533, "kylass", "P", 1065303579, "kylass", "P", 1065329835, "kylass", "P", 1065330039, "kylass", "P", 1065330540, "kylass", "P", 1065330714, "kylass", "P", 1065367350, "kylass", "P", 1065367403, "kylass", "P", 1065367462, "kylass", "P", 1065367497, "kylass", "P", 1065369934, "kylass", "P", 1065370576, "kylass", "P", 1065371340, "kylass", "P", 1065371740, "kylass", "P", 1065371777, "kylass", "P", 1065371880, "kylass", "P", 1065371903, "kylass", "P", 1065371934, "kylass", "P", 1065372001, "kylass", "P", 1065372101, "kylass", "P", 1065372285, "kylass", "P", 1065458894, "kylass", "P", 1065459524, "kylass", "P", 1065460435, "kylass", "P", 1065461451, "kylass", "P", 1065462027, "kylass", "P", 1065462178, "kylass", "E", 1065462245, "kylass", "P", 1065467519, "kylass", "P", 1065467613, "kylass", "P", 1065468699, "kylass", "P", 1065469909, "kylass", "P", 1065469968, "kylass", "P", 1065470004, "kylass", "P", 1065472770, "kylass", "P", 1065496576, "kylass", "P", 1065496842, "kylass", "P", 1065496995, "kylass", "P", 1065497505, "kylass", "P", 1065498835, "kylass", "P", 1065498899, "kylass", "P", 1065500993, "kylass", "P", 1065501745, "kylass", "P", 1065502017, "kylass", "P", 1065502106, "kylass", "P", 1065502158, "kylass", "P", 1065982458, "kylass", "P", 1065982551, "kylass", "P", 1065982631, "kylass", "P", 1065983000, "kylass", "P", 1065983085, "kylass", "P", 1065983170, "kylass", "P", 1065983591, "kylass", "P", 1065983650, "kylass", "P", 1066093489, "kylass", "P", 1066093536, "kylass", "P", 1066093597, "kylass", "P", 1066093688, "kylass", "P", 1066093764, "kylass", "P", 1066108685, "kylass", "P", 1066108985, "kylass", "P", 1066109030, "kylass", "P", 1066109095, "kylass", "P", 1066109168, "kylass", "P", 1066109349, "kylass", "P", 1066109434, "kylass", "P", 1067005382, "kylass", "P", 1067005763, "kylass", "P", 1067005815, "kylass", "P", 1067024753, "kylass", "P", 1067047755, "kylass", "P", 1067047907, "kylass", "P", 1067047947, "kylass", "P", 1067047969, "kylass", "P", 1067107106, "kylass", "P", 1067107649, "kylass", "P", 1067107807, "kylass", "P", 1067107960, "kylass", "P", 1067108196, "kylass", "P", 1067108483, "kylass", "P", 1067111068, "kylass", "P", 1067112890, "kylass", "P", 1067383956, "kylass", "P", 1067385482, "kylass", "E", 1067385739, "kylass", "E", 1067385817, "kylass", "E", 1067386065, "kylass", "P", 1067386201, "kylass", "P", 1067390138, "kylass", "P", 1067390289, "kylass", "P", 1067390585, "kylass", "P", 1067390901, "kylass", "P", 1067390968, "kylass", "P", 1067393441, "kylass", "P", 1067393730, "kylass", "P", 1067394223, "kylass", "P", 1067466513, "kargh", "P", 1067466591, "kargh", "P", 1067466640, "kargh", "P", 1067466838, "kargh", "P", 1067466920, "kargh", "P", 1067467773, "kylass", "P", 1067526464, "kylass", "P", 1067643009, "kylass", "P", 1067643997, "kylass", "P", 1067644483, "kylass", "P", 1067644955, "kylass", "P", 1067662568, "kylass", "P", 1067662765, "kylass", "P", 1067663728, "kylass", "P", 1067664476, "kylass", "P", 1067742720, "kylass", "P", 1067743618, "kylass", "P", 1067804151, "kylass", "P", 1068523540, "kylass", "P", 1068523577, "kylass", "P", 1068523877, "kylass", "P", 1068524228, "kylass", "P", 1068524495, "kylass", "P", 1068525009, "kylass", "P", 1068525335, "kylass", "P", 1068525460, "kylass", "P", 1068526122, "kylass", "P", 1068526298, "kylass", "P", 1068526657, "kylass", "P", 1068526772, "kylass", "P", 1068526888, "kylass", "P", 1068527139, "kylass", "P", 1068527353, "kylass", "P", 1068527789, "kylass", "P", 1068783129, "kylass", "P", 1068783551, "kylass", "P", 1068783845, "kylass", "P", 1068784023, "kylass", "P", 1068785598, "kylass", "P", 1068785876, "kylass", "P", 1068786600, "kylass", "P", 1080018706, "kylass", "P", 1080018785, "kylass", "P", 1080018837, "kylass", "P", 1080020588, "kylass", "P", 1084409429, "kylass", "E", 1086289788, "kylass", "P", 1092088122, "kylass", "P", 1097110914, "kylass", "P", 1097111320, "kylass", "P", 1097112924, "kylass", "P", 1097113021, "kylass", "P", 1097113069, "kylass", "P", 1097113308, "kylass", "P", 1097115013, "kylass", "P", 1099153465, "kylass", "P", 1099153500, "kylass", "P", 1099153515, "kylass", "P", 1099153885, "kylass", "P", 1099153952, "kylass", "P", 1099154066, "kylass", "P", 1099154174, "kylass", "P", 1099154355, "kylass", "P", 1099154436, "kylass", "P", 1099154520, "kylass", "P", 1099154578, "kylass", "P", 1099156131, "kylass", "P", 1099157267, "kylass", "P", 1099157372, "kylass", "P", 1099157440, "kylass", "P", 1099157501, "kylass", "P", 1099157698, "kylass", "P", 1099158236, "kylass", "P", 1099158493, "kylass", "P", 1099158643, "kylass", "P", 1099159464, "kylass", "P", 1099159586, "kylass", "P", 1099159630, "kylass", "P", 1099159868, "kylass", "P", 1099160004, "kylass", "P", 1099160440, "kylass", "P", 1099160489, "kylass", "P", 1099160878, "kylass", "P", 1099161037, "kylass", "P", 1099161576, "kylass", "P", 1099161761, "kylass", "P", 1099162056, "kylass", "P", 1099163545, "kylass", "P", 1099163949, "kylass", "P", 1099164235, "kylass", "P", 1099165397, "kylass", "P", 1099169856, "kylass", "P", 1099170062, "kylass", "P", 1099170496, "kylass", "P", 1099171146, "kylass", "P", 1099171988, "kylass", "P", 1099174196, "kylass", "P", 1099174848, "kylass", "P", 1099175571, "kylass", "P", 1099193737, "kylass", "P", 1099193873, "kylass", "P", 1099194145, "kylass", "P", 1099195916, "kylass", "P", 1099196374, "kylass", "P", 1099196467, "kylass", "P", 1099201143, "kylass", "P", 1099201236, "kylass", "P", 1099201308, "kylass", "P", 1099201441, "kylass", "P", 1099245238, "kylass", "P", 1099245464, "kylass", "P", 1099245546, "kylass", "P", 1099246565, "kylass", "P", 1099246629, "kylass", "P", 1099246843, "kylass", "P", 1099246971, "kylass", "P", 1099247175, "kylass", "P", 1099247962, "kylass", "P", 1099248464, "kylass", "P", 1099342022, "kylass", "P", 1099342243, "kylass", "P", 1099342575, "kylass", "P", 1099342615, "kylass", "P", 1099342989, "kylass", "P", 1099343137, "kylass", "P", 1099343189, "kylass", "P", 1099343220, "kylass", "P", 1099343417, "kylass", "P", 1099343698, "kylass", "P", 1099343802, "kylass", "P", 1099344185, "kylass", "P", 1099344404, "kylass", "P", 1099344949, "kylass", "P", 1099345027, "kylass", "P", 1099345646, "kylass", "P", 1099345836, "kylass", "P", 1099345943, "kylass", "P", 1099346291, "kylass", "P", 1099346919, "kylass", "P", 1099347386, "kylass", "P", 1099347930, "kylass", "P", 1099348132, "kylass", "P", 1099348372, "kylass", "P", 1099348572, "kylass", "P", 1099355617, "kylass", "P", 1099356207, "kylass", "P", 1099357363, "kylass", "P", 1099357525, "kylass", "P", 1099357577, "kylass", "P", 1099357670, "kylass", "P", 1099357799, "kylass", "P", 1099359668, "kylass", "P", 1099359849, "kylass", "P", 1099359989, "kylass", "P", 1099360212, "kylass", "P", 1099360475, "kylass", "P", 1099360771, "kylass", "P", 1099360960, "kylass", "P", 1099361015, "kylass", "P", 1099361147, "kylass", "P", 1099361306, "kylass", "P", 1099363315, "kylass", "P", 1099363507, "kylass", "P", 1099363925, "kylass", "P", 1099366085, "kylass", "P", 1099366790, "kylass", "P", 1099367618, "kylass", "P", 1099368217, "kylass", "P", 1099368874, "kylass", "P", 1099369583, "kylass", "P", 1099369910, "kylass", "P", 1099370044, "kylass", "P", 1099370520, "kylass", "P", 1099371975, "kylass", "P", 1099372305, "kylass", "P", 1099372718, "kylass", "P", 1099372860, "kylass", "P", 1099373792, "kylass", "P", 1099374792, "kylass", "P", 1099375049, "kylass", "P", 1099375150, "kylass", "P", 1099375507, "kylass", "P", 1099375784, "kylass", "P", 1099376843, "kylass", "P", 1099376987, "kylass", "P", 1099377179, "kylass", "P", 1099416070, "kylass", "P", 1099416088, "kylass", "P", 1099416857, "kylass", "P", 1099417123, "kylass", "P", 1099419306, "kylass", "P", 1099419337, "kylass", "P", 1099419440, "kylass", "P", 1099419565, "kylass", "P", 1099419737, "kylass", "P", 1099420515, "kylass", "P", 1099420587, "kylass", "P", 1099421326, "kylass", "P", 1099421498, "kylass", "P", 1099421575, "kylass", "P", 1099421619, "kylass", "P", 1099421728, "kylass", "P", 1099422077, "kylass", "P", 1099422125, "kylass", "P", 1099422285, "kylass", "P", 1099422561, "kylass", "P", 1099424478, "kylass", "P", 1099424544, "kylass", "P", 1099429228, "kylass", "P", 1099429280, "kylass", "P", 1099429327, "kylass", "P", 1099438572, "kylass", "P", 1099438612, "kylass", "P", 1099438720, "kylass", "P", 1099453923, "kylass", "P", 1099454930, "kylass", "P", 1099455130, "kylass", "P", 1099455463, "kylass", "P", 1099455510, "kylass", "P", 1099455559, "kylass", "P", 1099455863, "kylass", "P", 1099531395, "kylass", "P", 1099532622, "kylass", "E", 1099542075, "kylass", "P", 1100672537, "kylass", "P", 1100987340, "kylass", "P", 1101007008, "kylass", "P", 1101007035, "kylass", "P", 1101007059, "kylass", "P", 1101007078, "kylass", "P", 1101007124, "kylass", "P", 1101007164, "kylass", "P", 1101007185, "kylass", "P", 1101007205, "kylass", "P", 1101007294, "kylass", "P", 1101007339, "kylass", "P", 1101007368, "kylass", "P", 1101007386, "kylass", "P", 1101007403, "kylass", "P", 1101008647, "kylass", "P", 1101008813, "kylass", "P", 1101008837, "kylass", "P", 1101008910, "kylass", "P", 1101009902, "kylass", "P", 1101010129, "kylass", "P", 1101011160, "kylass", "P", 1101011212, "kylass", "P", 1101011416, "kylass", "P", 1102310657, "kylass", "P", 1186005563, "nino", "E" \})
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
