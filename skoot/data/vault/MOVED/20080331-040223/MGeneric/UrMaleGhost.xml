<object clone="/base/obj/thing" owner="TextIF">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(MGeneric:UrMale)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ghost"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ghosts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {a spectral|a ghostly|a translucent|an ethereal} {? equal | $(this.trait:title) | none ||$(this.trait:title) }$(this.trait:superbrief){? | $(this.death:dead) | (Deceased)}
          </Base:Description>
          <Base:Description type="examine">
             {? equal | $(this.trait:override:examine) | none |<describe what="$(this)" cap="1" nonposs="1"/> is {a spectral|a ghostly|a translucent|an ethereal} {? equal | $(this.appearance:height) | ordinary |{? equal | $(this.appearance:build) | ordinary |<describe-prop what="trait:sex"/>|<describe-prop what="appearance:build"/> $(this.trait:sex)}|<describe-prop what="appearance:height"/>{? equal | $(this.appearance:build) | ordinary ||, $(this.appearance:build)} $(this.trait:sex)}{? equal | $(this.appearance:skin) | ordinary || of $(this.appearance:skin) complexion} with $(this.trait:hair:look){? | $(this.alteration:facialhair) |{? equal | $(this.alteration:facialhair) | none || and a $(this.alteration:facialhair:faciallength) $(this.alteration:facialhair) }|}.{? | $(this.appearance:examinedescpart) | $(this.appearance:examinedescpart)}{? | $(this.state:description) | You can see $(this.trait:nominative) is $(this.state:description).}|$(this.trait:override:examine)}{ As you {look at|glance at|peer at} $(this.trait:brief) you realize that $(this.trait:nominative) {appears|seems} to be {faintly glowing with a pale light|partially see-through|somewhat transparent|translucent|spectral|ghostly|shadowy}. }
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.trait:override:look) | none |<describe what="$(this)" cap="1" nonposs="1"/> is {? equal | $(this.appearance:height) | ordinary |{? equal | $(this.appearance:build) | ordinary |<describe-prop what="trait:sex"/>|<describe-prop what="appearance:build"/> $(this.trait:sex)}|<describe-prop what="appearance:height"/>{? equal | $(this.appearance:build) | ordinary ||, $(this.appearance:build)} $(this.trait:sex)}{? equal | $(this.appearance:skin) | ordinary || of $(this.appearance:skin) complexion} with $(this.trait:hair:look){? | $(this.alteration:facialhair) |{? equal | $(this.alteration:facialhair) | none || and a $(this.alteration:facialhair:faciallength) $(this.alteration:facialhair)}|}.$[Call(NRefOb($target),"makelookwounddesc",$this: this)]|$(this.trait:override:look)}{ As you {look at|glance at|peer at} $(this.trait:brief) you realize that $(this.trait:nominative) {appears|seems} to be {faintly glowing with a pale light|partially see-through|somewhat transparent|translucent|spectral|ghostly|shadowy}. }
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="theatre:notwhobody">
         1
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="merry:inherit:act-post:enter">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:enter">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:grab">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:hit">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:move">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:poke">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:punch">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:run">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:sense/touch">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:tap">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:contact">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:movement">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:touching">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:grab-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:grasp-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:hit-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:hold-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:kick-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:poke-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:press-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:punch-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:push-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:sense/touch-dob">
         \<MGeneric:DB:UrGhostDB\>
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1074463840, "tomdowd", "?", 1074918114, "tomdowd", "X", 1075670029, "tomdowd", "E", 1075670493, "tomdowd", "E", 1075672241, "tomdowd", "E", 1075681956, "tomdowd", "E", 1075682127, "tomdowd", "E", 1075683163, "tomdowd", "E", 1075683690, "tomdowd", "E", 1075683735, "tomdowd", "E", 1075684517, "tomdowd", "E", 1075684587, "tomdowd", "X", 1075686572, "tomdowd", "E", 1075686816, "tomdowd", "E", 1075687428, "tomdowd", "E", 1094065389, "zwoc", "X", 1124249037, "tomdowd", "E", 1133971303, "tomdowd", "K", 1133971483, "tomdowd", "X", 1135870617, "zwoc", "E", 1137462423, "tomdowd", "K", 1137462696, "tomdowd", "K", 1177333499, "nino", "E", 1206950544, "???", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="theatre:notwhobody">1</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1074463760" state="Comment" user="Geist">
           JAN 18 2004 - created as testbed for MGeneric UrGhost. When completed, core components will be moved to UrMaleGhost.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
