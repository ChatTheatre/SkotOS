<object clone="/usr/SkotOS/obj/meracha" owner="fyth">
  <SkotOS:MerAcHa action_id="task_build">
    <Core:PCProperties>
      <Core:Property property="merry:global:action">
         X[M] /* taskbuild action - gives syntax and current info*/
\$notool="using ";
if ((\$using)\&\&(\$using[0]))\{
  if (!\$using[0]."merry:lib:item_barray")\{
    EmitTo(\$actor,""+Describe(\$using[0])+" is not a valid set of craft tools.");
    return FALSE;
  \}
  \$loc=\$using[0];
\}
else\{
  \$loc=\$actor."base:environment";
  if (!\$loc."merry:lib:item_barray") \$nogo=TRUE;
  \$notool="at ";
\}
if ((\$dob)\&\&(\$dob[0])\&\&(!\$nogo))\{
  \$dobo=\$dob[0];
  \$dobodet=NRefDetail(\$dobo);
  \$dobo=NRefOb(\$dobo);
  \$dobodet="details:"+\$dobodet+":snames";
  \$dobo=Get(\$dobo,\$dobodet);
  \$dobo=\$dobo[0];
  /* get \$item_type by finding \$dobo in \$item_array */
  \$itemr=Call(\$loc,"item_barray");
  if ((\$itemr)\&\&(\$itemr[0]))\{
    \$i=0;
    \$found=FALSE;
    while ((\$i\<sizeof(\$itemr))\&\&(!\$found))\{
      \$item_type=\$itemr[\$i];
      \$item_name=\$item_type."details:default:snames"[0];
      if (\$item_name==\$dobo) \$found=TRUE;
      \$i++;
    \}
    if (!\$found)\{
      EmitTo(\$actor,"You can't build this "+\$notool+Describe(\$loc,nil,\$actor)+".");
      return FALSE;
    \}
  \}
  else\{
    EmitTo(\$actor,"You can't build this "+\$notool+Describe(\$loc,nil,\$actor)+".");
    return FALSE;
  \}
  if (\$adverb)\{
    switch(\$adverb)\{
      case "poorly": \$item_q="poor"; break;
      case "commonly": \$item_q="common"; break;
      case "normally": \$item_q="normal"; break;
      case "expertly": \$item_q="expert"; break;
      case "superbly": \$item_q="superb"; break;
      case "masterfully": \$item_q="master"; break;
      case "perfectly": \$item_q="perfect";
    \}
  \}
  if (!\$item_q)\{
    EmitTo(\$actor,"Qualities available: [poor/common/normal/superb/expert/master/perfect]");
    return FALSE;
  \}
  \$item_qnum=Call(nil /* defunct */,"qnum",\$qnum_str: \$item_q);
  /* success: update task properties and emit success txt */
  \$actor."task[type]" = "build";
  \$actor."task[what]" = \$item_type;
  \$actor."task[qual]" = \$item_qnum;
  \$actor."task[tool]" = nil;
  if (\$notool=="using ") \$actor."task[tool]" = \$loc;
  EmitTo(\$actor,"Job Set: Building "+Describe(\$item_type)+" ("+\$item_q+") "+\$notool+Describe(\$loc)+".");
  return FALSE;
\}
EmitTo(\$actor,"Syntax: taskbuild [item] [quality] [using tool]");
if (!\$loc."merry:lib:item_barray")\{
  EmitTo(\$actor,"You can't build here, there are no tools publicly available.");
  return FALSE;
\}
\$outputstr=\$notool+Describe(\$loc)+" you may build:\\n";
\$itemr=Call(\$loc,"item_barray");
for (\$i=0;\$i\<sizeof(\$itemr);\$i++)\{
  \$itemtxt=\$itemr[\$i]."details:default:snames"[0];
  \$outputstr+=" "+\$itemtxt;
  if (\$i+1\<sizeof(\$itemr)) \$outputstr+=",";
\}
if (\$loc."merry:lib:spec_barray")\{
  \$itemr=Call(\$loc,"spec_barray");
  for (\$i=0;\$i\<sizeof(\$itemr);\$i++)\{
    \$itemtxt=\$itemr[\$i]."details:default:snames"[0];
    if (1==1)\{
      \$outputstr+=", ";
      \$outputstr+=""+\$itemtxt;
    \}
  \}
\}
EmitTo(\$actor,""+\$outputstr);
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1186174365, "-", "SYNC" \})
      </Core:Property>
    </Core:PCProperties>
  </SkotOS:MerAcHa>
</object>
