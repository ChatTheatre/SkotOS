<object clone="/base/obj/thing" owner="Generic">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Generic:UrClothingPairNoWear)"/>
    <Base:Bulk immobile="false" mass="0.2" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="g"/>
            <Base:SName sname="glove"/>
            <Base:SName sname="handwear"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="gloves"/>
            <Base:PName pname="handwears"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="boxing"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:brief)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:Covered value="wrist-right"/>
      <Base:Covered value="wrist-left"/>
      <Base:Covered value="hand-right"/>
      <Base:Covered value="hand-left"/>
      <Base:Covered value="fingers-right"/>
      <Base:Covered value="fingers-left"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="bilbo:solo:refresh">
         "run"
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:solo:refresh:0010">
         "set this.zcode to \$lookup(Generic:DB:CodeDB) :: set this.zdata to \$lookup(Generic:DB:DataDB) :: set this.zcnt to 1 :: set this.zmax to \$element(this.zdata,#inherits,0)"
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:solo:refresh:0020">
         "set this.ztemp to \$element(this.zdata,#inherits,\$prop(this.zcnt)) :: set this.bilbo:inherit:\$prop(this.ztemp) to \$prop(this.zcode)"
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:solo:refresh:0030">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(this.zmax) then goto 0020"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:brief">
         "plain boxing gloves"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:comment">
         "They are adequately padded to provide both punching power and appropriate hand protection, with laces on the back to be tightened around the wrist."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:default-skill">
         "Glover"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:default-skillname">
         "alter"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:default-skillverb">
         "alter"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:fit:expert">
         "Glover"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:material:expert">
         "Glover"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:superbrief">
         "boxing gloves"
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="#color[0]">"12"</Core:Property>
      <Core:Property property="#color[10]">"blue"</Core:Property>
      <Core:Property property="#color[11]">"yellow"</Core:Property>
      <Core:Property property="#color[12]">"violet"</Core:Property>
      <Core:Property property="#color[1]">"none"</Core:Property>
      <Core:Property property="#color[2]">"natural"</Core:Property>
      <Core:Property property="#color[3]">"black"</Core:Property>
      <Core:Property property="#color[4]">"grey"</Core:Property>
      <Core:Property property="#color[5]">"beige"</Core:Property>
      <Core:Property property="#color[6]">"white"</Core:Property>
      <Core:Property property="#color[7]">"brown"</Core:Property>
      <Core:Property property="#color[8]">"red"</Core:Property>
      <Core:Property property="#color[9]">"green"</Core:Property>
      <Core:Property property="#material[0]">"6"</Core:Property>
      <Core:Property property="#material[1]">"none"</Core:Property>
      <Core:Property property="#material[2]">
         "leather"
      </Core:Property>
      <Core:Property property="#material[3]">
         "cotton"
      </Core:Property>
      <Core:Property property="#material[4]">
         "velveteen"
      </Core:Property>
      <Core:Property property="#material[5]">
         "lambskin"
      </Core:Property>
      <Core:Property property="#material[6]">
         "brocade"
      </Core:Property>
      <Core:Property property="#traits[0]">"4"</Core:Property>
      <Core:Property property="#traits[1]">"color"</Core:Property>
      <Core:Property property="#traits[2]">
         "material"
      </Core:Property>
      <Core:Property property="#traits[3]">"fit"</Core:Property>
      <Core:Property property="#traits[4]">"symbol"</Core:Property>
      <Core:Property property="bilbo:auto:start">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0010">
         "set this.isplain to true :: set this.zcode to \$lookup(Generic:DB:CodeDB) :: set this.zdata to \$lookup(Generic:DB:DataDB) :: set this.zcnt to 1 :: set this.zmax to \$element(this.zdata,#inherits,0) :: if \$prop(this.trait:variant) \<\> nil then set this.ztemp to \$sam(\<add-adj adjective=\\"\$this.trait:variant\\" obj=\\"\$this\\" detail=\\"default\\"/\>)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0020">
         "set this.ztemp to \$element(this.zdata,#inherits,\$prop(this.zcnt)) :: set this.bilbo:inherit:\$prop(this.ztemp) to \$prop(this.zcode)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0030">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(this.zmax) then goto 0020"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0040">
         "rem CHECK FOR OBJECT-SPECIFIC INHERITS"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0050">
         "if \$prop(this.trait:codeobject) = nil then goto 0090 else if \$prop(this.trait:dataobject) = nil then goto 0090"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0060">
         "set this.zcode to \$lookup(\$prop(this.trait:codeobject)) :: set this.zdata to \$lookup(\$prop(this.trait:dataobject)) :: set this.zcnt to 1 :: set this.zmax to \$element(this.zdata,#inherits,0)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0070">
         "set this.ztemp to \$element(this.zdata,#inherits,\$prop(this.zcnt)) :: set this.bilbo:inherit:\$prop(this.ztemp) to \$prop(this.zcode)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0080">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(this.zmax) then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0090">
         "rem HANDLE PREDEFINED TRAITS"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0100">
         "set this.zcnt to 1 :: set this.zmax to \$element(this,#traits,0)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0110">
         "set this.ztrait to \$element(this,#traits,\$prop(this.zcnt)) :: set this.zval to this.trait:\$prop(this.ztrait) :: if \$prop(this.zval) = nil then goto 0150 else if \$prop(this.zval) = none then goto 0150"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0120">
         "set this.isplain to nil :: set this.zdetail to this.trait:\$prop(this.ztrait):detail :: if \$prop(this.zdetail) = nil then set this.zdetail to default"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0130">
         "set this.ztemp to \$sam(\<add-adj adjective=\\"\$this.zval\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: if \$prop(this.ztrait) \<\> symbol then goto 0150"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0140">
         "set this.ztemp to \$sam(\<add-name name=\\"\$this.zval\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: set this.ztemp to \$sam(\<add-name name=\\"\$this.trait:symboltype\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: set this.ztemp to \$sam(\<add-name name=\\"symbol\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: set this.ztemp to \$sam(\<add-name name=\\"pattern\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0150">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(this.zmax) then goto 0110"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0160">
         "rem HANDLE CLONES"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0170">
         "if \$prop(this.clone) = nil then goto 0320"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0180">
         "set this.zcnt to 1 :: set this.zmax to \$element(this,#traits,0)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0190">
         "set this.ztrait to \$element(this,#traits,\$prop(this.zcnt)) :: set this.zval to \$obj(this.clone).trait:\$prop(this.ztrait) :: if \$prop(this.zval) = nil then goto 0230 else if \$prop(this.zval) = none then goto 0230"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0200">
         "set this.isplain to nil :: set this.trait:\$prop(this.ztrait) to \$prop(this.zval) :: set this.zdetail to this.trait:\$prop(this.ztrait):detail :: if \$prop(this.zdetail) = nil then set this.zdetail to default"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0210">
         "set this.ztemp to \$sam(\<add-adj adjective=\\"\$this.zval\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: if \$prop(this.ztrait) \<\> symbol then goto 0230"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0220">
         "set this.ztemp to \$sam(\<add-name name=\\"\$this.zval\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: set this.ztemp to \$sam(\<add-name name=\\"\$this.trait:symboltype\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: set this.ztemp to \$sam(\<add-name name=\\"symbol\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>) :: set this.ztemp to \$sam(\<add-name name=\\"pattern\\" obj=\\"\$this\\" detail=\\"\$this.zdetail\\"/\>)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0230">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(this.zmax) then goto 0190"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0240">
         "rem HANDLE CLONED BOOKS \& CATALOGS"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0250">
         "set this.zcnt to 0 :: if \$prop(other.trait:pagecnt) = nil then goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0260">
         "if \$prop(this.zcnt) \< 10 then set this.zval to 0\$prop(this.zcnt) else set this.zval to \$prop(this.zcnt)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0270">
         "set this.ztemp to other.trait:page\$prop(this.zval) :: if \$prop(this.ztemp) \<\> nil then set this.trait:\$prop(this.zval) to \$prop(this.ztemp)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0280">
         "set this.ztemp to other.trait:item:page\$prop(this.zval) :: if \$prop(this.ztemp) \<\> nil then set this.trait:item:\$prop(this.zval) to \$prop(this.ztemp)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0290">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(other.trait:pagecnt) then goto 0260"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0300">
         "rem EXIT CLONE"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0310">
         "set this.trait:editor to \$brief(actor) [\$date] :: set this.zval to \$obj(this.clone).trait:mastermark :: if \$prop(this.zval) \<\> nil then set this.trait:mastermark to \$prop(this.zval)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0320">
         "rem GENERAL EXIT"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0330">
         "if this.isplain \<\> nil then set this.ztemp to \$sam(\<add-adj adjective=\\"plain\\" obj=\\"\$this\\" detail=\\"default\\"/\>)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0340">
         "call bilbo:react:descsub"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0350">
         "set this.isplain to nil :: set this.clone to nil :: set this.ztrait to nil :: set this.zval to nil :: set this.trait:codeobject to nil :: set this.trait:dataobject to nil :: set this.zcode to nil :: set this.zdata to nil :: set this.zcnt to nil :: set this.zmax to nil :: set this.ztemp to nil :: call this.bilbo:react:exitsub"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0010">
         "if \$evoke0 \> 0 then goto 0120 // NO EVOKE"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0020">
         "set this.tmax to \$element(this,#traits,0) :: if \$prop(this.tmax) \> 0 then goto 0040"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0030">
         "emit.actor Your !morph of \$brief(this) detects no editable traits. :: set this.tmax to nil :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0040">
         "set this.tcnt to 1 :: emit.actor Your !morph of \$brief(this) detects \$prop(this.tmax) traits that you can edit:\<br/\>"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0050">
         "set this.tname to \$element(this,#traits,\$prop(this.tcnt)) :: set this.xtrait to \$prop(this.tname) :: set this.tnow to this.trait:\$prop(this.tname) :: set this.tnow to \$prop(\$prop(this.tnow)) :: set this.omax to \$element(this,#\$prop(this.tname),0)] :: set this.ocnt to 1 :: set this.tline to \$capitalize(\$prop(this.tname)) (\$prop(this.omax) choices):"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0060">
         "set this.ttemp to \$element(this,#\$prop(this.tname),\$prop(this.ocnt)) :: if \$prop(this.ttemp) = \$prop(this.tnow) then set this.tline to \$prop(this.tline) [\$prop(this.ttemp)] else set this.tline to \$prop(this.tline) \$prop(this.ttemp)"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0070">
         "if \$prop(this.ttemp) \<\> \$prop(this.tnow) then set this.xvalue to \$prop(this.ttemp)"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0080">
         "add 1 to this.ocnt :: if \$prop(this.ocnt) \<= \$prop(this.omax) then goto 0060"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0090">
         "emit.actor \$prop(this.tline)"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0100">
         "add 1 to this.tcnt :: if \$prop(this.tcnt) \<= \$prop(this.tmax) then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0110">
         "emit.actor \<br/\>Last edited by: \$prop(this.trait:editor)\<br/\>\<br/\>To edit a trait, use the syntax !morph [item] \\"[trait] [value]\\". Example: !morph \$prop(this.trait:superbrief) \\"\$prop(this.xtrait) \$prop(this.xvalue)\\" :: goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0120">
         "if \$evoke0 \> 1 then goto 0210 // SINGLE EVOKE"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0130">
         "set this.tname to \$lowercase(\$evoke1) :: set this.xtrait to \$prop(this.tname) :: set this.ttemp to \$find(this,#traits,\$prop(this.tname)) :: if \$prop(this.ttemp) \<\> nil then goto 0150"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0140">
         "emit.actor Your !morph detects no editable \\"\$evoke1\\" trait in \$brief(this). :: goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0150">
         "set this.tnow to this.trait:\$prop(this.tname) :: set this.tnow to \$prop(\$prop(this.tnow)) :: set this.omax to \$element(this,#\$prop(this.tname),0) :: set this.ocnt to 1 :: set this.tline to Your !morph of \$brief(this) detects \$prop(this.omax) choices for the \\"\$prop(this.tname)\\" trait:"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0160">
         "set this.ttemp to \$element(this,#\$prop(this.tname),\$prop(this.ocnt)) :: if \$prop(this.ttemp) = \$prop(this.tnow) then set this.tline to \$prop(this.tline) [\$prop(this.ttemp)] else set this.tline to \$prop(this.tline) \$prop(this.ttemp)"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0170">
         "if \$prop(this.ttemp) \<\> \$prop(this.tnow) then set this.xvalue to \$prop(this.ttemp)"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0180">
         "add 1 to this.ocnt :: if \$prop(this.ocnt) \<= \$prop(this.omax) then goto 0160 else emit.actor \$prop(this.tline)\<br/\>"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0190">
         "emit.actor Last edited by: \$prop(this.trait:editor)"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0200">
         "emit.actor \<br/\>To edit the \\"\$prop(this.tname)\\" trait, use the syntax !morph [item] \\"\$prop(this.tname) [value]\\". Example: !morph \$prop(this.trait:superbrief) \\"\$prop(this.tname) \$prop(this.xvalue)\\" :: goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0210">
         "// 2+ EVOKES"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0220">
         "set this.tname to \$lowercase(\$evoke1) :: set this.ttemp to \$find(this,#traits,\$prop(this.tname)) :: if \$prop(this.ttemp) \<\> nil then goto 0240"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0230">
         "emit.actor Your !morph detects no editable \\"\$evoke1\\" trait in \$brief(this). :: goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0240">
         "set this.oname to \$lowercase(\$evoke2) :: set this.ttemp to \$find(this,#\$prop(this.tname),\$prop(this.oname)) :: if \$prop(this.ttemp) \<\> nil then goto 0260"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0250">
         "emit.actor The value \\"\$prop(this.oname)\\" is not valid for the \\"\$prop(this.tname)\\" trait in \$brief(this). :: goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0260">
         "set this.tnow to this.trait:\$prop(this.tname) :: set this.tnow to \$prop(\$prop(this.tnow)) :: if \$prop(this.tnow) \<\> \$prop(this.oname) then goto 0280"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0270">
         "emit.actor The \\"\$prop(this.tname)\\" trait in \$brief(this) is already set to the value \\"\$prop(this.oname)\\". :: goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0280">
         "emit.actor The trait \\"\$prop(this.tname)\\" in \$brief(this) has been !morphed to the value \\"\$prop(this.oname)\\". :: set this.tdetail to this.trait:\$prop(this.tname):detail :: set this.tdetail to \$prop(\$prop(this.tdetail)) :: if \$prop(this.tdetail) = nil then set this.tdetail to default"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0290">
         "set this.trait:\$prop(this.tname) to \$prop(this.oname) :: set this.ttemp to \$sam(\<add-adj adjective=\\"\$this.oname\\" obj=\\"\$this\\" detail=\\"\$this.tdetail\\"/\>) :: set this.ttemp to \$sam(\<rem-adj adjective=\\"\$this.tnow\\" obj=\\"\$this\\" detail=\\"\$this.tdetail\\"/\>) :: set this.trait:editor to \$brief(actor) [\$date]"
      </Core:Property>
      <Core:Property property="bilbo:react:!morph:0300">
         "set this.tmax to nil :: set this.tcnt to nil :: set this.tname to nil :: set this.omax to nil :: set this.ocnt to nil :: set this.tline to nil :: set this.ttemp to nil :: set this.tnow to nil :: set this.xtrait to nil :: set this.xvalue to nil :: set this.tdetail to nil :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0010">
         "if actor.bm:stance = unconscious then return"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0020">
         "if actor.bm:stance = none then goto 0050 else if actor.bm:stance = guarded then goto 0100 else if actor.bm:stance = offensive then goto 0200"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0030">
         "goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0050">
         "rem Default stance (no modifiers)"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0060">
         "set actor.bm:stance to none :: set actor.bm:strmod to 1 :: set actor.bm:offmod to 1 :: set actor.bm:defmod to 1 :: self\} \{ready\|prepared\}."
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0070">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0100">
         "rem Guarded stance"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0110">
         "set actor.bm:stance to guarded :: set actor.bm:strmod to 0.8 :: set actor.bm:offmod to 1 :: set actor.bm:defmod to 1.4 ::"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0120">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0200">
         "rem Offensive stance"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0210">
         "set actor.bm:stance to offensive :: set actor.bm:strmod to 1.2 :: set actor.bm:offmod to 1.2 :: set actor.bm:defmod to 0.8"
      </Core:Property>
      <Core:Property property="bilbo:react:auto-hold:0220">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0010">
         "if actor.bm:busy = nil then goto 0030 :: if actor.bm:busy = 0 then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0020">
         "emit.actor You are currently busy. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0030">
         "if actor.bm:fighting = true then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0040">
         "emit.actor You are currently not in a fight. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0050">
         "set this.lastslap to 0 :: if actor.bm:stance \<\> unconscious then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0060">
         "emit.actor You are currently unconscious and can not fight. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0070">
         "if actor.base:stance = 5 then goto 0090"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0080">
         "emit.actor You need to be standing to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0090">
         "if this.careforopponent = false then goto 0110 else if \$obj(actor.bm:opponent).base:stance = 5 then goto 0110"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0100">
         "emit.actor Your opponent needs to be standing. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:canfight:0110">
         "set this.careforopponent to nil :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:gaze">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:gaze:0010">
         "set this.careforopponent to false :: call bilbo:react:canfight"
      </Core:Property>
      <Core:Property property="bilbo:react:gaze:0020">
         "if actor.bm:endurance \< 30 then set this.estr to extremely tired else if actor.bm:endurance \< 40 then set this.estr to very tired else if actor.bm:endurance \< 50 then set this.estr to quite tired else if actor.bm:endurance \< 60 then set this.estr to tired else if actor.bm:endurance \< 70 then set this.estr to very strained else if actor.bm:endurance \< 80 then set this.estr to quite strained else if actor.bm:endurance \< 90 then set this.estr to a little strained else set this.estr to ready"
      </Core:Property>
      <Core:Property property="bilbo:react:gaze:0030">
         "if actor.bm:health \< 30 then set this.hstr to about to collapse else if actor.bm:health \< 40 then set this.hstr to your legs feel very heavy else if actor.bm:health \< 50 then set this.hstr to quite bruised else if actor.bm:health \< 60 then set this.hstr to a little bruised else if actor.bm:health \< 70 then set this.hstr to slightly bruised else if actor.bm:health \< 80 then set this.hstr to considerately well else if actor.bm:health \< 90 then set this.hstr to good else set this.hstr to untouched"
      </Core:Property>
      <Core:Property property="bilbo:react:gaze:0040">
         "set this.andstr to but :: if actor.bm:endurance \> 70 then if actor.bm:health \> 70 then set this.andstr to and :: if actor.bm:endurance \< 40 then if actor.bm:health \< 40 then set this.andstr to and"
      </Core:Property>
      <Core:Property property="bilbo:react:gaze:0050">
         "emit.actor You feel \$prop(this.estr) \$prop(this.andstr) \$prop(this.hstr)."
      </Core:Property>
      <Core:Property property="bilbo:react:gaze:0060">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:getblocker">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:getblocker:0010">
         "if \$obj(actor.bm:opponent).imbalanced \> 0 then set this.blocking to \{luckily\|barely\|imbalancedly\|fortunately\|heavily\} else if \$obj(actor.bm:opponent).endurance \< 50 then set this.blocking to \{effortfully\|tiredly\|exhaustedly\} else set this.blocking to \{efficiently\|easily\|swiftly\|skillfully\|naturally\|smoothly\}"
      </Core:Property>
      <Core:Property property="bilbo:react:getblocker:0020">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:gethit">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:gethit:0010">
         "if actor.bm:imbalanced \> 0 then set this.hit to \{luckily\|barely\|imbalancedly\|fortunately\|slowly\} else if actor.bm:endurance \< 50 then set this.hit to \{effortfully\|tiredly\|exhaustedly\|weakly\|softly\|lightly\|forcelessly\} else set this.hit to \{efficiently\|easily\|swiftly\|skillfully\|naturally\|smoothly\|forcefully\|precisely\|directly\|ruthlessly\}"
      </Core:Property>
      <Core:Property property="bilbo:react:gethit:0020">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:getpart">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:getpart:0010">
         "set this.tmp to \$random(7)"
      </Core:Property>
      <Core:Property property="bilbo:react:getpart:0020">
         "if this.tmp = 0 then set this.part to head :: if this.tmp = 1 then set this.part to face :: if this.tmp = 2 then set this.part to nose :: if this.tmp = 3 then set this.part to jaw :: if this.tmp = 4 then set this.part to torso :: if this.tmp = 5 then set this.part to belly :: if this.tmp = 6 then set this.part to chest :: rem *rips hair*"
      </Core:Property>
      <Core:Property property="bilbo:react:getpart:0030">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0010">
         "rem Check for significant changes in health"
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0020">
         "if actor.bm:oldhealth \< 35 then if actor.bm:health \> 34 then if \$random(2) = 1 then emit.actor \{Your arms are trembling heavily, but you feel better than a moment ago.\|Your body feels distant, but the senses are slowly coming back to you.\|You feel yourself swaying, but not as much as a moment ago.\}"
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0030">
         "if actor.bm:oldend \> 25 then if actor.bm:endurance \< 26 then if \$random(2) = 1 then emit.actor \{You shudder \{violently\|heavily\|uncontrollably\}, \{with great effort\|effortfully\|barely\} keeping on two feet."
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0040">
         "if actor.bm:oldend \< 65 then if actor.bm:endurance \> 64 then if \$random(2) = 1 then emit.actor \{You are feeling \{alright\|somewhat rested\|okay\|well\|good\}\|You feel \{alright\|somewhat rested\|okay\|well\|good\}\}."
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0050">
         "if actor.bm:oldend \> 50 then if actor.bm:endurance \< 51 then if \$random(2) = 1 then emit.actor \{Your arms are starting to feel a bit heavy\|Your eyes are a bit heavy\|Your body is aching\|You can taste blood in your mouth\}."
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0060">
         "set actor.bm:oldend to actor.bm:endurance"
      </Core:Property>
      <Core:Property property="bilbo:react:healthcomment:0070">
         "return "
      </Core:Property>
      <Core:Property property="bilbo:react:hit">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0010">
         "rem Actor is hitting his own glove to attack his opponent."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0020">
         "if \$obj(actor) = \$obj(env.this) then goto 0040"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0030">
         "emit.actor You need to be holding the gloves to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0040">
         "call bilbo:react:canfight"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0050">
         "goto 0080"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0080">
         "set this.str to actor.bm:strength :: mul this.str by actor.bm:strmod"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0090">
         "set this.atec to actor.bm:techoffensive :: add actor.bm:bonus to this.atec :: set this.tec to \$obj(actor.bm:opponent).bm:techdefensive :: add \$obj(actor.bm:opponent).bm:bonus to this.tec :: set this.tmp to \$obj(actor.bm:opponent).bm:defmod :: mul this.tec by this.tmp :: set this.tmp to actor.bm:offmod :: mul this.atec by this.tmp :: if \$obj(actor.bm:opponent).bm:imbalanced \> 0 then div this.tec by 1.2 :: if actor.bm:imbalanced \> 0 then div this.atec by 1.2 :: set this.end to \$obj(actor.bm:opponent).bm:endurance :: set this.tmp to 100 :: sub this.end from this.tmp :: div this.tmp by 2 :: add this.tmp to this.end :: div this.end by 100 :: mul this.tec by this.end :: set this.aend to actor.bm:endurance :: set this.tmp to 100 :: sub this.aend from this.tmp :: div this.tmp by 2 :: add this.tmp to this.aend :: div this.aend by 100 :: mul this.atec by this.aend"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0100">
         "set this.hit to \$random(this.atec) :: set this.block to \$random(this.tec)"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0110">
         "if this.hit \> this.block then goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0120">
         "rem Fighter failed to hit."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0130">
         "set this.tmp to this.block :: div this.tmp by 2 :: if this.hit \> this.tmp then goto 0200"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0140">
         "rem Fighter missed totally."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0150">
         "set this.red to \$random(2) :: add 2 to this.red :: sub this.red from actor.bm:endurance :: if actor.bm:endurance \< 1 then set actor.bm:endurance to 1 :: set this.which to 1 :: if actor.bm:report \<\> nil then goto 1000"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0160">
         "set this.she to \$obj(actor.bm:opponent).trait:nominative :: set this.meshe to actor.trait:nominative :: set this.his to \$prop(actor.trait:possessive) :: set this.obj to \$prop(actor.bm:opponent) :: call bilbo:react:getpart"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0170">
         "emit.actor As you \{try to hit\|attempt at hitting\|swing your fist towards\} \$brief(actor.bm:opponent)'s \$prop(this.part), \{you slip and miss, and \$prop(this.she)\|\$prop(this.she) \{makes an evasive move\|steps aside\|leans evasively\} and\} \{easily\|simply\|skillfully\} ignores your attempt. :: emit.audience As \$brief(actor) \{tries to hit\|attempts at hitting\|swings \$prop(this.his) fist towards\} \$brief(this.obj)'s \$prop(this.part), \{\$prop(this.meshe) slips and misses, and \$brief(this.obj)\|\$brief(this.obj) \{makes an evasive move\|steps aside\|leans evasively\} and\} \{easily\|simply\|skillfully\} ignores \$prop(this.his) arm."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0180">
         "goto 0500"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0200">
         "rem Fighter hit was blocked."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0210">
         "set this.red to \$random(3) :: add 2 to this.red :: sub this.red from actor.bm:endurance :: if actor.bm:endurance \< 1 then set actor.bm:endurance to 1 :: set this.red to \$random(2) :: set this.tmp to \$obj(actor.bm:opponent).bm:endurance :: sub this.red from this.tmp :: set \$obj(actor.bm:opponent).bm:endurance to this.tmp :: if \$obj(actor.bm:opponent).bm:endurance \< 1 then set \$obj(actor.bm:opponent).bm:endurance to 1  :: set this.which to 2 :: if actor.bm:report \<\> nil then goto 1000"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0220">
         "set this.she to \$obj(actor.bm:opponent).trait:nominative :: set this.his to \$prop(actor.trait:possessive) :: set this.obj to \$prop(actor.bm:opponent) :: call bilbo:react:getpart"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0230">
         "call bilbo:react:getblocker"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0240">
         "emit.actor As you \{try to hit\|attempt at hitting\|swing your fist towards\} \$brief(actor.bm:opponent)'s \$prop(this.part), \$prop(this.she) \$prop(this.blocking) \{blocks\|parries\|redirects\} your blow. :: emit.audience As \$brief(actor) \{tries to hit\|attempts at hitting\|swings \$prop(this.his) fist towards\} \$brief(this.obj)'s \$prop(this.part), \$prop(this.she) \$prop(this.blocking) \{blocks\|parries\|redirects\} \$prop(this.his) blow."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0250">
         "goto 0500"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0300">
         "rem Hit."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0310">
         "set this.red to \$random(2) :: add 2 to this.red :: sub this.red from actor.bm:endurance :: if actor.bm:endurance \< 1 then set actor.bm:endurance to 1 set this.red to \$random(4) :: set this.red to \$random(3) :: add 3 to this.red :: set this.tmp to \$obj(actor.bm:opponent).bm:endurance :: sub this.red from this.tmp :: set \$obj(actor.bm:opponent).bm:endurance to this.tmp :: if \$obj(actor.bm:opponent).bm:endurance \< 1 then set \$obj(actor.bm:opponent).bm:endurance to 1 :: set this.strval to this.str :: set this.tmp to actor.bm:bonus :: div this.tmp by 5 :: add this.tmp to this.strval :: mul this.strval by this.aend :: div this.strval by 2 :: set this.red to \$random(this.strval) :: add 1 to this.red :: add this.strval to this.red :: set this.tmp to \$obj(actor.bm:opponent).bm:health :: sub this.red from this.tmp  :: set this.which to 3 :: if actor.bm:report \<\> nil then goto 1000"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0320">
         "if this.tmp \< 0 then set this.tmp to 0 :: set \$obj(actor.bm:opponent).bm:health to this.tmp"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0330">
         "set this.she to \$obj(actor.bm:opponent).trait:nominative :: set this.his to \$prop(actor.trait:possessive) :: set this.obj to \$prop(actor.bm:opponent) :: call bilbo:react:getpart"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0340">
         "call bilbo:react:gethit"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0350">
         "emit.actor You \$prop(this.hit) \{extend your fist\|swing your fist\}, \{hitting\|smacking\|slapping\|knocking it against\} \$brief(this.obj)'s \$prop(this.part). :: emit.audience \$brief(actor) \$prop(this.hit) \{extends \$prop(this.his) fist\|swings \$prop(this.his) fist\}, \{hitting\|smacking\|slapping\|knocking it against\} \$brief(this.obj)'s \$prop(this.part)."
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0360">
         "set this.tmp to \$random(2) :: add 1 to this.tmp :: set this.tmp2 to \$obj(actor.bm:opponent).bm:imbalanced :: if this.tmp2 = nil then set this.tmp2 to 0 :: add this.tmp2 to this.tmp :: set \$obj(actor.bm:opponent).bm:imbalanced to this.tmp"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0370">
         "goto 0500"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:0500">
         "rem Common for all attacks. :: set actor.bm:bonus to 0 :: set this.tmp to \$obj(actor.bm:opponent).bm:bonus :: add 10 to this.tmp :: set \$obj(actor.bm:opponent).bm:bonus to this.tmp :: if actor.bm:endurance \< 40 then add \$random(2) to actor.bm:busy :: set actor.bm:imbalanced to \$random(3) :: add 1 to actor.bm:busy :: add 1 to actor.bm:imbalanced"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:1000">
         "rem Report a hit"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:1010">
         "set this.rtmp to \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):swings :: add 1 to this.rtmp :: set \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):swings to this.rtmp"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:1020">
         "if this.which \< 3 then set this.rtmp to \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):misses else set this.rtmp to \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):hits :: add 1 to this.rtmp :: if this.which \< 3 then set \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):misses to this.rtmp else set \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):hits to this.rtmp"
      </Core:Property>
      <Core:Property property="bilbo:react:hit:1030">
         "if this.which = 1 then goto 0160 else if this.which = 2 then goto 0220 else goto 0320"
      </Core:Property>
      <Core:Property property="bilbo:react:hold">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0010">
         "rem Make sure fighter is able. (take a stance)"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0020">
         "set this.careforopponent to false :: call bilbo:react:canfight"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0030">
         "set this.him to \$prop(actor.trait:objective) :: set this.his to \$prop(actor.trait:possessive)"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0040">
         "if \$adverb = guardedly then goto 0100 else if \$adverb = offensively then goto 0200 else if \$adverb = aggressively then goto 0200 else if \$adverb = defensively then goto 0100 else if \$adverb = guardingly then goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0050">
         "rem Default stance (no modifiers)"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0060">
         "set actor.bm:stance to none :: set actor.bm:strmod to 1 :: set actor.bm:offmod to 1 :: set actor.bm:defmod to 1 :: emit.actor You \{stand\|remain\|hold yourself\} \{ready\|prepared\}. :: emit.audience \$brief(actor) \{stands\|remains\|holds \$prop(this.him)self\} \{ready\|prepared\}."
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0070">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0100">
         "rem Guarded stance"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0110">
         "set actor.bm:stance to guarded :: set actor.bm:strmod to 0.8 :: set actor.bm:offmod to 1 :: set actor.bm:defmod to 1.4 :: emit.actor You \{stand in\|remain in\|hold\} \{a guarded\|a defensive\|a careful\|an unoffensive\} stance. :: emit.audience \$brief(actor) \{stands in\|remains in\|holds\} \{a guarded\|a defensive\|a careful\|an unoffensive\} stance."
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0120">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0200">
         "rem Offensive stance"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0210">
         "set actor.bm:stance to offensive :: set actor.bm:strmod to 1.2 :: set actor.bm:offmod to 1.2 :: set actor.bm:defmod to 0.8 :: emit.actor You \{stand in\|remain in\|hold\} \{an offensive\|an aggressive\} stance. :: emit.audience \$brief(actor) \{stands in\|remains in\|holds\} \{an offensive\|an aggressive\} stance."
      </Core:Property>
      <Core:Property property="bilbo:react:hold:0220">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:hold:1000">
         "if actor.bm:stance = none then goto 0050 else if actor.bm:stance = guarded then goto 0100 else if actor.bm:stance = offensive then goto 0200"
      </Core:Property>
      <Core:Property property="bilbo:react:raise">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:raise:0010">
         "call bilbo:react:canfight"
      </Core:Property>
      <Core:Property property="bilbo:react:raise:0020">
         "set actor.bm:defmod to 1.6"
      </Core:Property>
      <Core:Property property="bilbo:react:raise:0030">
         "set actor.bm:offmod to 0.5"
      </Core:Property>
      <Core:Property property="bilbo:react:raise:0040">
         "set actor.bm:busy to 3 :: set actor.bm:re-stance to true"
      </Core:Property>
      <Core:Property property="bilbo:react:raise:0050">
         "emit.actor You \{prepare\|brace\} yourself to block a hit."
      </Core:Property>
      <Core:Property property="bilbo:react:raise:0060">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0010">
         "set actor.bm:opponent to \$env(this) :: set actor.bm:health to 100 :: set actor.bm:endurance to 100 :: set actor.bm:strmod to 1 :: set actor.bm:bonus to 0 :: set actor.bm:abort to nil :: set actor.bm:offmod to 1 :: set actor.bm:defmod to 1 :: set actor.bm:stance to none :: set this.lastslap to 0 :: rem strength/technique/stamina works like this: :: rem 0-(bm:strength) damage per hit; :: rem random of (bm:techoffensive) in comparison to random of ([opponent's]bm:techdefensive) -\> higher = successfully performed hit, and lower = failed; :: rem health/endurance regain is depending on stamina"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0020">
         "if actor.bm:strength = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0030">
         "if other.bm:stamina = nil then goto 0080"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0040">
         "if other.bm:techoffensive = nil then goto 0090"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0050">
         "if other.bm:techdefensive = nil then goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0060">
         "rem Both fighters will set their own and their opponent's relative strength. This is due to the fact that if a fighter is in his first game, his values will not be set until he taps his opponent's gloves for the first time (and if his opponent taps first, he has no values to compare to). :: set this.tmp to \$obj(actor.bm:opponent).bm:strength :: if this.tmp = nil then goto 0200 else goto 1000"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0070">
         "if actor.base:strength \< 2.1 then set actor.bm:strength to 2 else if actor.base:strength \< 3.1 then set actor.bm:strength to 3 else if actor.base:strength \< 4.1 then set actor.bm:strength to 4 else if actor.base:strength \< 5.1 then set actor.bm:strength to 5 else if actor.base:strength \< 10.1 then set actor.bm:strength to 10 else if actor.base:strength \< 15.1 then set actor.bm:strength to 15 else set actor.bm:strength to 20 :: goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0080">
         "set actor.bm:stamina to actor.skill:fatigue :: goto 0040"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0090">
         "set actor.bm:techoffensive to 50 :: goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0100">
         "set other.bm:techdefensive to 40 :: goto 0060"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:0200">
         "set this.tmp to nil :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:1000">
         "rem Either this is the second fighter's values being set up or the fighters are veterans. Firstly, we shall set up our own relative strength:"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:1010">
         "set this.tmp2 to actor.bm:strength :: sub this.tmp from this.tmp2 :: div this.tmp2 by 3 :: add actor.bm:strength to this.tmp2 :: set actor.bm:strelative to this.tmp2"
      </Core:Property>
      <Core:Property property="bilbo:react:setup_vals:1020">
         "rem Now, we set up our opponent's relative strength: :: set this.tmp to actor.bm:strength :: set this.tmp2 to \$obj(actor.bm:opponent).bm:strength :: sub this.tmp from this.tmp2 :: div this.tmp2 by 3 :: add \$obj(actor.bm:opponent).bm:strength to this.tmp2 :: set \$obj(actor.bm:opponent).bm:strelative to this.tmp2 :: set this.tmp2 to nil :: goto 0200"
      </Core:Property>
      <Core:Property property="bilbo:react:tap">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0010">
         "set this.opponent to \$obj(env.this) :: if \$env(this) \<\> actor then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0020">
         "emit.actor (Tap your opponents boxing gloves to accept or issue a challenge). :: exit true"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0030">
         "if this.base:clothing:worn = 1 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0040">
         "emit.actor (Your opponent needs to be wearing boxing gloves for you to be able to do that.) :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0050">
         "if \$obj(this.opponent).bm:opponent \<\> nil then if \$obj(this.opponent).bm:opponent \<\> actor then goto 1000 :: if actor.bm:opponent = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0060">
         "emit.actor You are already in a fight, silly! :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0070">
         "rem Since this is the opponent's gloves, and other is oneself, env.this = the opponent himself. So, set up the values for the boxing match in the first."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0080">
         "call bilbo:react:setup_vals"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0090">
         "if \$obj(this.opponent).bm:opponent \<\> nil then goto 0140 :: rem The actor is issuing a challenge."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0100">
         "emit.actor You challenge \$brief(this.opponent) to a game of boxing. :: emit.audience \$brief(actor) challenges \$brief(this.opponent) to a game of boxing. :: set actor.bm:fighting to true"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0110">
         "delay 5 returning false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0120">
         "add 5 to this.lastslap :: if this.lastslap \> 59 then goto 3000"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0130">
         "if \$obj(this.opponent).bm:fighting = true then goto 0160 :: goto 0110"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0140">
         "rem The actor is accepting a challenge."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0150">
         "set actor.bm:fighting to true :: emit.actor You accept \$brief(this.opponent)'s challenge. :: emit.audience \$brief(actor) accepts \$brief(this.opponent)'s challenge."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0160">
         "set actor.bm:imbalanced to nil :: set actor.bm:busy to nil"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0170">
         "if actor.bm:busy \> 0 then goto 6000 else if actor.bm:imbalanced \> 0 then goto 6000 else if this.flipper \<\> nil then goto 6500 else delay 2 returning false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0180">
         "add 2 to this.lastslap :: if this.lastslap \> 599 then goto 2000 :: if \$obj(actor.bm:opponent).bm:fighting = nil then goto 2000 :: if \$obj(actor.bm:opponent).bm:abort = true then goto 2500"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0190">
         "if other.bm:health = 100 then goto 0210"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0200">
         "set this.end to actor.bm:endurance :: set this.tmp to 100 :: sub this.end from this.tmp :: div this.tmp by 2 :: add this.tmp to this.end :: div this.end by 100 :: if actor.bm:imbalanced \> 0 then div this.end by 1.2 :: set this.tmp to actor.bm:stamina :: add this.tmp to actor.bm:health :: if this.flipper \<\> nil then if actor.bm:health \> 25 then set this.flipper to nil :: if actor.bm:health \> 100 then set actor.bm:health to 100"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0210">
         "if actor.bm:endurance \< 20 then set actor.bm:endurance to 20 :: if actor.bm:endurance = actor.bm:health then goto 0170 :: add 1 to this.restval :: if this.restval \> 2 then goto 5000"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0220">
         "if other.bm:health \< 25 then goto 0500 else goto 3500"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0230">
         "rem The character falls unconscious."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0240">
         "emit.actor Your vision \{blackens\|fades\|blurs\} and you \{distantly\|absently\|uncaringly\|softly\|gently\} feel yourself \{fall\|stumble\|collapse\} to the floor. [ooc: a good roleplayer would not do much except perhaps moan and groan at this point, until he regains his wits.] :: emit.audience \$brief(actor) \{stumbles\|falls\|collapses\} to the floor, \{unconscious\|lifeless\|dazedly\|softly\}. :: force actor to lie :: set this.flipper to 1 :: set actor.bm:stance to unconscious :: set this.a to 20 :: set this.timetmp to 0 ::"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0250">
         "delay 1 returning false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0260">
         "add 1 to this.timetmp :: emit.actor \$prop(this.timetmp) ... :: if actor.base:stance \<\> 3 then goto 1500"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0270">
         "add 1 to this.tim :: if this.tim \> this.a then emit.actor [You are still unconscious\{, and will receive a message when you regain your wits.\|.\|, but are regaining your health rapidly.\}] :: if this.tim \> this.a then set this.a to 60 :: if this.tim \> this.a then set this.tim to 0 :: set this.tmp to \$random(other.bm:stamina) :: add 1 to this.tmp :: add this.tmp to other.bm:health :: set this.tmp to \$random(other.bm:stamina) :: add 1 to this.tmp :: add this.tmp to other.bm:endurance :: if actor.bm:health \> 100 then set actor.bm:health to 100 :: if actor.bm:endurance \> actor.bm:health then set actor.bm:endurance to actor.bm:health"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0280">
         "if other.bm:health \> 30 then goto 0300 else if other.bm:health \> 25 then if \$random(2) = 1 then goto 0300 else if other.bm:health \> 20 then if \$random(4) = 1 then goto 0300"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0290">
         "goto 0250"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0300">
         "emit.actor You \{bemusedly\|confusedly\|suddenly\|slowly\|painfully\} regain \{consciousness\|your wits\|yourself\}. [you are still lying down, and need to stand up.] :: set actor.bm:stance to none :: emit.audience \$brief(actor) \{seems\|appears\} to regain \{consciousness\|\$prop(actor.trait:possessive) wits\|\$prop(actor.trait:objective)self\}."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0310">
         "goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0500">
         "rem Risk of falling unconscious."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0510">
         "set this.tmp to actor.bm:health"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0520">
         "div this.tmp by 5 :: if this.tmp \< 1 then set this.tmp to 1"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:0530">
         "if \$random(this.tmp) = 0 then goto 0230 :: goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:1000">
         "emit.actor That person is fighting/challenging someone else."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:1010">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:1200">
         "rem Report a knock-out."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:1210">
         "set this.tmp to \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):falls :: add 1 to this.tmp :: set this.flipper to nil :: set this.timetmp to nil :: set \$obj(actor.bm:report).stats:\$prop(actor.bm:reportqueue):falls to this.tmp :: goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:1500">
         "emit.actor As you \{attempt\|try\|begin\} to stand up, your vision \{fails to focus\|blurs\|blackens\} and you vaguely notice being on the floor again :: emit.audience \$brief(actor) \{begins\|starts\|attempts\|tries\} to get up, but \{\$prop(actor.trait:possessive) eyes roll back into \$prop(actor.trait:possessive) head and \$prop(actor.trait:nominative)\|\$prop(actor.trait:nominative) fails and\|\$prop(actor.trait:nominative) merely \{stumbles\|raises an inch\} before \$prop(actor.trait:nominative)\} falls down again. :: force actor to lie :: goto 0270"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2000">
         "rem The match seems to have been aborted."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2010">
         "if actor.bm:fighting = nil then goto 4000 :: set \$obj(actor.bm:opponent).bm:fighting to nil :: set actor.bm:fighting to nil"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2020">
         "emit.audience The game between \$brief(actor) and \$brief(this.opponent) has ended due to inactivity. :: emit.actor The game between you and \$brief(this.opponent) has ended due to inactivity."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2030">
         "goto 4000"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2500">
         "rem Fighter has won the match! (opponent has removed his gloves) :: add 1 to actor.bm:record:wins :: add 1 to actor.bm:record:matches :: set this.tmp to \$obj(actor.bm:opponent).bm:record:losses :: add 1 to this.tmp :: set \$obj(actor.bm:opponent).bm:record:losses to this.tmp :: set this.tmp to \$obj(actor.bm:opponent).bm:record:matches :: add 1 to this.tmp :: set \$obj(actor.bm:opponent).bm:record:matches to this.tmp :: set \$obj(actor.bm:opponent).bm:abort to nil :: if actor.bm:report \<\> nil then call bilbo:react:upgrade"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2510">
         "if actor.bm:fighting = nil then goto 4000 :: set \$obj(actor.bm:opponent).bm:fighting to nil :: set actor.bm:fighting to nil :: set this.his to \$obj(this.opponent).trait:possessive"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2520">
         "emit.audience \$brief(this.opponent) has removed \$prop(this.his) gloves, declaring \$prop(this.his) defeat. \$brief(actor) has won the match! :: emit.actor \$brief(this.opponent) has removed \$prop(this.his) gloves, declaring \$prop(this.his) defeat. You have won the match!"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:2530">
         "goto 4000"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3000">
         "rem The challenge issued has been aborted."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3010">
         "emit.actor Your challenge has been cancelled due to inactivity. :: emit.audience \$brief(actor)'s challenge has been cancelled due to inactivity."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3020">
         "goto 4000"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3500">
         "rem Check for significant changes in endurance"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3510">
         "if actor.bm:oldend \< 35 then if actor.bm:endurance \> 34 then if \$random(2) = 1 then emit.actor \{Your arms are trembling heavily, but you feel better than a moment ago.\|Your body feels distant, but the senses are slowly coming back to you.\|You feel yourself swaying, but not as much as a moment ago.\}"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3520">
         "if actor.bm:oldend \> 25 then if actor.bm:endurance \< 26 then if \$random(2) = 1 then emit.actor \{You \{are\|feel\} \{very\|extremely\|so\} tired!\|Your arms feel uselessly weak.\}"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3530">
         "if actor.bm:oldend \< 65 then if actor.bm:endurance \> 64 then if \$random(2) = 1 then emit.actor \{You are feeling \{alright\|somewhat rested\|okay\|well\|good\}\|You feel \{alright\|somewhat rested\|okay\|well\|good\}\}."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3540">
         "if actor.bm:oldend \> 50 then if actor.bm:endurance \< 51 then if \$random(2) = 1 then emit.actor \{Your arms are starting to feel a bit heavy\|Your eyes are a bit heavy\|Your body is aching\|You can taste blood in your mouth\}."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:3550">
         "set actor.bm:oldend to actor.bm:endurance :: goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:4000">
         "rem Clear variables."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:4010">
         "set actor.bm:strmod to nil :: set actor.bm:offmod to nil :: set actor.bm:defmod to nil :: set actor.bm:stance to nil :: set actor.bm:health to nil :: set actor.bm:endurance to nil :: set actor.bm:opponent to nil"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:4020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:5000">
         "rem Endurance increasing :: set this.restval to 0 :: add actor.bm:stamina to actor.bm:endurance :: if actor.bm:endurance \> actor.bm:health then set actor.bm:endurance to actor.bm:health"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:5010">
         "goto 0220"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6000">
         "rem Actor is busy/imbalanced. We must do less delay until both are 0"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6010">
         "if this.swift \> 2 then set this.swift to 0 :: delay 1 returning false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6020">
         "add 1 to this.swift"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6030">
         "if actor.bm:busy \> 0 then goto 6100"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6040">
         "if actor.bm:imbalanced \> 0 then goto 6200"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6050">
         "if this.swift \> 2 then goto 0180 else goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6100">
         "sub 1 from actor.bm:busy :: if actor.bm:busy = 0 then goto 6300 :: goto 6040"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6200">
         "sub 1 from actor.bm:imbalanced :: if actor.bm:imbalanced = 0 then emit.actor You \{regain\|find\|have found\|have regained\} your balance. :: goto 6050"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6300">
         "emit.actor Ready. :: if actor.bm:re-stance = true then call bilbo:react:auto-hold"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6310">
         "set actor.bm:re-stance to nil"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6320">
         "goto 6040"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6500">
         "rem Actor has been knocked out but is fit for fight again."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6510">
         "if this.swift \> 2 then set this.swift to 0 :: delay 1 returning false"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6520">
         "add 1 to this.timetmp"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6530">
         "if actor.bm:stance \<\> unconscious then if actor.base:stance = 5 then goto 6600"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6540">
         "if this.swift \> 2 then goto 0180 else goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6600">
         "rem Actor stands up. If a reporter exists, continue with the reporting, else return to the main code. :: if actor.bm:report = nil then goto 7000"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6610">
         "set this.tmp to \$obj(actor.bm:report) :: set this.beller to \$env(this.tmp) :: emit.object \$obj(this.beller) \$brief(actor) was lying for \$prop(this.timetmp) seconds."
      </Core:Property>
      <Core:Property property="bilbo:react:tap:6620">
         "goto 1200"
      </Core:Property>
      <Core:Property property="bilbo:react:tap:7000">
         "set this.flipper to nil :: goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:unwear">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:unwear:0010">
         "if actor.bm:fighting \<\> true then exit true"
      </Core:Property>
      <Core:Property property="bilbo:react:unwear:0020">
         "set actor.bm:abort to true"
      </Core:Property>
      <Core:Property property="bilbo:react:unwear:0030">
         "if actor.bm:report \<\> nil then call bilbo:react:upgrade"
      </Core:Property>
      <Core:Property property="bilbo:react:unwear:0040">
         "exit true"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0010">
         "rem Fidget with actor's fighter values."
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0020">
         "if \$random(3) = 1 then goto 0040"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0030">
         "rem No upgrades this time. Sooooowwy...! :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0040">
         "set this.tmp to \$random(100)"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0050">
         "if this.tmp = 0 then goto 0200 else if this.tmp \< 10 then goto 0100 else if this.tmp \< 55 then goto 0300 else goto 0400"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0060">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0100">
         "rem Wee! The lucky, lucky bastard! (strength upgrade)"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0110">
         "add 1 to actor.bm:strength"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0120">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0200">
         "rem (stamina upgrade)"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0210">
         "add 1 to actor.bm:stamina"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0230">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0300">
         "rem (offensive technique upgrade)"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0310">
         "add 1 to actor.bm:tecoffensive"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0320">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0400">
         "rem (defensive technique upgrade)"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0410">
         "add 1 to actor.bm:tecdefensive"
      </Core:Property>
      <Core:Property property="bilbo:react:upgrade:0420">
         "return"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0010">
         "set this.zcode to \$lookup(Generic:DB:CodeDB) :: set this.zdata to \$lookup(Generic:DB:DataDB) :: set this.zcnt to 1 :: set this.zmax to \$element(this.zdata,#inherits,0)"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0020">
         "set this.ztemp to \$element(this.zdata,#inherits,\$prop(this.zcnt)) :: set this.bilbo:inherit:\$prop(this.ztemp) to \$prop(this.zcode)"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0030">
         "add 1 to this.zcnt :: if \$prop(this.zcnt) \<= \$prop(this.zmax) then goto 0020"
      </Core:Property>
      <Core:Property property="generic">"true"</Core:Property>
      <Core:Property property="kargh:temp">"test"</Core:Property>
      <Core:Property property="revisions">
         (\{ 1186174298, "-", "SYNC" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="skotos:creator">
         "npc:tailor"
      </Core:Property>
      <Core:Property property="trait:binding">"none"</Core:Property>
      <Core:Property property="trait:binding:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:binding:expert">
         "Bookbinder"
      </Core:Property>
      <Core:Property property="trait:brief">
         "plain boxing gloves"
      </Core:Property>
      <Core:Property property="trait:codeobject">
         "Generic:DB:UrClothingPairNoWearDB"
      </Core:Property>
      <Core:Property property="trait:color">"none"</Core:Property>
      <Core:Property property="trait:color:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:color:expert">
         "Dyer"
      </Core:Property>
      <Core:Property property="trait:comment">
         "They are adequately padded to provide both punching power and appropriate hand protection, with laces on the back to be tightened around the wrist."
      </Core:Property>
      <Core:Property property="trait:dataobject">
         "Generic:DB:UrClothingPairNoWearDB"
      </Core:Property>
      <Core:Property property="trait:default-skill">
         "Glover"
      </Core:Property>
      <Core:Property property="trait:default-skillname">
         "alter"
      </Core:Property>
      <Core:Property property="trait:default-skillverb">
         "alter"
      </Core:Property>
      <Core:Property property="trait:desc-version">
         "1"
      </Core:Property>
      <Core:Property property="trait:design">"none"</Core:Property>
      <Core:Property property="trait:design:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:design:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:editor">
         "nobody"
      </Core:Property>
      <Core:Property property="trait:embroidery">
         "none"
      </Core:Property>
      <Core:Property property="trait:embroidery:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:embroidery:expert">
         "Embroiderer"
      </Core:Property>
      <Core:Property property="trait:examine">
         "A pair of plain clothes."
      </Core:Property>
      <Core:Property property="trait:fit">"none"</Core:Property>
      <Core:Property property="trait:fit:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:fit:expert">
         "Glover"
      </Core:Property>
      <Core:Property property="trait:inscription">
         "none"
      </Core:Property>
      <Core:Property property="trait:isare">"are"</Core:Property>
      <Core:Property property="trait:look">
         "A pair of plain clothes."
      </Core:Property>
      <Core:Property property="trait:material">
         "none"
      </Core:Property>
      <Core:Property property="trait:material:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:material:expert">
         "Glover"
      </Core:Property>
      <Core:Property property="trait:metal">"none"</Core:Property>
      <Core:Property property="trait:metal:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:metal:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:shape">"none"</Core:Property>
      <Core:Property property="trait:shape:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:shape:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:startend">"300"</Core:Property>
      <Core:Property property="trait:stone">"none"</Core:Property>
      <Core:Property property="trait:stone:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:stone:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:superbrief">
         "boxing gloves"
      </Core:Property>
      <Core:Property property="trait:symbol">"none"</Core:Property>
      <Core:Property property="trait:symbol:detail">
         "pattern"
      </Core:Property>
      <Core:Property property="trait:symbol:expert">
         "Embroiderer"
      </Core:Property>
      <Core:Property property="trait:symboladj">
         "embroidered"
      </Core:Property>
      <Core:Property property="trait:symboltype">
         "embroidery"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="zcnt">"1"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
