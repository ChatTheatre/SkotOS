<object clone="/base/obj/thing" owner="Generic">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Generic:food:UrFood)"/>
    <Base:Bulk immobile="false" mass="0.4" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cake"/>
            <Base:SName sname="slice"/>
            <Base:SName sname="food"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cakes"/>
            <Base:PName pname="foods"/>
            <Base:PName pname="slices"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="green"/>
          <Base:Adjective adjective="grey"/>
          <Base:Adjective adjective="grey-green"/>
          <Base:Adjective adjective="peach"/>
          <Base:Adjective adjective="uneven"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:brief)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" closed="false" locked="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="trait:brief">
         "uneven peach colored cake, cut into slices"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:examine">
         "An uneven peach colored cake that has been slightly burnt and poorly covered with lumpy green-grey frosting. Upon a closer inspection you note that there are unidentifiable green flecks embedded in it. It has been cut into slices."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:initialslices">
         10
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:look">
         "An uneven peach colored cake that appears to have been slightly burnt and covered with lumpy green-grey frosting. It has been cut into slices."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:numberofslices">
         10
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:old:brief">
         "stale uneaven cake"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:old:examine">
         "An uneven peach colored cake that has been slightly burnt and poorly covered with lumpy grey frosting. Upon a closer inspection you note that there are unidentifiable green flecks embedded in it. If it wasn't unappetising before it certainly is now."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:old:look">
         "An uneven peach colored cake that appears to have been slightly burnt and covered with lumpy grey frosting. It has been cut into slices."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:old:variant">
         "stale"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:smell">
         "A hint of peach mixed in with some spices that you can't quite identify."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:superbrief">
         "cake"
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:taste">
         "none."
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:tasted">
         0
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="bilbo:inherit:react:eat">
         \<Generic:DB:FoodDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:nibble">
         \<Generic:DB:FoodDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:smell">
         \<Generic:DB:FoodDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:sniff">
         \<Generic:DB:FoodDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:taste">
         \<Generic:DB:FoodDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:solo:startsub">
         \<Generic:DB:FoodDB\>
      </Core:Property>
      <Core:Property property="bilbo:react:taste">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0010">
         "exit continue"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0020">
         "exit continue"
      </Core:Property>
      <Core:Property property="merry:lib:getsliceofcake">
         X[M] object slice;



if(this."trait:numberOfSlices" \> this."trait:initialSlices"/2)
\{
EmitTo(\$actor, "You take a slice of cake.");
EmitIn(\$actor."base:environment",\$actor."trait:brief" + " takes a slice of cake.",\$actor);
\}

if((this."trait:numberOfSlices" \<= (int)this."trait:initialSlices" / 2)
\&\& (this."trait:numberOfSlices" \> 1))
\{
EmitTo(\$actor, "You take a slice of cake noticing that half of the cake has now gone.");
EmitIn(\$actor."base:environment",\$actor."trait:brief" + " takes a slice of cake.",\$actor);

this."trait:look" = "An uneven peach colored cake that appears to have been slightly burnt and covered with lumpy green-grey frosting. It has been cut into slices over half of which are gone.";

this."trait:examine" = "An uneven peach colored cake that has been slightly burnt and poorly covered with lumpy green-grey frosting. Upon a closer inspection you note that there are unidentifiable green flecks embedded in it. It has been cut into slices over half of which are gone.";
\}

if(this."trait:numberOfSlices" == 1)
\{
EmitTo(\$actor, "You take a the last slice of cake.");
EmitIn(\$actor."base:environment",\$actor."trait:brief" + " takes the last slice of cake.",\$actor);
Slay(this);
\}
else
\{
this."trait:numberOfSlices"--;
if (this."trait:numberOfSlices" == 1)
\{
this."trait:look" = "An uneven peach colored cake that appears to have been slightly burnt and covered with lumpy green-grey frosting. There is only one slice left.";

this."trait:examine" = "An uneven peach colored cake that has been slightly burnt and poorly covered with lumpy green-grey frosting. Upon a closer inspection you note that there are unidentifiable green flecks embedded in it. There is only one slice left.";
\}
\}

/*give the actor some cake*/
slice = Spawn(\$\{Marrach:Coders:kuang:foodanddrink:food:ophiCake:ophiCakeSlice\});
slice."base:environment" = \$actor;
      </Core:Property>
      <Core:Property property="merry:react:take">
         X[M] Call (this,"getSliceOfCake");
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="trait:brief">
         "uneven peach colored cake, cut into slices"
      </Core:Property>
      <Core:Property property="trait:examine">
         "An uneven peach colored cake that has been slightly burnt and poorly covered with lumpy green-grey frosting. Upon a closer inspection you note that there are unidentifiable green flecks embedded in it. It has been cut into slices."
      </Core:Property>
      <Core:Property property="trait:initialslices">
         10
      </Core:Property>
      <Core:Property property="trait:look">
         "An uneven peach colored cake that appears to have been slightly burnt and covered with lumpy green-grey frosting. It has been cut into slices."
      </Core:Property>
      <Core:Property property="trait:numberofslices">
         10
      </Core:Property>
      <Core:Property property="trait:old:brief">
         "stale uneaven cake"
      </Core:Property>
      <Core:Property property="trait:old:examine">
         "An uneven peach colored cake that has been slightly burnt and poorly covered with lumpy grey frosting. Upon a closer inspection you note that there are unidentifiable green flecks embedded in it. If it wasn't unappetising before it certainly is now."
      </Core:Property>
      <Core:Property property="trait:old:look">
         "An uneven peach colored cake that appears to have been slightly burnt and covered with lumpy grey frosting. It has been cut into slices."
      </Core:Property>
      <Core:Property property="trait:old:variant">
         "stale"
      </Core:Property>
      <Core:Property property="trait:smell">
         "A hint of peach mixed in with some spices that you can't quite identify."
      </Core:Property>
      <Core:Property property="trait:superbrief">
         "cake"
      </Core:Property>
      <Core:Property property="trait:taste">"none."</Core:Property>
      <Core:Property property="trait:tasted">0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="970534119" state="Open" user="lisad">
           Hard maple candy
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
